
calculator using function.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003da  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000430  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  00000afc  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000b81  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000050  00000000  00000000  00000ba1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000001ce  00000000  00000000  00000bf1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000b5  00000000  00000000  00000dbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000041c  00000000  00000000  00000e74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000070  00000000  00000000  00001290  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000d1  00000000  00000000  00001300  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000001e  00000000  00000000  000013d1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
void data(char d);
void display(const char *s);
char kepad();

int main(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	0f 92       	push	r0
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62
	 DDRA=0xf0;
  76:	8a e3       	ldi	r24, 0x3A	; 58
  78:	90 e0       	ldi	r25, 0x00	; 0
  7a:	20 ef       	ldi	r18, 0xF0	; 240
  7c:	fc 01       	movw	r30, r24
  7e:	20 83       	st	Z, r18
		DDRC=0xff;
  80:	84 e3       	ldi	r24, 0x34	; 52
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	2f ef       	ldi	r18, 0xFF	; 255
  86:	fc 01       	movw	r30, r24
  88:	20 83       	st	Z, r18
		DDRD=0xff;
  8a:	81 e3       	ldi	r24, 0x31	; 49
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	2f ef       	ldi	r18, 0xFF	; 255
  90:	fc 01       	movw	r30, r24
  92:	20 83       	st	Z, r18
		command(0x38);
  94:	88 e3       	ldi	r24, 0x38	; 56
  96:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <command>
		command(0x80);
  9a:	80 e8       	ldi	r24, 0x80	; 128
  9c:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <command>
		command(0x0c);
  a0:	8c e0       	ldi	r24, 0x0C	; 12
  a2:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <command>
		command(0x06);
  a6:	86 e0       	ldi	r24, 0x06	; 6
  a8:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <command>
		command(0x01);
  ac:	81 e0       	ldi	r24, 0x01	; 1
  ae:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <command>
        while(1)
        {
        	command(0x80);
  b2:	80 e8       	ldi	r24, 0x80	; 128
  b4:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <command>
	        char k=kepad();
  b8:	0e 94 63 00 	call	0xc6	; 0xc6 <kepad>
  bc:	89 83       	std	Y+1, r24	; 0x01
		    data(k);
  be:	89 81       	ldd	r24, Y+1	; 0x01
  c0:	0e 94 9a 01 	call	0x334	; 0x334 <data>
	    }	
  c4:	f6 cf       	rjmp	.-20     	; 0xb2 <main+0x46>

000000c6 <kepad>:
		
}
char kepad()
{
  c6:	df 93       	push	r29
  c8:	cf 93       	push	r28
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
  ce:	27 97       	sbiw	r28, 0x07	; 7
  d0:	0f b6       	in	r0, 0x3f	; 63
  d2:	f8 94       	cli
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	0f be       	out	0x3f, r0	; 63
  d8:	cd bf       	out	0x3d, r28	; 61
	delay(20);
  da:	84 e1       	ldi	r24, 0x14	; 20
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	0e 94 3d 01 	call	0x27a	; 0x27a <delay>
	int t=0;
  e2:	1a 82       	std	Y+2, r1	; 0x02
  e4:	19 82       	std	Y+1, r1	; 0x01
  e6:	01 c0       	rjmp	.+2      	; 0xea <kepad+0x24>
		}
		if (t==1)
		{
			return(s);
		}
	}		
  e8:	00 00       	nop
	delay(20);
	int t=0;
	char s;
	while (1)
	{
	    PORTA=0x7f;
  ea:	8b e3       	ldi	r24, 0x3B	; 59
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	2f e7       	ldi	r18, 0x7F	; 127
  f0:	fc 01       	movw	r30, r24
  f2:	20 83       	st	Z, r18
		char i=PINA;
  f4:	89 e3       	ldi	r24, 0x39	; 57
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	fc 01       	movw	r30, r24
  fa:	80 81       	ld	r24, Z
  fc:	8c 83       	std	Y+4, r24	; 0x04
		i=i&0xff;
		if(i==0x7e)
  fe:	8c 81       	ldd	r24, Y+4	; 0x04
 100:	8e 37       	cpi	r24, 0x7E	; 126
 102:	31 f4       	brne	.+12     	; 0x110 <kepad+0x4a>
		{
			s='7';
 104:	87 e3       	ldi	r24, 0x37	; 55
 106:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	9a 83       	std	Y+2, r25	; 0x02
 10e:	89 83       	std	Y+1, r24	; 0x01
		}
			if(i==0x7d)
 110:	8c 81       	ldd	r24, Y+4	; 0x04
 112:	8d 37       	cpi	r24, 0x7D	; 125
 114:	31 f4       	brne	.+12     	; 0x122 <kepad+0x5c>
		{
			s='4';
 116:	84 e3       	ldi	r24, 0x34	; 52
 118:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	9a 83       	std	Y+2, r25	; 0x02
 120:	89 83       	std	Y+1, r24	; 0x01
		}
			if(i==0x7b)
 122:	8c 81       	ldd	r24, Y+4	; 0x04
 124:	8b 37       	cpi	r24, 0x7B	; 123
 126:	31 f4       	brne	.+12     	; 0x134 <kepad+0x6e>
		{
			s='1';
 128:	81 e3       	ldi	r24, 0x31	; 49
 12a:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	9a 83       	std	Y+2, r25	; 0x02
 132:	89 83       	std	Y+1, r24	; 0x01
		}
			if(i==0x77)
 134:	8c 81       	ldd	r24, Y+4	; 0x04
 136:	87 37       	cpi	r24, 0x77	; 119
 138:	31 f4       	brne	.+12     	; 0x146 <kepad+0x80>
		{
			s='c';
 13a:	83 e6       	ldi	r24, 0x63	; 99
 13c:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	9a 83       	std	Y+2, r25	; 0x02
 144:	89 83       	std	Y+1, r24	; 0x01
		}
			
        PORTA=0xbf;
 146:	8b e3       	ldi	r24, 0x3B	; 59
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	2f eb       	ldi	r18, 0xBF	; 191
 14c:	fc 01       	movw	r30, r24
 14e:	20 83       	st	Z, r18
		char j=PINA;
 150:	89 e3       	ldi	r24, 0x39	; 57
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	fc 01       	movw	r30, r24
 156:	80 81       	ld	r24, Z
 158:	8d 83       	std	Y+5, r24	; 0x05
		j=j&0xff;
		if (j==0xbe)
 15a:	8d 81       	ldd	r24, Y+5	; 0x05
 15c:	8e 3b       	cpi	r24, 0xBE	; 190
 15e:	31 f4       	brne	.+12     	; 0x16c <kepad+0xa6>
		{
			s='8';
 160:	88 e3       	ldi	r24, 0x38	; 56
 162:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	9a 83       	std	Y+2, r25	; 0x02
 16a:	89 83       	std	Y+1, r24	; 0x01
		}
		if (j==0xbd)
 16c:	8d 81       	ldd	r24, Y+5	; 0x05
 16e:	8d 3b       	cpi	r24, 0xBD	; 189
 170:	31 f4       	brne	.+12     	; 0x17e <kepad+0xb8>
		{
			s='5';
 172:	85 e3       	ldi	r24, 0x35	; 53
 174:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	9a 83       	std	Y+2, r25	; 0x02
 17c:	89 83       	std	Y+1, r24	; 0x01
		}
		if(j==0xbb)
 17e:	8d 81       	ldd	r24, Y+5	; 0x05
 180:	8b 3b       	cpi	r24, 0xBB	; 187
 182:	31 f4       	brne	.+12     	; 0x190 <kepad+0xca>
		{
			s='2';
 184:	82 e3       	ldi	r24, 0x32	; 50
 186:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	9a 83       	std	Y+2, r25	; 0x02
 18e:	89 83       	std	Y+1, r24	; 0x01
		}
		if (j==0xb7)
 190:	8d 81       	ldd	r24, Y+5	; 0x05
 192:	87 3b       	cpi	r24, 0xB7	; 183
 194:	31 f4       	brne	.+12     	; 0x1a2 <kepad+0xdc>
		{
			s='0';
 196:	80 e3       	ldi	r24, 0x30	; 48
 198:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	9a 83       	std	Y+2, r25	; 0x02
 1a0:	89 83       	std	Y+1, r24	; 0x01
		}
		
        PORTA=0xef;
 1a2:	8b e3       	ldi	r24, 0x3B	; 59
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	2f ee       	ldi	r18, 0xEF	; 239
 1a8:	fc 01       	movw	r30, r24
 1aa:	20 83       	st	Z, r18
		char k=PINA;
 1ac:	89 e3       	ldi	r24, 0x39	; 57
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	fc 01       	movw	r30, r24
 1b2:	80 81       	ld	r24, Z
 1b4:	8e 83       	std	Y+6, r24	; 0x06
		k=k&0xff;
		if (k==0xee)
 1b6:	8e 81       	ldd	r24, Y+6	; 0x06
 1b8:	8e 3e       	cpi	r24, 0xEE	; 238
 1ba:	31 f4       	brne	.+12     	; 0x1c8 <kepad+0x102>
		{
			s='9';
 1bc:	89 e3       	ldi	r24, 0x39	; 57
 1be:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	9a 83       	std	Y+2, r25	; 0x02
 1c6:	89 83       	std	Y+1, r24	; 0x01
		}
		if (k==0xed)
 1c8:	8e 81       	ldd	r24, Y+6	; 0x06
 1ca:	8d 3e       	cpi	r24, 0xED	; 237
 1cc:	31 f4       	brne	.+12     	; 0x1da <kepad+0x114>
		{
			s='6';
 1ce:	86 e3       	ldi	r24, 0x36	; 54
 1d0:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	9a 83       	std	Y+2, r25	; 0x02
 1d8:	89 83       	std	Y+1, r24	; 0x01
		}
		if (k==0xeb)
 1da:	8e 81       	ldd	r24, Y+6	; 0x06
 1dc:	8b 3e       	cpi	r24, 0xEB	; 235
 1de:	31 f4       	brne	.+12     	; 0x1ec <kepad+0x126>
		{
			s='3';
 1e0:	83 e3       	ldi	r24, 0x33	; 51
 1e2:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	9a 83       	std	Y+2, r25	; 0x02
 1ea:	89 83       	std	Y+1, r24	; 0x01
		}
		if (k==0xe7)
 1ec:	8e 81       	ldd	r24, Y+6	; 0x06
 1ee:	87 3e       	cpi	r24, 0xE7	; 231
 1f0:	31 f4       	brne	.+12     	; 0x1fe <kepad+0x138>
		{
			s='=';
 1f2:	8d e3       	ldi	r24, 0x3D	; 61
 1f4:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	9a 83       	std	Y+2, r25	; 0x02
 1fc:	89 83       	std	Y+1, r24	; 0x01
		}

		PORTA=0xdf;
 1fe:	8b e3       	ldi	r24, 0x3B	; 59
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	2f ed       	ldi	r18, 0xDF	; 223
 204:	fc 01       	movw	r30, r24
 206:	20 83       	st	Z, r18
		char l=PINA;
 208:	89 e3       	ldi	r24, 0x39	; 57
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	fc 01       	movw	r30, r24
 20e:	80 81       	ld	r24, Z
 210:	8f 83       	std	Y+7, r24	; 0x07
		l=l&0xff;
		if (l==0xde)
 212:	8f 81       	ldd	r24, Y+7	; 0x07
 214:	8e 3d       	cpi	r24, 0xDE	; 222
 216:	31 f4       	brne	.+12     	; 0x224 <kepad+0x15e>
		{
			s='/';
 218:	8f e2       	ldi	r24, 0x2F	; 47
 21a:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	9a 83       	std	Y+2, r25	; 0x02
 222:	89 83       	std	Y+1, r24	; 0x01
		}
		if (l==0xdd)
 224:	8f 81       	ldd	r24, Y+7	; 0x07
 226:	8d 3d       	cpi	r24, 0xDD	; 221
 228:	31 f4       	brne	.+12     	; 0x236 <kepad+0x170>
		{
			s='*';
 22a:	8a e2       	ldi	r24, 0x2A	; 42
 22c:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	9a 83       	std	Y+2, r25	; 0x02
 234:	89 83       	std	Y+1, r24	; 0x01
		}
		if (l==0xdb)
 236:	8f 81       	ldd	r24, Y+7	; 0x07
 238:	8b 3d       	cpi	r24, 0xDB	; 219
 23a:	31 f4       	brne	.+12     	; 0x248 <kepad+0x182>
		{
			s='-';
 23c:	8d e2       	ldi	r24, 0x2D	; 45
 23e:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	9a 83       	std	Y+2, r25	; 0x02
 246:	89 83       	std	Y+1, r24	; 0x01
		}
		if (l==0xd7)
 248:	8f 81       	ldd	r24, Y+7	; 0x07
 24a:	87 3d       	cpi	r24, 0xD7	; 215
 24c:	31 f4       	brne	.+12     	; 0x25a <kepad+0x194>
		{
			s='+';
 24e:	8b e2       	ldi	r24, 0x2B	; 43
 250:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	9a 83       	std	Y+2, r25	; 0x02
 258:	89 83       	std	Y+1, r24	; 0x01
		}
		if (t==1)
 25a:	89 81       	ldd	r24, Y+1	; 0x01
 25c:	9a 81       	ldd	r25, Y+2	; 0x02
 25e:	81 30       	cpi	r24, 0x01	; 1
 260:	91 05       	cpc	r25, r1
 262:	09 f0       	breq	.+2      	; 0x266 <kepad+0x1a0>
 264:	41 cf       	rjmp	.-382    	; 0xe8 <kepad+0x22>
		{
			return(s);
 266:	8b 81       	ldd	r24, Y+3	; 0x03
		}
	}		
					
	
}
 268:	27 96       	adiw	r28, 0x07	; 7
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	f8 94       	cli
 26e:	de bf       	out	0x3e, r29	; 62
 270:	0f be       	out	0x3f, r0	; 63
 272:	cd bf       	out	0x3d, r28	; 61
 274:	cf 91       	pop	r28
 276:	df 91       	pop	r29
 278:	08 95       	ret

0000027a <delay>:
				
				
    
void delay(int x)
{
 27a:	df 93       	push	r29
 27c:	cf 93       	push	r28
 27e:	00 d0       	rcall	.+0      	; 0x280 <delay+0x6>
 280:	00 d0       	rcall	.+0      	; 0x282 <delay+0x8>
 282:	00 d0       	rcall	.+0      	; 0x284 <delay+0xa>
 284:	cd b7       	in	r28, 0x3d	; 61
 286:	de b7       	in	r29, 0x3e	; 62
 288:	9e 83       	std	Y+6, r25	; 0x06
 28a:	8d 83       	std	Y+5, r24	; 0x05
	int i,j;
	for (i=0;i<=x;i++)
 28c:	1a 82       	std	Y+2, r1	; 0x02
 28e:	19 82       	std	Y+1, r1	; 0x01
 290:	13 c0       	rjmp	.+38     	; 0x2b8 <delay+0x3e>
	for(j=0;j<=1000;j++);
 292:	1c 82       	std	Y+4, r1	; 0x04
 294:	1b 82       	std	Y+3, r1	; 0x03
 296:	05 c0       	rjmp	.+10     	; 0x2a2 <delay+0x28>
 298:	8b 81       	ldd	r24, Y+3	; 0x03
 29a:	9c 81       	ldd	r25, Y+4	; 0x04
 29c:	01 96       	adiw	r24, 0x01	; 1
 29e:	9c 83       	std	Y+4, r25	; 0x04
 2a0:	8b 83       	std	Y+3, r24	; 0x03
 2a2:	8b 81       	ldd	r24, Y+3	; 0x03
 2a4:	9c 81       	ldd	r25, Y+4	; 0x04
 2a6:	23 e0       	ldi	r18, 0x03	; 3
 2a8:	89 3e       	cpi	r24, 0xE9	; 233
 2aa:	92 07       	cpc	r25, r18
 2ac:	ac f3       	brlt	.-22     	; 0x298 <delay+0x1e>
				
    
void delay(int x)
{
	int i,j;
	for (i=0;i<=x;i++)
 2ae:	89 81       	ldd	r24, Y+1	; 0x01
 2b0:	9a 81       	ldd	r25, Y+2	; 0x02
 2b2:	01 96       	adiw	r24, 0x01	; 1
 2b4:	9a 83       	std	Y+2, r25	; 0x02
 2b6:	89 83       	std	Y+1, r24	; 0x01
 2b8:	29 81       	ldd	r18, Y+1	; 0x01
 2ba:	3a 81       	ldd	r19, Y+2	; 0x02
 2bc:	8d 81       	ldd	r24, Y+5	; 0x05
 2be:	9e 81       	ldd	r25, Y+6	; 0x06
 2c0:	82 17       	cp	r24, r18
 2c2:	93 07       	cpc	r25, r19
 2c4:	34 f7       	brge	.-52     	; 0x292 <delay+0x18>
	for(j=0;j<=1000;j++);
	
}
 2c6:	26 96       	adiw	r28, 0x06	; 6
 2c8:	0f b6       	in	r0, 0x3f	; 63
 2ca:	f8 94       	cli
 2cc:	de bf       	out	0x3e, r29	; 62
 2ce:	0f be       	out	0x3f, r0	; 63
 2d0:	cd bf       	out	0x3d, r28	; 61
 2d2:	cf 91       	pop	r28
 2d4:	df 91       	pop	r29
 2d6:	08 95       	ret

000002d8 <command>:
void command(char c)
{
 2d8:	df 93       	push	r29
 2da:	cf 93       	push	r28
 2dc:	0f 92       	push	r0
 2de:	cd b7       	in	r28, 0x3d	; 61
 2e0:	de b7       	in	r29, 0x3e	; 62
 2e2:	89 83       	std	Y+1, r24	; 0x01
	PORTC=c;
 2e4:	85 e3       	ldi	r24, 0x35	; 53
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	29 81       	ldd	r18, Y+1	; 0x01
 2ea:	fc 01       	movw	r30, r24
 2ec:	20 83       	st	Z, r18
	PORTD&=~(1<<6);
 2ee:	82 e3       	ldi	r24, 0x32	; 50
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	22 e3       	ldi	r18, 0x32	; 50
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	f9 01       	movw	r30, r18
 2f8:	20 81       	ld	r18, Z
 2fa:	2f 7b       	andi	r18, 0xBF	; 191
 2fc:	fc 01       	movw	r30, r24
 2fe:	20 83       	st	Z, r18
	PORTD|=(1<<7);
 300:	82 e3       	ldi	r24, 0x32	; 50
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	22 e3       	ldi	r18, 0x32	; 50
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	f9 01       	movw	r30, r18
 30a:	20 81       	ld	r18, Z
 30c:	20 68       	ori	r18, 0x80	; 128
 30e:	fc 01       	movw	r30, r24
 310:	20 83       	st	Z, r18
	delay(2);
 312:	82 e0       	ldi	r24, 0x02	; 2
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	0e 94 3d 01 	call	0x27a	; 0x27a <delay>
	PORTD&=~(1<<7);
 31a:	82 e3       	ldi	r24, 0x32	; 50
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	22 e3       	ldi	r18, 0x32	; 50
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	f9 01       	movw	r30, r18
 324:	20 81       	ld	r18, Z
 326:	2f 77       	andi	r18, 0x7F	; 127
 328:	fc 01       	movw	r30, r24
 32a:	20 83       	st	Z, r18
}
 32c:	0f 90       	pop	r0
 32e:	cf 91       	pop	r28
 330:	df 91       	pop	r29
 332:	08 95       	ret

00000334 <data>:
void data(char d)
{
 334:	df 93       	push	r29
 336:	cf 93       	push	r28
 338:	0f 92       	push	r0
 33a:	cd b7       	in	r28, 0x3d	; 61
 33c:	de b7       	in	r29, 0x3e	; 62
 33e:	89 83       	std	Y+1, r24	; 0x01
	PORTC=d;
 340:	85 e3       	ldi	r24, 0x35	; 53
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	29 81       	ldd	r18, Y+1	; 0x01
 346:	fc 01       	movw	r30, r24
 348:	20 83       	st	Z, r18
	PORTD|=(1<<6);
 34a:	82 e3       	ldi	r24, 0x32	; 50
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	22 e3       	ldi	r18, 0x32	; 50
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	f9 01       	movw	r30, r18
 354:	20 81       	ld	r18, Z
 356:	20 64       	ori	r18, 0x40	; 64
 358:	fc 01       	movw	r30, r24
 35a:	20 83       	st	Z, r18
	PORTD|=(1<<7);
 35c:	82 e3       	ldi	r24, 0x32	; 50
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	22 e3       	ldi	r18, 0x32	; 50
 362:	30 e0       	ldi	r19, 0x00	; 0
 364:	f9 01       	movw	r30, r18
 366:	20 81       	ld	r18, Z
 368:	20 68       	ori	r18, 0x80	; 128
 36a:	fc 01       	movw	r30, r24
 36c:	20 83       	st	Z, r18
	delay(2);
 36e:	82 e0       	ldi	r24, 0x02	; 2
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	0e 94 3d 01 	call	0x27a	; 0x27a <delay>
	PORTD&=~(1<<7);
 376:	82 e3       	ldi	r24, 0x32	; 50
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	22 e3       	ldi	r18, 0x32	; 50
 37c:	30 e0       	ldi	r19, 0x00	; 0
 37e:	f9 01       	movw	r30, r18
 380:	20 81       	ld	r18, Z
 382:	2f 77       	andi	r18, 0x7F	; 127
 384:	fc 01       	movw	r30, r24
 386:	20 83       	st	Z, r18
}
 388:	0f 90       	pop	r0
 38a:	cf 91       	pop	r28
 38c:	df 91       	pop	r29
 38e:	08 95       	ret

00000390 <display>:
void display(const char *s)
{
 390:	df 93       	push	r29
 392:	cf 93       	push	r28
 394:	00 d0       	rcall	.+0      	; 0x396 <display+0x6>
 396:	cd b7       	in	r28, 0x3d	; 61
 398:	de b7       	in	r29, 0x3e	; 62
 39a:	9a 83       	std	Y+2, r25	; 0x02
 39c:	89 83       	std	Y+1, r24	; 0x01
	while(*s)
 39e:	10 c0       	rjmp	.+32     	; 0x3c0 <display+0x30>
	{
		data(*s++);
 3a0:	89 81       	ldd	r24, Y+1	; 0x01
 3a2:	9a 81       	ldd	r25, Y+2	; 0x02
 3a4:	fc 01       	movw	r30, r24
 3a6:	20 81       	ld	r18, Z
 3a8:	89 81       	ldd	r24, Y+1	; 0x01
 3aa:	9a 81       	ldd	r25, Y+2	; 0x02
 3ac:	01 96       	adiw	r24, 0x01	; 1
 3ae:	9a 83       	std	Y+2, r25	; 0x02
 3b0:	89 83       	std	Y+1, r24	; 0x01
 3b2:	82 2f       	mov	r24, r18
 3b4:	0e 94 9a 01 	call	0x334	; 0x334 <data>
		delay(2);
 3b8:	82 e0       	ldi	r24, 0x02	; 2
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	0e 94 3d 01 	call	0x27a	; 0x27a <delay>
	delay(2);
	PORTD&=~(1<<7);
}
void display(const char *s)
{
	while(*s)
 3c0:	89 81       	ldd	r24, Y+1	; 0x01
 3c2:	9a 81       	ldd	r25, Y+2	; 0x02
 3c4:	fc 01       	movw	r30, r24
 3c6:	80 81       	ld	r24, Z
 3c8:	88 23       	and	r24, r24
 3ca:	51 f7       	brne	.-44     	; 0x3a0 <display+0x10>
	{
		data(*s++);
		delay(2);
	}
 3cc:	0f 90       	pop	r0
 3ce:	0f 90       	pop	r0
 3d0:	cf 91       	pop	r28
 3d2:	df 91       	pop	r29
 3d4:	08 95       	ret

000003d6 <_exit>:
 3d6:	f8 94       	cli

000003d8 <__stop_program>:
 3d8:	ff cf       	rjmp	.-2      	; 0x3d8 <__stop_program>
