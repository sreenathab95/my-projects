
yes or no.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000666  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a4  00800060  00000666  000006da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000780  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  00000ed1  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000046  00000000  00000000  00000ef1  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000020f  00000000  00000000  00000f37  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000a9  00000000  00000000  00001146  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000064c  00000000  00000000  000011ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000060  00000000  00000000  0000183c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000009b  00000000  00000000  0000189c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 0000001e  00000000  00000000  00001937  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e6       	ldi	r30, 0x66	; 102
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 30       	cpi	r26, 0x04	; 4
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 31 03 	jmp	0x662	; 0x662 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
void command(char c);
void data(char d);
void display(const char *s);

int main(void)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	61 97       	sbiw	r28, 0x11	; 17
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
	DDRA=0x00;
  96:	8a e3       	ldi	r24, 0x3A	; 58
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	fc 01       	movw	r30, r24
  9c:	10 82       	st	Z, r1
	DDRC=0xff;
  9e:	84 e3       	ldi	r24, 0x34	; 52
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	2f ef       	ldi	r18, 0xFF	; 255
  a4:	fc 01       	movw	r30, r24
  a6:	20 83       	st	Z, r18
	DDRD=0xff;
  a8:	81 e3       	ldi	r24, 0x31	; 49
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	2f ef       	ldi	r18, 0xFF	; 255
  ae:	fc 01       	movw	r30, r24
  b0:	20 83       	st	Z, r18
	PORTA=0xff;
  b2:	8b e3       	ldi	r24, 0x3B	; 59
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	2f ef       	ldi	r18, 0xFF	; 255
  b8:	fc 01       	movw	r30, r24
  ba:	20 83       	st	Z, r18
	int d=0,e=0,f=0,g=0,h=0,n=0;
  bc:	1a 82       	std	Y+2, r1	; 0x02
  be:	19 82       	std	Y+1, r1	; 0x01
  c0:	1c 82       	std	Y+4, r1	; 0x04
  c2:	1b 82       	std	Y+3, r1	; 0x03
  c4:	1e 82       	std	Y+6, r1	; 0x06
  c6:	1d 82       	std	Y+5, r1	; 0x05
  c8:	18 86       	std	Y+8, r1	; 0x08
  ca:	1f 82       	std	Y+7, r1	; 0x07
  cc:	1a 86       	std	Y+10, r1	; 0x0a
  ce:	19 86       	std	Y+9, r1	; 0x09
  d0:	1c 86       	std	Y+12, r1	; 0x0c
  d2:	1b 86       	std	Y+11, r1	; 0x0b
	command(0x38);
  d4:	88 e3       	ldi	r24, 0x38	; 56
  d6:	0e 94 b2 02 	call	0x564	; 0x564 <command>
	command(0x80);
  da:	80 e8       	ldi	r24, 0x80	; 128
  dc:	0e 94 b2 02 	call	0x564	; 0x564 <command>
	command(0x0c);
  e0:	8c e0       	ldi	r24, 0x0C	; 12
  e2:	0e 94 b2 02 	call	0x564	; 0x564 <command>
	command(0x06);
  e6:	86 e0       	ldi	r24, 0x06	; 6
  e8:	0e 94 b2 02 	call	0x564	; 0x564 <command>
	command(0x01);	
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	0e 94 b2 02 	call	0x564	; 0x564 <command>
  f2:	01 c0       	rjmp	.+2      	; 0xf6 <main+0x74>
		   d=6;
		   
		   
	   }
		
    }
  f4:	00 00       	nop
	command(0x0c);
	command(0x06);
	command(0x01);	
    while(1)
    {
	  if(d==0)
  f6:	89 81       	ldd	r24, Y+1	; 0x01
  f8:	9a 81       	ldd	r25, Y+2	; 0x02
  fa:	00 97       	sbiw	r24, 0x00	; 0
  fc:	09 f0       	breq	.+2      	; 0x100 <main+0x7e>
  fe:	46 c0       	rjmp	.+140    	; 0x18c <main+0x10a>
	    {
			command(0x80);
 100:	80 e8       	ldi	r24, 0x80	; 128
 102:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		   display("Do you want pen?");
 106:	80 e6       	ldi	r24, 0x60	; 96
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		  char i=PINA;
 10e:	89 e3       	ldi	r24, 0x39	; 57
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	fc 01       	movw	r30, r24
 114:	80 81       	ld	r24, Z
 116:	8d 87       	std	Y+13, r24	; 0x0d
			i=i&0xff;
		   if (i==0xfe&&d==0)
 118:	8d 85       	ldd	r24, Y+13	; 0x0d
 11a:	8e 3f       	cpi	r24, 0xFE	; 254
 11c:	d1 f4       	brne	.+52     	; 0x152 <main+0xd0>
 11e:	89 81       	ldd	r24, Y+1	; 0x01
 120:	9a 81       	ldd	r25, Y+2	; 0x02
 122:	00 97       	sbiw	r24, 0x00	; 0
 124:	b1 f4       	brne	.+44     	; 0x152 <main+0xd0>
		   {
			   command(0xc0);
 126:	80 ec       	ldi	r24, 0xC0	; 192
 128:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("yes");
 12c:	81 e7       	ldi	r24, 0x71	; 113
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			    command(0xc0);
 134:	80 ec       	ldi	r24, 0xC0	; 192
 136:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("   ");
 13a:	85 e7       	ldi	r24, 0x75	; 117
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			   d=1;
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	9a 83       	std	Y+2, r25	; 0x02
 148:	89 83       	std	Y+1, r24	; 0x01
			   e=1;
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	9c 83       	std	Y+4, r25	; 0x04
 150:	8b 83       	std	Y+3, r24	; 0x03
		   }
		   if (i==0x7f&&d==0)
 152:	8d 85       	ldd	r24, Y+13	; 0x0d
 154:	8f 37       	cpi	r24, 0x7F	; 127
 156:	d1 f4       	brne	.+52     	; 0x18c <main+0x10a>
 158:	89 81       	ldd	r24, Y+1	; 0x01
 15a:	9a 81       	ldd	r25, Y+2	; 0x02
 15c:	00 97       	sbiw	r24, 0x00	; 0
 15e:	b1 f4       	brne	.+44     	; 0x18c <main+0x10a>
		   {
			   command(0xc0);
 160:	80 ec       	ldi	r24, 0xC0	; 192
 162:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("no");
 166:	89 e7       	ldi	r24, 0x79	; 121
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			   command(0xc0);
 16e:	80 ec       	ldi	r24, 0xC0	; 192
 170:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("   ");
 174:	85 e7       	ldi	r24, 0x75	; 117
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			   d=1;
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	9a 83       	std	Y+2, r25	; 0x02
 182:	89 83       	std	Y+1, r24	; 0x01
			   e=2;
 184:	82 e0       	ldi	r24, 0x02	; 2
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	9c 83       	std	Y+4, r25	; 0x04
 18a:	8b 83       	std	Y+3, r24	; 0x03
		   }
		}
	  
	   if(d==1)
 18c:	89 81       	ldd	r24, Y+1	; 0x01
 18e:	9a 81       	ldd	r25, Y+2	; 0x02
 190:	81 30       	cpi	r24, 0x01	; 1
 192:	91 05       	cpc	r25, r1
 194:	09 f0       	breq	.+2      	; 0x198 <main+0x116>
 196:	48 c0       	rjmp	.+144    	; 0x228 <main+0x1a6>
	   {   
			//command(0x01);
			command(0x80);
 198:	80 e8       	ldi	r24, 0x80	; 128
 19a:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			display("Do you want book");
 19e:	8c e7       	ldi	r24, 0x7C	; 124
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		   char j=PINA;
 1a6:	89 e3       	ldi	r24, 0x39	; 57
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	fc 01       	movw	r30, r24
 1ac:	80 81       	ld	r24, Z
 1ae:	8e 87       	std	Y+14, r24	; 0x0e
			j=j&0xff;
		    if(j==0xfe&&d==1)
 1b0:	8e 85       	ldd	r24, Y+14	; 0x0e
 1b2:	8e 3f       	cpi	r24, 0xFE	; 254
 1b4:	d9 f4       	brne	.+54     	; 0x1ec <main+0x16a>
 1b6:	89 81       	ldd	r24, Y+1	; 0x01
 1b8:	9a 81       	ldd	r25, Y+2	; 0x02
 1ba:	81 30       	cpi	r24, 0x01	; 1
 1bc:	91 05       	cpc	r25, r1
 1be:	b1 f4       	brne	.+44     	; 0x1ec <main+0x16a>
			{
			    command(0xc0);
 1c0:	80 ec       	ldi	r24, 0xC0	; 192
 1c2:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("yes");
 1c6:	81 e7       	ldi	r24, 0x71	; 113
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			    command(0xc0);
 1ce:	80 ec       	ldi	r24, 0xC0	; 192
 1d0:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("   ");
 1d4:	85 e7       	ldi	r24, 0x75	; 117
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			   d=2;
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	9a 83       	std	Y+2, r25	; 0x02
 1e2:	89 83       	std	Y+1, r24	; 0x01
			   f=3;
 1e4:	83 e0       	ldi	r24, 0x03	; 3
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	9e 83       	std	Y+6, r25	; 0x06
 1ea:	8d 83       	std	Y+5, r24	; 0x05
		   }
		   if (j==0x7f&&d==1)
 1ec:	8e 85       	ldd	r24, Y+14	; 0x0e
 1ee:	8f 37       	cpi	r24, 0x7F	; 127
 1f0:	d9 f4       	brne	.+54     	; 0x228 <main+0x1a6>
 1f2:	89 81       	ldd	r24, Y+1	; 0x01
 1f4:	9a 81       	ldd	r25, Y+2	; 0x02
 1f6:	81 30       	cpi	r24, 0x01	; 1
 1f8:	91 05       	cpc	r25, r1
 1fa:	b1 f4       	brne	.+44     	; 0x228 <main+0x1a6>
		   {
			    command(0xc0);
 1fc:	80 ec       	ldi	r24, 0xC0	; 192
 1fe:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("no");
 202:	89 e7       	ldi	r24, 0x79	; 121
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			         command(0xc0);
 20a:	80 ec       	ldi	r24, 0xC0	; 192
 20c:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("   ");
 210:	85 e7       	ldi	r24, 0x75	; 117
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			   d=2;
 218:	82 e0       	ldi	r24, 0x02	; 2
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	9a 83       	std	Y+2, r25	; 0x02
 21e:	89 83       	std	Y+1, r24	; 0x01
			   f=4;
 220:	84 e0       	ldi	r24, 0x04	; 4
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	9e 83       	std	Y+6, r25	; 0x06
 226:	8d 83       	std	Y+5, r24	; 0x05
		   }
	   }	
	   if(d==2)
 228:	89 81       	ldd	r24, Y+1	; 0x01
 22a:	9a 81       	ldd	r25, Y+2	; 0x02
 22c:	82 30       	cpi	r24, 0x02	; 2
 22e:	91 05       	cpc	r25, r1
 230:	09 f0       	breq	.+2      	; 0x234 <main+0x1b2>
 232:	4b c0       	rjmp	.+150    	; 0x2ca <main+0x248>
	   {
		command(0x80);
 234:	80 e8       	ldi	r24, 0x80	; 128
 236:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		display("do you want bag");
 23a:	8d e8       	ldi	r24, 0x8D	; 141
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		command(0xc0);
 242:	80 ec       	ldi	r24, 0xC0	; 192
 244:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		char k=PINA;
 248:	89 e3       	ldi	r24, 0x39	; 57
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	fc 01       	movw	r30, r24
 24e:	80 81       	ld	r24, Z
 250:	8f 87       	std	Y+15, r24	; 0x0f
		k=k&0xff;
		 if (k==0xfe&&d==2)
 252:	8f 85       	ldd	r24, Y+15	; 0x0f
 254:	8e 3f       	cpi	r24, 0xFE	; 254
 256:	d9 f4       	brne	.+54     	; 0x28e <main+0x20c>
 258:	89 81       	ldd	r24, Y+1	; 0x01
 25a:	9a 81       	ldd	r25, Y+2	; 0x02
 25c:	82 30       	cpi	r24, 0x02	; 2
 25e:	91 05       	cpc	r25, r1
 260:	b1 f4       	brne	.+44     	; 0x28e <main+0x20c>
		  {
		    command(0xc0);
 262:	80 ec       	ldi	r24, 0xC0	; 192
 264:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			display("yes");
 268:	81 e7       	ldi	r24, 0x71	; 113
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			command(0xc0);
 270:	80 ec       	ldi	r24, 0xC0	; 192
 272:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			display("   ");
 276:	85 e7       	ldi	r24, 0x75	; 117
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		    d=3;
 27e:	83 e0       	ldi	r24, 0x03	; 3
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	9a 83       	std	Y+2, r25	; 0x02
 284:	89 83       	std	Y+1, r24	; 0x01
			g=5; 
 286:	85 e0       	ldi	r24, 0x05	; 5
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	98 87       	std	Y+8, r25	; 0x08
 28c:	8f 83       	std	Y+7, r24	; 0x07
		  }
	     if(k==0x7f&&d==2)
 28e:	8f 85       	ldd	r24, Y+15	; 0x0f
 290:	8f 37       	cpi	r24, 0x7F	; 127
 292:	d9 f4       	brne	.+54     	; 0x2ca <main+0x248>
 294:	89 81       	ldd	r24, Y+1	; 0x01
 296:	9a 81       	ldd	r25, Y+2	; 0x02
 298:	82 30       	cpi	r24, 0x02	; 2
 29a:	91 05       	cpc	r25, r1
 29c:	b1 f4       	brne	.+44     	; 0x2ca <main+0x248>
	      {
		    command(0xc0);
 29e:	80 ec       	ldi	r24, 0xC0	; 192
 2a0:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			display("no");
 2a4:	89 e7       	ldi	r24, 0x79	; 121
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			command(0xc0);
 2ac:	80 ec       	ldi	r24, 0xC0	; 192
 2ae:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			display("   ");
 2b2:	85 e7       	ldi	r24, 0x75	; 117
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		   d=3;
 2ba:	83 e0       	ldi	r24, 0x03	; 3
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	9a 83       	std	Y+2, r25	; 0x02
 2c0:	89 83       	std	Y+1, r24	; 0x01
		   g=6;
 2c2:	86 e0       	ldi	r24, 0x06	; 6
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	98 87       	std	Y+8, r25	; 0x08
 2c8:	8f 83       	std	Y+7, r24	; 0x07
	      }
	   } 		
	
	  if(d==3)
 2ca:	89 81       	ldd	r24, Y+1	; 0x01
 2cc:	9a 81       	ldd	r25, Y+2	; 0x02
 2ce:	83 30       	cpi	r24, 0x03	; 3
 2d0:	91 05       	cpc	r25, r1
 2d2:	09 f0       	breq	.+2      	; 0x2d6 <main+0x254>
 2d4:	4b c0       	rjmp	.+150    	; 0x36c <main+0x2ea>
	   {
		command(0x80);
 2d6:	80 e8       	ldi	r24, 0x80	; 128
 2d8:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		display("do you want pencil");
 2dc:	8d e9       	ldi	r24, 0x9D	; 157
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		command(0xc0);
 2e4:	80 ec       	ldi	r24, 0xC0	; 192
 2e6:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		char l=PINA;
 2ea:	89 e3       	ldi	r24, 0x39	; 57
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	fc 01       	movw	r30, r24
 2f0:	80 81       	ld	r24, Z
 2f2:	88 8b       	std	Y+16, r24	; 0x10
		l=l&0xff;
		 if (l==0xfe&&d==3)
 2f4:	88 89       	ldd	r24, Y+16	; 0x10
 2f6:	8e 3f       	cpi	r24, 0xFE	; 254
 2f8:	d9 f4       	brne	.+54     	; 0x330 <main+0x2ae>
 2fa:	89 81       	ldd	r24, Y+1	; 0x01
 2fc:	9a 81       	ldd	r25, Y+2	; 0x02
 2fe:	83 30       	cpi	r24, 0x03	; 3
 300:	91 05       	cpc	r25, r1
 302:	b1 f4       	brne	.+44     	; 0x330 <main+0x2ae>
		 {
		    command(0xc0);
 304:	80 ec       	ldi	r24, 0xC0	; 192
 306:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			display("yes");
 30a:	81 e7       	ldi	r24, 0x71	; 113
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			command(0xc0);
 312:	80 ec       	ldi	r24, 0xC0	; 192
 314:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			display("   ");
 318:	85 e7       	ldi	r24, 0x75	; 117
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			d=4;
 320:	84 e0       	ldi	r24, 0x04	; 4
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	9a 83       	std	Y+2, r25	; 0x02
 326:	89 83       	std	Y+1, r24	; 0x01
			h=7;
 328:	87 e0       	ldi	r24, 0x07	; 7
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	9a 87       	std	Y+10, r25	; 0x0a
 32e:	89 87       	std	Y+9, r24	; 0x09
		 }
	    if(l==0x7f&&d==3)
 330:	88 89       	ldd	r24, Y+16	; 0x10
 332:	8f 37       	cpi	r24, 0x7F	; 127
 334:	d9 f4       	brne	.+54     	; 0x36c <main+0x2ea>
 336:	89 81       	ldd	r24, Y+1	; 0x01
 338:	9a 81       	ldd	r25, Y+2	; 0x02
 33a:	83 30       	cpi	r24, 0x03	; 3
 33c:	91 05       	cpc	r25, r1
 33e:	b1 f4       	brne	.+44     	; 0x36c <main+0x2ea>
	    {
		  command(0xc0);
 340:	80 ec       	ldi	r24, 0xC0	; 192
 342:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		  display("no");
 346:	89 e7       	ldi	r24, 0x79	; 121
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		  command(0xc0);
 34e:	80 ec       	ldi	r24, 0xC0	; 192
 350:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		  display("   ");
 354:	85 e7       	ldi	r24, 0x75	; 117
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		   d=4;
 35c:	84 e0       	ldi	r24, 0x04	; 4
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	9a 83       	std	Y+2, r25	; 0x02
 362:	89 83       	std	Y+1, r24	; 0x01
		   h=8;
 364:	88 e0       	ldi	r24, 0x08	; 8
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	9a 87       	std	Y+10, r25	; 0x0a
 36a:	89 87       	std	Y+9, r24	; 0x09
	    }
	   }
	   
	  if(d==4)
 36c:	89 81       	ldd	r24, Y+1	; 0x01
 36e:	9a 81       	ldd	r25, Y+2	; 0x02
 370:	84 30       	cpi	r24, 0x04	; 4
 372:	91 05       	cpc	r25, r1
 374:	09 f0       	breq	.+2      	; 0x378 <main+0x2f6>
 376:	52 c0       	rjmp	.+164    	; 0x41c <main+0x39a>
	   {
		command(0x80);
 378:	80 e8       	ldi	r24, 0x80	; 128
 37a:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		display("do you want scale");
 37e:	80 eb       	ldi	r24, 0xB0	; 176
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		command(0xc0);
 386:	80 ec       	ldi	r24, 0xC0	; 192
 388:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		char m=PINA;
 38c:	89 e3       	ldi	r24, 0x39	; 57
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	fc 01       	movw	r30, r24
 392:	80 81       	ld	r24, Z
 394:	89 8b       	std	Y+17, r24	; 0x11
		m=m&0xff;
		 if (m==0xfe&&d==4)
 396:	89 89       	ldd	r24, Y+17	; 0x11
 398:	8e 3f       	cpi	r24, 0xFE	; 254
 39a:	d9 f4       	brne	.+54     	; 0x3d2 <main+0x350>
 39c:	89 81       	ldd	r24, Y+1	; 0x01
 39e:	9a 81       	ldd	r25, Y+2	; 0x02
 3a0:	84 30       	cpi	r24, 0x04	; 4
 3a2:	91 05       	cpc	r25, r1
 3a4:	b1 f4       	brne	.+44     	; 0x3d2 <main+0x350>
		 {
		  command(0xc0);
 3a6:	80 ec       	ldi	r24, 0xC0	; 192
 3a8:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		  display("yes");
 3ac:	81 e7       	ldi	r24, 0x71	; 113
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		  command(0xc0);
 3b4:	80 ec       	ldi	r24, 0xC0	; 192
 3b6:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		  display("   ");
 3ba:	85 e7       	ldi	r24, 0x75	; 117
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		  d=5;
 3c2:	85 e0       	ldi	r24, 0x05	; 5
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	9a 83       	std	Y+2, r25	; 0x02
 3c8:	89 83       	std	Y+1, r24	; 0x01
		  n=9;
 3ca:	89 e0       	ldi	r24, 0x09	; 9
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	9c 87       	std	Y+12, r25	; 0x0c
 3d0:	8b 87       	std	Y+11, r24	; 0x0b
		 }
	     if(m==0x7f&&d==4)
 3d2:	89 89       	ldd	r24, Y+17	; 0x11
 3d4:	8f 37       	cpi	r24, 0x7F	; 127
 3d6:	11 f5       	brne	.+68     	; 0x41c <main+0x39a>
 3d8:	89 81       	ldd	r24, Y+1	; 0x01
 3da:	9a 81       	ldd	r25, Y+2	; 0x02
 3dc:	84 30       	cpi	r24, 0x04	; 4
 3de:	91 05       	cpc	r25, r1
 3e0:	e9 f4       	brne	.+58     	; 0x41c <main+0x39a>
	     {
		 command(0xc0);
 3e2:	80 ec       	ldi	r24, 0xC0	; 192
 3e4:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		 display("no");
 3e8:	89 e7       	ldi	r24, 0x79	; 121
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
	     command(0xc0);
 3f0:	80 ec       	ldi	r24, 0xC0	; 192
 3f2:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		 display("   ");
 3f6:	85 e7       	ldi	r24, 0x75	; 117
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		 d=5;
 3fe:	85 e0       	ldi	r24, 0x05	; 5
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	9a 83       	std	Y+2, r25	; 0x02
 404:	89 83       	std	Y+1, r24	; 0x01
		 n=10;
 406:	8a e0       	ldi	r24, 0x0A	; 10
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	9c 87       	std	Y+12, r25	; 0x0c
 40c:	8b 87       	std	Y+11, r24	; 0x0b
		 command(0x80);
 40e:	80 e8       	ldi	r24, 0x80	; 128
 410:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		 display("  ");
 414:	82 ec       	ldi	r24, 0xC2	; 194
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
	     }
	   }
	   if (d==5)
 41c:	89 81       	ldd	r24, Y+1	; 0x01
 41e:	9a 81       	ldd	r25, Y+2	; 0x02
 420:	85 30       	cpi	r24, 0x05	; 5
 422:	91 05       	cpc	r25, r1
 424:	09 f0       	breq	.+2      	; 0x428 <main+0x3a6>
 426:	66 ce       	rjmp	.-820    	; 0xf4 <main+0x72>
	   {
		   command(0x80);
 428:	80 e8       	ldi	r24, 0x80	; 128
 42a:	0e 94 b2 02 	call	0x564	; 0x564 <command>
		   delay(2);
 42e:	82 e0       	ldi	r24, 0x02	; 2
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	0e 94 83 02 	call	0x506	; 0x506 <delay>
		   display("selected items are");
 436:	85 ec       	ldi	r24, 0xC5	; 197
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		   if (e==1)
 43e:	8b 81       	ldd	r24, Y+3	; 0x03
 440:	9c 81       	ldd	r25, Y+4	; 0x04
 442:	81 30       	cpi	r24, 0x01	; 1
 444:	91 05       	cpc	r25, r1
 446:	71 f4       	brne	.+28     	; 0x464 <__stack+0x5>
		   {
			   command(0xc0);
 448:	80 ec       	ldi	r24, 0xC0	; 192
 44a:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("pen    ");
 44e:	88 ed       	ldi	r24, 0xD8	; 216
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			   command(0xc0);
 456:	80 ec       	ldi	r24, 0xC0	; 192
 458:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("  ");
 45c:	82 ec       	ldi	r24, 0xC2	; 194
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		   }
		   if (f==3)
 464:	8d 81       	ldd	r24, Y+5	; 0x05
 466:	9e 81       	ldd	r25, Y+6	; 0x06
 468:	83 30       	cpi	r24, 0x03	; 3
 46a:	91 05       	cpc	r25, r1
 46c:	71 f4       	brne	.+28     	; 0x48a <__stack+0x2b>
		   {
			   command(0xc0);
 46e:	80 ec       	ldi	r24, 0xC0	; 192
 470:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("book ");
 474:	80 ee       	ldi	r24, 0xE0	; 224
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			   command(0xc0);
 47c:	80 ec       	ldi	r24, 0xC0	; 192
 47e:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("  ");
 482:	82 ec       	ldi	r24, 0xC2	; 194
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		   }
		   if (g==5)
 48a:	8f 81       	ldd	r24, Y+7	; 0x07
 48c:	98 85       	ldd	r25, Y+8	; 0x08
 48e:	85 30       	cpi	r24, 0x05	; 5
 490:	91 05       	cpc	r25, r1
 492:	71 f4       	brne	.+28     	; 0x4b0 <__stack+0x51>
		   {
			   command(0xc0);
 494:	80 ec       	ldi	r24, 0xC0	; 192
 496:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("bag    ");
 49a:	86 ee       	ldi	r24, 0xE6	; 230
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			    command(0xc0);
 4a2:	80 ec       	ldi	r24, 0xC0	; 192
 4a4:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("  ");
 4a8:	82 ec       	ldi	r24, 0xC2	; 194
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		   }
		   if(h==7)
 4b0:	89 85       	ldd	r24, Y+9	; 0x09
 4b2:	9a 85       	ldd	r25, Y+10	; 0x0a
 4b4:	87 30       	cpi	r24, 0x07	; 7
 4b6:	91 05       	cpc	r25, r1
 4b8:	71 f4       	brne	.+28     	; 0x4d6 <__stack+0x77>
		   {
			   command(0xc0);
 4ba:	80 ec       	ldi	r24, 0xC0	; 192
 4bc:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("pencil");
 4c0:	8e ee       	ldi	r24, 0xEE	; 238
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			    command(0xc0);
 4c8:	80 ec       	ldi	r24, 0xC0	; 192
 4ca:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("      ");
 4ce:	85 ef       	ldi	r24, 0xF5	; 245
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		   }
		   if (n==9)
 4d6:	8b 85       	ldd	r24, Y+11	; 0x0b
 4d8:	9c 85       	ldd	r25, Y+12	; 0x0c
 4da:	89 30       	cpi	r24, 0x09	; 9
 4dc:	91 05       	cpc	r25, r1
 4de:	71 f4       	brne	.+28     	; 0x4fc <__stack+0x9d>
		   {
			   command(0xc0);
 4e0:	80 ec       	ldi	r24, 0xC0	; 192
 4e2:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("scale ");
 4e6:	8c ef       	ldi	r24, 0xFC	; 252
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
			     command(0xc0);
 4ee:	80 ec       	ldi	r24, 0xC0	; 192
 4f0:	0e 94 b2 02 	call	0x564	; 0x564 <command>
			   display("  ");
 4f4:	82 ec       	ldi	r24, 0xC2	; 194
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	0e 94 0e 03 	call	0x61c	; 0x61c <display>
		   }
		   d=6;
 4fc:	86 e0       	ldi	r24, 0x06	; 6
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	9a 83       	std	Y+2, r25	; 0x02
 502:	89 83       	std	Y+1, r24	; 0x01
		   
		   
	   }
		
    }
 504:	f8 cd       	rjmp	.-1040   	; 0xf6 <main+0x74>

00000506 <delay>:
}
void delay(int x)
{
 506:	df 93       	push	r29
 508:	cf 93       	push	r28
 50a:	00 d0       	rcall	.+0      	; 0x50c <delay+0x6>
 50c:	00 d0       	rcall	.+0      	; 0x50e <delay+0x8>
 50e:	00 d0       	rcall	.+0      	; 0x510 <delay+0xa>
 510:	cd b7       	in	r28, 0x3d	; 61
 512:	de b7       	in	r29, 0x3e	; 62
 514:	9e 83       	std	Y+6, r25	; 0x06
 516:	8d 83       	std	Y+5, r24	; 0x05
	int i,j;
	for (i=0;i<=x;i++)
 518:	1a 82       	std	Y+2, r1	; 0x02
 51a:	19 82       	std	Y+1, r1	; 0x01
 51c:	13 c0       	rjmp	.+38     	; 0x544 <delay+0x3e>
	for(j=0;j<=1000;j++);
 51e:	1c 82       	std	Y+4, r1	; 0x04
 520:	1b 82       	std	Y+3, r1	; 0x03
 522:	05 c0       	rjmp	.+10     	; 0x52e <delay+0x28>
 524:	8b 81       	ldd	r24, Y+3	; 0x03
 526:	9c 81       	ldd	r25, Y+4	; 0x04
 528:	01 96       	adiw	r24, 0x01	; 1
 52a:	9c 83       	std	Y+4, r25	; 0x04
 52c:	8b 83       	std	Y+3, r24	; 0x03
 52e:	8b 81       	ldd	r24, Y+3	; 0x03
 530:	9c 81       	ldd	r25, Y+4	; 0x04
 532:	23 e0       	ldi	r18, 0x03	; 3
 534:	89 3e       	cpi	r24, 0xE9	; 233
 536:	92 07       	cpc	r25, r18
 538:	ac f3       	brlt	.-22     	; 0x524 <delay+0x1e>
    }
}
void delay(int x)
{
	int i,j;
	for (i=0;i<=x;i++)
 53a:	89 81       	ldd	r24, Y+1	; 0x01
 53c:	9a 81       	ldd	r25, Y+2	; 0x02
 53e:	01 96       	adiw	r24, 0x01	; 1
 540:	9a 83       	std	Y+2, r25	; 0x02
 542:	89 83       	std	Y+1, r24	; 0x01
 544:	29 81       	ldd	r18, Y+1	; 0x01
 546:	3a 81       	ldd	r19, Y+2	; 0x02
 548:	8d 81       	ldd	r24, Y+5	; 0x05
 54a:	9e 81       	ldd	r25, Y+6	; 0x06
 54c:	82 17       	cp	r24, r18
 54e:	93 07       	cpc	r25, r19
 550:	34 f7       	brge	.-52     	; 0x51e <delay+0x18>
	for(j=0;j<=1000;j++);
	
}
 552:	26 96       	adiw	r28, 0x06	; 6
 554:	0f b6       	in	r0, 0x3f	; 63
 556:	f8 94       	cli
 558:	de bf       	out	0x3e, r29	; 62
 55a:	0f be       	out	0x3f, r0	; 63
 55c:	cd bf       	out	0x3d, r28	; 61
 55e:	cf 91       	pop	r28
 560:	df 91       	pop	r29
 562:	08 95       	ret

00000564 <command>:
void command(char c)
{
 564:	df 93       	push	r29
 566:	cf 93       	push	r28
 568:	0f 92       	push	r0
 56a:	cd b7       	in	r28, 0x3d	; 61
 56c:	de b7       	in	r29, 0x3e	; 62
 56e:	89 83       	std	Y+1, r24	; 0x01
	PORTC=c;
 570:	85 e3       	ldi	r24, 0x35	; 53
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	29 81       	ldd	r18, Y+1	; 0x01
 576:	fc 01       	movw	r30, r24
 578:	20 83       	st	Z, r18
	PORTD&=~(1<<6);
 57a:	82 e3       	ldi	r24, 0x32	; 50
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	22 e3       	ldi	r18, 0x32	; 50
 580:	30 e0       	ldi	r19, 0x00	; 0
 582:	f9 01       	movw	r30, r18
 584:	20 81       	ld	r18, Z
 586:	2f 7b       	andi	r18, 0xBF	; 191
 588:	fc 01       	movw	r30, r24
 58a:	20 83       	st	Z, r18
	PORTD|=(1<<7);
 58c:	82 e3       	ldi	r24, 0x32	; 50
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	22 e3       	ldi	r18, 0x32	; 50
 592:	30 e0       	ldi	r19, 0x00	; 0
 594:	f9 01       	movw	r30, r18
 596:	20 81       	ld	r18, Z
 598:	20 68       	ori	r18, 0x80	; 128
 59a:	fc 01       	movw	r30, r24
 59c:	20 83       	st	Z, r18
	delay(2);
 59e:	82 e0       	ldi	r24, 0x02	; 2
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 83 02 	call	0x506	; 0x506 <delay>
	PORTD&=~(1<<7);
 5a6:	82 e3       	ldi	r24, 0x32	; 50
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	22 e3       	ldi	r18, 0x32	; 50
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	f9 01       	movw	r30, r18
 5b0:	20 81       	ld	r18, Z
 5b2:	2f 77       	andi	r18, 0x7F	; 127
 5b4:	fc 01       	movw	r30, r24
 5b6:	20 83       	st	Z, r18
}
 5b8:	0f 90       	pop	r0
 5ba:	cf 91       	pop	r28
 5bc:	df 91       	pop	r29
 5be:	08 95       	ret

000005c0 <data>:
void data(char d)
{
 5c0:	df 93       	push	r29
 5c2:	cf 93       	push	r28
 5c4:	0f 92       	push	r0
 5c6:	cd b7       	in	r28, 0x3d	; 61
 5c8:	de b7       	in	r29, 0x3e	; 62
 5ca:	89 83       	std	Y+1, r24	; 0x01
	PORTC=d;
 5cc:	85 e3       	ldi	r24, 0x35	; 53
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	29 81       	ldd	r18, Y+1	; 0x01
 5d2:	fc 01       	movw	r30, r24
 5d4:	20 83       	st	Z, r18
	PORTD|=(1<<6);
 5d6:	82 e3       	ldi	r24, 0x32	; 50
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	22 e3       	ldi	r18, 0x32	; 50
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	f9 01       	movw	r30, r18
 5e0:	20 81       	ld	r18, Z
 5e2:	20 64       	ori	r18, 0x40	; 64
 5e4:	fc 01       	movw	r30, r24
 5e6:	20 83       	st	Z, r18
	PORTD|=(1<<7);
 5e8:	82 e3       	ldi	r24, 0x32	; 50
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	22 e3       	ldi	r18, 0x32	; 50
 5ee:	30 e0       	ldi	r19, 0x00	; 0
 5f0:	f9 01       	movw	r30, r18
 5f2:	20 81       	ld	r18, Z
 5f4:	20 68       	ori	r18, 0x80	; 128
 5f6:	fc 01       	movw	r30, r24
 5f8:	20 83       	st	Z, r18
	delay(2);
 5fa:	82 e0       	ldi	r24, 0x02	; 2
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	0e 94 83 02 	call	0x506	; 0x506 <delay>
	PORTD&=~(1<<7);
 602:	82 e3       	ldi	r24, 0x32	; 50
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	22 e3       	ldi	r18, 0x32	; 50
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	f9 01       	movw	r30, r18
 60c:	20 81       	ld	r18, Z
 60e:	2f 77       	andi	r18, 0x7F	; 127
 610:	fc 01       	movw	r30, r24
 612:	20 83       	st	Z, r18
}
 614:	0f 90       	pop	r0
 616:	cf 91       	pop	r28
 618:	df 91       	pop	r29
 61a:	08 95       	ret

0000061c <display>:
void display(const char *s)
{
 61c:	df 93       	push	r29
 61e:	cf 93       	push	r28
 620:	00 d0       	rcall	.+0      	; 0x622 <display+0x6>
 622:	cd b7       	in	r28, 0x3d	; 61
 624:	de b7       	in	r29, 0x3e	; 62
 626:	9a 83       	std	Y+2, r25	; 0x02
 628:	89 83       	std	Y+1, r24	; 0x01
	while(*s)
 62a:	10 c0       	rjmp	.+32     	; 0x64c <display+0x30>
	{
		data(*s++);
 62c:	89 81       	ldd	r24, Y+1	; 0x01
 62e:	9a 81       	ldd	r25, Y+2	; 0x02
 630:	fc 01       	movw	r30, r24
 632:	20 81       	ld	r18, Z
 634:	89 81       	ldd	r24, Y+1	; 0x01
 636:	9a 81       	ldd	r25, Y+2	; 0x02
 638:	01 96       	adiw	r24, 0x01	; 1
 63a:	9a 83       	std	Y+2, r25	; 0x02
 63c:	89 83       	std	Y+1, r24	; 0x01
 63e:	82 2f       	mov	r24, r18
 640:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <data>
		delay(2);
 644:	82 e0       	ldi	r24, 0x02	; 2
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	0e 94 83 02 	call	0x506	; 0x506 <delay>
	delay(2);
	PORTD&=~(1<<7);
}
void display(const char *s)
{
	while(*s)
 64c:	89 81       	ldd	r24, Y+1	; 0x01
 64e:	9a 81       	ldd	r25, Y+2	; 0x02
 650:	fc 01       	movw	r30, r24
 652:	80 81       	ld	r24, Z
 654:	88 23       	and	r24, r24
 656:	51 f7       	brne	.-44     	; 0x62c <display+0x10>
	{
		data(*s++);
		delay(2);
	}
 658:	0f 90       	pop	r0
 65a:	0f 90       	pop	r0
 65c:	cf 91       	pop	r28
 65e:	df 91       	pop	r29
 660:	08 95       	ret

00000662 <_exit>:
 662:	f8 94       	cli

00000664 <__stop_program>:
 664:	ff cf       	rjmp	.-2      	; 0x664 <__stop_program>
