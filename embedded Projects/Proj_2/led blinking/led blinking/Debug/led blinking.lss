
led blinking.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000130  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000184  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  00000850  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  000008d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000025  00000000  00000000  000008f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000010c  00000000  00000000  0000091a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000008c  00000000  00000000  00000a26  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000174  00000000  00000000  00000ab2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  00000c28  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000008f  00000000  00000000  00000c58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000001e  00000000  00000000  00000ce7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 96 00 	jmp	0x12c	; 0x12c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#include <avr/io.h>
void delay(int x);

int main(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <main+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <main+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
   DDRA=0xff;
  7a:	8a e3       	ldi	r24, 0x3A	; 58
  7c:	90 e0       	ldi	r25, 0x00	; 0
  7e:	2f ef       	ldi	r18, 0xFF	; 255
  80:	fc 01       	movw	r30, r24
  82:	20 83       	st	Z, r18
    while(1)
    {
		int i ;
		char c=0x01;
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	8b 83       	std	Y+3, r24	; 0x03
		char d=0x80;
  88:	80 e8       	ldi	r24, 0x80	; 128
  8a:	8c 83       	std	Y+4, r24	; 0x04
		for (i=0;i<=7;i++)
  8c:	1a 82       	std	Y+2, r1	; 0x02
  8e:	19 82       	std	Y+1, r1	; 0x01
  90:	18 c0       	rjmp	.+48     	; 0xc2 <main+0x56>
		{
			char e=c+d;
  92:	9b 81       	ldd	r25, Y+3	; 0x03
  94:	8c 81       	ldd	r24, Y+4	; 0x04
  96:	89 0f       	add	r24, r25
  98:	8d 83       	std	Y+5, r24	; 0x05
			PORTA=e;
  9a:	8b e3       	ldi	r24, 0x3B	; 59
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	2d 81       	ldd	r18, Y+5	; 0x05
  a0:	fc 01       	movw	r30, r24
  a2:	20 83       	st	Z, r18
			c=c<<1;
  a4:	8b 81       	ldd	r24, Y+3	; 0x03
  a6:	88 0f       	add	r24, r24
  a8:	8b 83       	std	Y+3, r24	; 0x03
			
			d=d>>1;
  aa:	8c 81       	ldd	r24, Y+4	; 0x04
  ac:	86 95       	lsr	r24
  ae:	8c 83       	std	Y+4, r24	; 0x04
			
			delay(10);		
  b0:	8a e0       	ldi	r24, 0x0A	; 10
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 67 00 	call	0xce	; 0xce <delay>
    while(1)
    {
		int i ;
		char c=0x01;
		char d=0x80;
		for (i=0;i<=7;i++)
  b8:	89 81       	ldd	r24, Y+1	; 0x01
  ba:	9a 81       	ldd	r25, Y+2	; 0x02
  bc:	01 96       	adiw	r24, 0x01	; 1
  be:	9a 83       	std	Y+2, r25	; 0x02
  c0:	89 83       	std	Y+1, r24	; 0x01
  c2:	89 81       	ldd	r24, Y+1	; 0x01
  c4:	9a 81       	ldd	r25, Y+2	; 0x02
  c6:	88 30       	cpi	r24, 0x08	; 8
  c8:	91 05       	cpc	r25, r1
  ca:	1c f3       	brlt	.-58     	; 0x92 <main+0x26>
		
		
		
		
                                                                                                           
	}    
  cc:	db cf       	rjmp	.-74     	; 0x84 <main+0x18>

000000ce <delay>:
}
void delay(int x)
{
  ce:	df 93       	push	r29
  d0:	cf 93       	push	r28
  d2:	00 d0       	rcall	.+0      	; 0xd4 <delay+0x6>
  d4:	00 d0       	rcall	.+0      	; 0xd6 <delay+0x8>
  d6:	00 d0       	rcall	.+0      	; 0xd8 <delay+0xa>
  d8:	cd b7       	in	r28, 0x3d	; 61
  da:	de b7       	in	r29, 0x3e	; 62
  dc:	9e 83       	std	Y+6, r25	; 0x06
  de:	8d 83       	std	Y+5, r24	; 0x05
	int i,j;
	for(i=0;i<=x;i++)
  e0:	1a 82       	std	Y+2, r1	; 0x02
  e2:	19 82       	std	Y+1, r1	; 0x01
  e4:	13 c0       	rjmp	.+38     	; 0x10c <delay+0x3e>
	 for(j=0;j<=1000;j++);
  e6:	1c 82       	std	Y+4, r1	; 0x04
  e8:	1b 82       	std	Y+3, r1	; 0x03
  ea:	05 c0       	rjmp	.+10     	; 0xf6 <delay+0x28>
  ec:	8b 81       	ldd	r24, Y+3	; 0x03
  ee:	9c 81       	ldd	r25, Y+4	; 0x04
  f0:	01 96       	adiw	r24, 0x01	; 1
  f2:	9c 83       	std	Y+4, r25	; 0x04
  f4:	8b 83       	std	Y+3, r24	; 0x03
  f6:	8b 81       	ldd	r24, Y+3	; 0x03
  f8:	9c 81       	ldd	r25, Y+4	; 0x04
  fa:	23 e0       	ldi	r18, 0x03	; 3
  fc:	89 3e       	cpi	r24, 0xE9	; 233
  fe:	92 07       	cpc	r25, r18
 100:	ac f3       	brlt	.-22     	; 0xec <delay+0x1e>
	}    
}
void delay(int x)
{
	int i,j;
	for(i=0;i<=x;i++)
 102:	89 81       	ldd	r24, Y+1	; 0x01
 104:	9a 81       	ldd	r25, Y+2	; 0x02
 106:	01 96       	adiw	r24, 0x01	; 1
 108:	9a 83       	std	Y+2, r25	; 0x02
 10a:	89 83       	std	Y+1, r24	; 0x01
 10c:	29 81       	ldd	r18, Y+1	; 0x01
 10e:	3a 81       	ldd	r19, Y+2	; 0x02
 110:	8d 81       	ldd	r24, Y+5	; 0x05
 112:	9e 81       	ldd	r25, Y+6	; 0x06
 114:	82 17       	cp	r24, r18
 116:	93 07       	cpc	r25, r19
 118:	34 f7       	brge	.-52     	; 0xe6 <delay+0x18>
	 for(j=0;j<=1000;j++);
 11a:	26 96       	adiw	r28, 0x06	; 6
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	de bf       	out	0x3e, r29	; 62
 122:	0f be       	out	0x3f, r0	; 63
 124:	cd bf       	out	0x3d, r28	; 61
 126:	cf 91       	pop	r28
 128:	df 91       	pop	r29
 12a:	08 95       	ret

0000012c <_exit>:
 12c:	f8 94       	cli

0000012e <__stop_program>:
 12e:	ff cf       	rjmp	.-2      	; 0x12e <__stop_program>
