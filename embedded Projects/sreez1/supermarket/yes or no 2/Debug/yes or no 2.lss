
yes or no 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b6e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000128  00800060  00000b6e  00000be2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000d0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  000013d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  0000145d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000050  00000000  00000000  0000147d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000033c  00000000  00000000  000014cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000de  00000000  00000000  00001809  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ac4  00000000  00000000  000018e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000070  00000000  00000000  000023ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000ad  00000000  00000000  0000241c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 0000001e  00000000  00000000  000024c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e6       	ldi	r30, 0x6E	; 110
  68:	fb e0       	ldi	r31, 0x0B	; 11
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 38       	cpi	r26, 0x88	; 136
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 b5 05 	jmp	0xb6a	; 0xb6a <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
void data(char d);
void display(const char *s);
char kepad();

int main(void)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	a0 97       	sbiw	r28, 0x20	; 32
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
	DDRA=0xf0;
  96:	8a e3       	ldi	r24, 0x3A	; 58
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	20 ef       	ldi	r18, 0xF0	; 240
  9c:	fc 01       	movw	r30, r24
  9e:	20 83       	st	Z, r18
	DDRB=0x00;
  a0:	87 e3       	ldi	r24, 0x37	; 55
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	fc 01       	movw	r30, r24
  a6:	10 82       	st	Z, r1
	DDRC=0xff;
  a8:	84 e3       	ldi	r24, 0x34	; 52
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	2f ef       	ldi	r18, 0xFF	; 255
  ae:	fc 01       	movw	r30, r24
  b0:	20 83       	st	Z, r18
	DDRD=0xff;
  b2:	81 e3       	ldi	r24, 0x31	; 49
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	2f ef       	ldi	r18, 0xFF	; 255
  b8:	fc 01       	movw	r30, r24
  ba:	20 83       	st	Z, r18
	PORTB=0xff;
  bc:	88 e3       	ldi	r24, 0x38	; 56
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	2f ef       	ldi	r18, 0xFF	; 255
  c2:	fc 01       	movw	r30, r24
  c4:	20 83       	st	Z, r18
	int d=0,e=0,f=0,g=0,h=0,n=0,p=0,q=0;
  c6:	1a 82       	std	Y+2, r1	; 0x02
  c8:	19 82       	std	Y+1, r1	; 0x01
  ca:	1c 82       	std	Y+4, r1	; 0x04
  cc:	1b 82       	std	Y+3, r1	; 0x03
  ce:	1e 82       	std	Y+6, r1	; 0x06
  d0:	1d 82       	std	Y+5, r1	; 0x05
  d2:	18 86       	std	Y+8, r1	; 0x08
  d4:	1f 82       	std	Y+7, r1	; 0x07
  d6:	1a 86       	std	Y+10, r1	; 0x0a
  d8:	19 86       	std	Y+9, r1	; 0x09
  da:	1c 86       	std	Y+12, r1	; 0x0c
  dc:	1b 86       	std	Y+11, r1	; 0x0b
  de:	1d 8a       	std	Y+21, r1	; 0x15
  e0:	1c 8a       	std	Y+20, r1	; 0x14
  e2:	1f 8a       	std	Y+23, r1	; 0x17
  e4:	1e 8a       	std	Y+22, r1	; 0x16
	char k1,k2,k3,k4,k5;
	command(0x38);
  e6:	88 e3       	ldi	r24, 0x38	; 56
  e8:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
	command(0x80);
  ec:	80 e8       	ldi	r24, 0x80	; 128
  ee:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
	command(0x0c);
  f2:	8c e0       	ldi	r24, 0x0C	; 12
  f4:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
	command(0x06);
  f8:	86 e0       	ldi	r24, 0x06	; 6
  fa:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
	command(0x01);	
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
	int price=0;
 104:	1b 8a       	std	Y+19, r1	; 0x13
 106:	1a 8a       	std	Y+18, r1	; 0x12
 108:	01 c0       	rjmp	.+2      	; 0x10c <main+0x8a>
		   
		  
		   
	   }
		
    }
 10a:	00 00       	nop
	command(0x01);	
	int price=0;
    while(1)
    {
		
	  if(d==0)
 10c:	89 81       	ldd	r24, Y+1	; 0x01
 10e:	9a 81       	ldd	r25, Y+2	; 0x02
 110:	00 97       	sbiw	r24, 0x00	; 0
 112:	09 f0       	breq	.+2      	; 0x116 <main+0x94>
 114:	6e c0       	rjmp	.+220    	; 0x1f2 <main+0x170>
	    {
			command(0x80);
 116:	80 e8       	ldi	r24, 0x80	; 128
 118:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		   display("Do you want pen?");
 11c:	80 e6       	ldi	r24, 0x60	; 96
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		   command(0xc0);
 124:	80 ec       	ldi	r24, 0xC0	; 192
 126:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		   display("price=10");
 12a:	81 e7       	ldi	r24, 0x71	; 113
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		  char i=PINB;
 132:	86 e3       	ldi	r24, 0x36	; 54
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	fc 01       	movw	r30, r24
 138:	80 81       	ld	r24, Z
 13a:	88 8f       	std	Y+24, r24	; 0x18
			i=i&0xff;
		   if (i==0xfe&&d==0)
 13c:	88 8d       	ldd	r24, Y+24	; 0x18
 13e:	8e 3f       	cpi	r24, 0xFE	; 254
 140:	d9 f5       	brne	.+118    	; 0x1b8 <main+0x136>
 142:	89 81       	ldd	r24, Y+1	; 0x01
 144:	9a 81       	ldd	r25, Y+2	; 0x02
 146:	00 97       	sbiw	r24, 0x00	; 0
 148:	b9 f5       	brne	.+110    	; 0x1b8 <main+0x136>
		   {
			   command(0xc0);
 14a:	80 ec       	ldi	r24, 0xC0	; 192
 14c:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("       ");
 150:	8a e7       	ldi	r24, 0x7A	; 122
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   command(0xc0);
 158:	80 ec       	ldi	r24, 0xC0	; 192
 15a:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("yes");
 15e:	82 e8       	ldi	r24, 0x82	; 130
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			    command(0xc0);
 166:	80 ec       	ldi	r24, 0xC0	; 192
 168:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("   ");
 16c:	86 e8       	ldi	r24, 0x86	; 134
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   d=1;
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	9a 83       	std	Y+2, r25	; 0x02
 17a:	89 83       	std	Y+1, r24	; 0x01
			   e=1;
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	9c 83       	std	Y+4, r25	; 0x04
 182:	8b 83       	std	Y+3, r24	; 0x03
			  display("how many?");
 184:	8a e8       	ldi	r24, 0x8A	; 138
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			 command(0x80);			 
 18c:	80 e8       	ldi	r24, 0x80	; 128
 18e:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
	        k1=kepad();
 192:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <kepad>
 196:	8d 87       	std	Y+13, r24	; 0x0d
			command(0xc0);
 198:	80 ec       	ldi	r24, 0xC0	; 192
 19a:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("            ");
 19e:	84 e9       	ldi	r24, 0x94	; 148
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0XC0);  
 1a6:	80 ec       	ldi	r24, 0xC0	; 192
 1a8:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		    data(k1);
 1ac:	8d 85       	ldd	r24, Y+13	; 0x0d
 1ae:	0e 94 31 05 	call	0xa62	; 0xa62 <data>
			k1=k1-0x30;
 1b2:	8d 85       	ldd	r24, Y+13	; 0x0d
 1b4:	80 53       	subi	r24, 0x30	; 48
 1b6:	8d 87       	std	Y+13, r24	; 0x0d
		   }
		   if (i==0xfd&&d==0)
 1b8:	88 8d       	ldd	r24, Y+24	; 0x18
 1ba:	8d 3f       	cpi	r24, 0xFD	; 253
 1bc:	d1 f4       	brne	.+52     	; 0x1f2 <main+0x170>
 1be:	89 81       	ldd	r24, Y+1	; 0x01
 1c0:	9a 81       	ldd	r25, Y+2	; 0x02
 1c2:	00 97       	sbiw	r24, 0x00	; 0
 1c4:	b1 f4       	brne	.+44     	; 0x1f2 <main+0x170>
		   {
			   command(0xc0);
 1c6:	80 ec       	ldi	r24, 0xC0	; 192
 1c8:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("no");
 1cc:	81 ea       	ldi	r24, 0xA1	; 161
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   command(0xc0);
 1d4:	80 ec       	ldi	r24, 0xC0	; 192
 1d6:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("         ");
 1da:	84 ea       	ldi	r24, 0xA4	; 164
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   d=1;
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	9a 83       	std	Y+2, r25	; 0x02
 1e8:	89 83       	std	Y+1, r24	; 0x01
			   e=2;
 1ea:	82 e0       	ldi	r24, 0x02	; 2
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	9c 83       	std	Y+4, r25	; 0x04
 1f0:	8b 83       	std	Y+3, r24	; 0x03
		   }
		}
	  
	   if(d==1)
 1f2:	89 81       	ldd	r24, Y+1	; 0x01
 1f4:	9a 81       	ldd	r25, Y+2	; 0x02
 1f6:	81 30       	cpi	r24, 0x01	; 1
 1f8:	91 05       	cpc	r25, r1
 1fa:	09 f0       	breq	.+2      	; 0x1fe <main+0x17c>
 1fc:	70 c0       	rjmp	.+224    	; 0x2de <main+0x25c>
	   {  
			command(0x80);
 1fe:	80 e8       	ldi	r24, 0x80	; 128
 200:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("Do you want book");
 204:	8e ea       	ldi	r24, 0xAE	; 174
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0xc0);
 20c:	80 ec       	ldi	r24, 0xC0	; 192
 20e:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		   display("price=20");
 212:	8f eb       	ldi	r24, 0xBF	; 191
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		   char j=PINB;
 21a:	86 e3       	ldi	r24, 0x36	; 54
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	fc 01       	movw	r30, r24
 220:	80 81       	ld	r24, Z
 222:	89 8f       	std	Y+25, r24	; 0x19
			j=j&0xff;
		    if(j==0xfe&&d==1)
 224:	89 8d       	ldd	r24, Y+25	; 0x19
 226:	8e 3f       	cpi	r24, 0xFE	; 254
 228:	e1 f5       	brne	.+120    	; 0x2a2 <main+0x220>
 22a:	89 81       	ldd	r24, Y+1	; 0x01
 22c:	9a 81       	ldd	r25, Y+2	; 0x02
 22e:	81 30       	cpi	r24, 0x01	; 1
 230:	91 05       	cpc	r25, r1
 232:	b9 f5       	brne	.+110    	; 0x2a2 <main+0x220>
			{
			    command(0xc0);
 234:	80 ec       	ldi	r24, 0xC0	; 192
 236:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
				display("       ");
 23a:	8a e7       	ldi	r24, 0x7A	; 122
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
				command(0xc0);
 242:	80 ec       	ldi	r24, 0xC0	; 192
 244:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("yes");
 248:	82 e8       	ldi	r24, 0x82	; 130
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			    command(0xc0);
 250:	80 ec       	ldi	r24, 0xC0	; 192
 252:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("   ");
 256:	86 e8       	ldi	r24, 0x86	; 134
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   d=2;
 25e:	82 e0       	ldi	r24, 0x02	; 2
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	9a 83       	std	Y+2, r25	; 0x02
 264:	89 83       	std	Y+1, r24	; 0x01
			   f=1;
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	9e 83       	std	Y+6, r25	; 0x06
 26c:	8d 83       	std	Y+5, r24	; 0x05
			 display("how many?");
 26e:	8a e8       	ldi	r24, 0x8A	; 138
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			 command(0x80);
 276:	80 e8       	ldi	r24, 0x80	; 128
 278:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
	        k2=kepad();
 27c:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <kepad>
 280:	8e 87       	std	Y+14, r24	; 0x0e
			command(0xc0);
 282:	80 ec       	ldi	r24, 0xC0	; 192
 284:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("            ");
 288:	84 e9       	ldi	r24, 0x94	; 148
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0XC0); 
 290:	80 ec       	ldi	r24, 0xC0	; 192
 292:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		    data(k2);
 296:	8e 85       	ldd	r24, Y+14	; 0x0e
 298:	0e 94 31 05 	call	0xa62	; 0xa62 <data>
		    k2=k2-0x30;  
 29c:	8e 85       	ldd	r24, Y+14	; 0x0e
 29e:	80 53       	subi	r24, 0x30	; 48
 2a0:	8e 87       	std	Y+14, r24	; 0x0e
		   }
		   if (j==0xfd&&d==1)
 2a2:	89 8d       	ldd	r24, Y+25	; 0x19
 2a4:	8d 3f       	cpi	r24, 0xFD	; 253
 2a6:	d9 f4       	brne	.+54     	; 0x2de <main+0x25c>
 2a8:	89 81       	ldd	r24, Y+1	; 0x01
 2aa:	9a 81       	ldd	r25, Y+2	; 0x02
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	91 05       	cpc	r25, r1
 2b0:	b1 f4       	brne	.+44     	; 0x2de <main+0x25c>
		   {
			    command(0xc0);
 2b2:	80 ec       	ldi	r24, 0xC0	; 192
 2b4:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("no");
 2b8:	81 ea       	ldi	r24, 0xA1	; 161
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			         command(0xc0);
 2c0:	80 ec       	ldi	r24, 0xC0	; 192
 2c2:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("        ");
 2c6:	88 ec       	ldi	r24, 0xC8	; 200
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   d=2;  
 2ce:	82 e0       	ldi	r24, 0x02	; 2
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	9a 83       	std	Y+2, r25	; 0x02
 2d4:	89 83       	std	Y+1, r24	; 0x01
			   f=2;
 2d6:	82 e0       	ldi	r24, 0x02	; 2
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	9e 83       	std	Y+6, r25	; 0x06
 2dc:	8d 83       	std	Y+5, r24	; 0x05
		   }
	   }	
	   if(d==2)
 2de:	89 81       	ldd	r24, Y+1	; 0x01
 2e0:	9a 81       	ldd	r25, Y+2	; 0x02
 2e2:	82 30       	cpi	r24, 0x02	; 2
 2e4:	91 05       	cpc	r25, r1
 2e6:	09 f0       	breq	.+2      	; 0x2ea <main+0x268>
 2e8:	70 c0       	rjmp	.+224    	; 0x3ca <main+0x348>
	   {
		command(0x80);
 2ea:	80 e8       	ldi	r24, 0x80	; 128
 2ec:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		display("do you want bag");
 2f0:	81 ed       	ldi	r24, 0xD1	; 209
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		 command(0xc0);
 2f8:	80 ec       	ldi	r24, 0xC0	; 192
 2fa:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		  display("price=30");
 2fe:	81 ee       	ldi	r24, 0xE1	; 225
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		char k=PINB;
 306:	86 e3       	ldi	r24, 0x36	; 54
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	fc 01       	movw	r30, r24
 30c:	80 81       	ld	r24, Z
 30e:	8a 8f       	std	Y+26, r24	; 0x1a
		k=k&0xff;
		 if (k==0xfe&&d==2)
 310:	8a 8d       	ldd	r24, Y+26	; 0x1a
 312:	8e 3f       	cpi	r24, 0xFE	; 254
 314:	e1 f5       	brne	.+120    	; 0x38e <main+0x30c>
 316:	89 81       	ldd	r24, Y+1	; 0x01
 318:	9a 81       	ldd	r25, Y+2	; 0x02
 31a:	82 30       	cpi	r24, 0x02	; 2
 31c:	91 05       	cpc	r25, r1
 31e:	b9 f5       	brne	.+110    	; 0x38e <main+0x30c>
		  {
		    command(0xc0);
 320:	80 ec       	ldi	r24, 0xC0	; 192
 322:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("     ");
 326:	8a ee       	ldi	r24, 0xEA	; 234
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0xc0);
 32e:	80 ec       	ldi	r24, 0xC0	; 192
 330:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("yes");
 334:	82 e8       	ldi	r24, 0x82	; 130
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0xc0);
 33c:	80 ec       	ldi	r24, 0xC0	; 192
 33e:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("    ");
 342:	80 ef       	ldi	r24, 0xF0	; 240
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		    d=3;  
 34a:	83 e0       	ldi	r24, 0x03	; 3
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	9a 83       	std	Y+2, r25	; 0x02
 350:	89 83       	std	Y+1, r24	; 0x01
			g=1;
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	98 87       	std	Y+8, r25	; 0x08
 358:	8f 83       	std	Y+7, r24	; 0x07
			 display("how many?");
 35a:	8a e8       	ldi	r24, 0x8A	; 138
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			 command(0x80);
 362:	80 e8       	ldi	r24, 0x80	; 128
 364:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
	        k3=kepad();
 368:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <kepad>
 36c:	8f 87       	std	Y+15, r24	; 0x0f
			command(0xc0);
 36e:	80 ec       	ldi	r24, 0xC0	; 192
 370:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("            ");
 374:	84 e9       	ldi	r24, 0x94	; 148
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0XC0); 
 37c:	80 ec       	ldi	r24, 0xC0	; 192
 37e:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			data(k3);
 382:	8f 85       	ldd	r24, Y+15	; 0x0f
 384:	0e 94 31 05 	call	0xa62	; 0xa62 <data>
		    k3=k3-0x30;  
 388:	8f 85       	ldd	r24, Y+15	; 0x0f
 38a:	80 53       	subi	r24, 0x30	; 48
 38c:	8f 87       	std	Y+15, r24	; 0x0f
						    
		  }
	     if(k==0xfd&&d==2)
 38e:	8a 8d       	ldd	r24, Y+26	; 0x1a
 390:	8d 3f       	cpi	r24, 0xFD	; 253
 392:	d9 f4       	brne	.+54     	; 0x3ca <main+0x348>
 394:	89 81       	ldd	r24, Y+1	; 0x01
 396:	9a 81       	ldd	r25, Y+2	; 0x02
 398:	82 30       	cpi	r24, 0x02	; 2
 39a:	91 05       	cpc	r25, r1
 39c:	b1 f4       	brne	.+44     	; 0x3ca <main+0x348>
	      {
		    command(0xc0);
 39e:	80 ec       	ldi	r24, 0xC0	; 192
 3a0:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("no");
 3a4:	81 ea       	ldi	r24, 0xA1	; 161
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0xc0);
 3ac:	80 ec       	ldi	r24, 0xC0	; 192
 3ae:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("        ");
 3b2:	88 ec       	ldi	r24, 0xC8	; 200
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		   d=3;
 3ba:	83 e0       	ldi	r24, 0x03	; 3
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	9a 83       	std	Y+2, r25	; 0x02
 3c0:	89 83       	std	Y+1, r24	; 0x01
		   g=2;
 3c2:	82 e0       	ldi	r24, 0x02	; 2
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	98 87       	std	Y+8, r25	; 0x08
 3c8:	8f 83       	std	Y+7, r24	; 0x07
	      }
	   } 		
	
	  if(d==3)
 3ca:	89 81       	ldd	r24, Y+1	; 0x01
 3cc:	9a 81       	ldd	r25, Y+2	; 0x02
 3ce:	83 30       	cpi	r24, 0x03	; 3
 3d0:	91 05       	cpc	r25, r1
 3d2:	09 f0       	breq	.+2      	; 0x3d6 <main+0x354>
 3d4:	70 c0       	rjmp	.+224    	; 0x4b6 <__stack+0x57>
	   {
		command(0x80);
 3d6:	80 e8       	ldi	r24, 0x80	; 128
 3d8:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		display("do you want pencil");
 3dc:	85 ef       	ldi	r24, 0xF5	; 245
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		 command(0xc0);
 3e4:	80 ec       	ldi	r24, 0xC0	; 192
 3e6:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		 display("price=10");
 3ea:	81 e7       	ldi	r24, 0x71	; 113
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		char l=PINB;
 3f2:	86 e3       	ldi	r24, 0x36	; 54
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	fc 01       	movw	r30, r24
 3f8:	80 81       	ld	r24, Z
 3fa:	8b 8f       	std	Y+27, r24	; 0x1b
		l=l&0xff;
		 if (l==0xfe&&d==3)
 3fc:	8b 8d       	ldd	r24, Y+27	; 0x1b
 3fe:	8e 3f       	cpi	r24, 0xFE	; 254
 400:	e1 f5       	brne	.+120    	; 0x47a <__stack+0x1b>
 402:	89 81       	ldd	r24, Y+1	; 0x01
 404:	9a 81       	ldd	r25, Y+2	; 0x02
 406:	83 30       	cpi	r24, 0x03	; 3
 408:	91 05       	cpc	r25, r1
 40a:	b9 f5       	brne	.+110    	; 0x47a <__stack+0x1b>
		 {
		    command(0xc0);
 40c:	80 ec       	ldi	r24, 0xC0	; 192
 40e:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("       ");
 412:	8a e7       	ldi	r24, 0x7A	; 122
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0xc0);
 41a:	80 ec       	ldi	r24, 0xC0	; 192
 41c:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("yes");
 420:	82 e8       	ldi	r24, 0x82	; 130
 422:	90 e0       	ldi	r25, 0x00	; 0
 424:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0xc0);
 428:	80 ec       	ldi	r24, 0xC0	; 192
 42a:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("   ");
 42e:	86 e8       	ldi	r24, 0x86	; 134
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			d=4;
 436:	84 e0       	ldi	r24, 0x04	; 4
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	9a 83       	std	Y+2, r25	; 0x02
 43c:	89 83       	std	Y+1, r24	; 0x01
			h=1;
 43e:	81 e0       	ldi	r24, 0x01	; 1
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	9a 87       	std	Y+10, r25	; 0x0a
 444:	89 87       	std	Y+9, r24	; 0x09
			display("how many?");
 446:	8a e8       	ldi	r24, 0x8A	; 138
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			 command(0x80);
 44e:	80 e8       	ldi	r24, 0x80	; 128
 450:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
	        k4=kepad();
 454:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <kepad>
 458:	88 8b       	std	Y+16, r24	; 0x10
			command(0xc0);
 45a:	80 ec       	ldi	r24, 0xC0	; 192
 45c:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("            ");
 460:	84 e9       	ldi	r24, 0x94	; 148
 462:	90 e0       	ldi	r25, 0x00	; 0
 464:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0XC0); 
 468:	80 ec       	ldi	r24, 0xC0	; 192
 46a:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		    data(k4);
 46e:	88 89       	ldd	r24, Y+16	; 0x10
 470:	0e 94 31 05 	call	0xa62	; 0xa62 <data>
		    k4=k4-0x30;  
 474:	88 89       	ldd	r24, Y+16	; 0x10
 476:	80 53       	subi	r24, 0x30	; 48
 478:	88 8b       	std	Y+16, r24	; 0x10
		 }
	    if(l==0xfd&&d==3)
 47a:	8b 8d       	ldd	r24, Y+27	; 0x1b
 47c:	8d 3f       	cpi	r24, 0xFD	; 253
 47e:	d9 f4       	brne	.+54     	; 0x4b6 <__stack+0x57>
 480:	89 81       	ldd	r24, Y+1	; 0x01
 482:	9a 81       	ldd	r25, Y+2	; 0x02
 484:	83 30       	cpi	r24, 0x03	; 3
 486:	91 05       	cpc	r25, r1
 488:	b1 f4       	brne	.+44     	; 0x4b6 <__stack+0x57>
	    {
		  command(0xc0);
 48a:	80 ec       	ldi	r24, 0xC0	; 192
 48c:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		  display("no");
 490:	81 ea       	ldi	r24, 0xA1	; 161
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		  command(0xc0);
 498:	80 ec       	ldi	r24, 0xC0	; 192
 49a:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		  display("         ");
 49e:	84 ea       	ldi	r24, 0xA4	; 164
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		   d=4;
 4a6:	84 e0       	ldi	r24, 0x04	; 4
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	9a 83       	std	Y+2, r25	; 0x02
 4ac:	89 83       	std	Y+1, r24	; 0x01
		   h=2;
 4ae:	82 e0       	ldi	r24, 0x02	; 2
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	9a 87       	std	Y+10, r25	; 0x0a
 4b4:	89 87       	std	Y+9, r24	; 0x09
	    }
	   }
	   
	  if(d==4)
 4b6:	89 81       	ldd	r24, Y+1	; 0x01
 4b8:	9a 81       	ldd	r25, Y+2	; 0x02
 4ba:	84 30       	cpi	r24, 0x04	; 4
 4bc:	91 05       	cpc	r25, r1
 4be:	09 f0       	breq	.+2      	; 0x4c2 <__stack+0x63>
 4c0:	77 c0       	rjmp	.+238    	; 0x5b0 <__stack+0x151>
	   {
		command(0x80);
 4c2:	80 e8       	ldi	r24, 0x80	; 128
 4c4:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		display("do you want scale");
 4c8:	88 e0       	ldi	r24, 0x08	; 8
 4ca:	91 e0       	ldi	r25, 0x01	; 1
 4cc:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		command(0xc0);
 4d0:	80 ec       	ldi	r24, 0xC0	; 192
 4d2:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		display("price=15");
 4d6:	8a e1       	ldi	r24, 0x1A	; 26
 4d8:	91 e0       	ldi	r25, 0x01	; 1
 4da:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		char m=PINB;
 4de:	86 e3       	ldi	r24, 0x36	; 54
 4e0:	90 e0       	ldi	r25, 0x00	; 0
 4e2:	fc 01       	movw	r30, r24
 4e4:	80 81       	ld	r24, Z
 4e6:	8c 8f       	std	Y+28, r24	; 0x1c
		m=m&0xff;
		 if (m==0xfe&&d==4)
 4e8:	8c 8d       	ldd	r24, Y+28	; 0x1c
 4ea:	8e 3f       	cpi	r24, 0xFE	; 254
 4ec:	e1 f5       	brne	.+120    	; 0x566 <__stack+0x107>
 4ee:	89 81       	ldd	r24, Y+1	; 0x01
 4f0:	9a 81       	ldd	r25, Y+2	; 0x02
 4f2:	84 30       	cpi	r24, 0x04	; 4
 4f4:	91 05       	cpc	r25, r1
 4f6:	b9 f5       	brne	.+110    	; 0x566 <__stack+0x107>
		 {
		  command(0xc0);
 4f8:	80 ec       	ldi	r24, 0xC0	; 192
 4fa:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		  display("        ");
 4fe:	88 ec       	ldi	r24, 0xC8	; 200
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		  command(0xc0);
 506:	80 ec       	ldi	r24, 0xC0	; 192
 508:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		  display("yes");
 50c:	82 e8       	ldi	r24, 0x82	; 130
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		  command(0xc0);
 514:	80 ec       	ldi	r24, 0xC0	; 192
 516:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		  display("   ");
 51a:	86 e8       	ldi	r24, 0x86	; 134
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		  d=5;
 522:	85 e0       	ldi	r24, 0x05	; 5
 524:	90 e0       	ldi	r25, 0x00	; 0
 526:	9a 83       	std	Y+2, r25	; 0x02
 528:	89 83       	std	Y+1, r24	; 0x01
		  n=1;
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	9c 87       	std	Y+12, r25	; 0x0c
 530:	8b 87       	std	Y+11, r24	; 0x0b
			display("how many?");
 532:	8a e8       	ldi	r24, 0x8A	; 138
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			 command(0x80);
 53a:	80 e8       	ldi	r24, 0x80	; 128
 53c:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
	        k5=kepad();
 540:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <kepad>
 544:	89 8b       	std	Y+17, r24	; 0x11
			command(0xc0);
 546:	80 ec       	ldi	r24, 0xC0	; 192
 548:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			display("            ");
 54c:	84 e9       	ldi	r24, 0x94	; 148
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			command(0XC0); 
 554:	80 ec       	ldi	r24, 0xC0	; 192
 556:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		       data(k5);
 55a:	89 89       	ldd	r24, Y+17	; 0x11
 55c:	0e 94 31 05 	call	0xa62	; 0xa62 <data>
		    k5=k5-0x30;
 560:	89 89       	ldd	r24, Y+17	; 0x11
 562:	80 53       	subi	r24, 0x30	; 48
 564:	89 8b       	std	Y+17, r24	; 0x11
		 }
	     if(m==0xfd&&d==4)
 566:	8c 8d       	ldd	r24, Y+28	; 0x1c
 568:	8d 3f       	cpi	r24, 0xFD	; 253
 56a:	11 f5       	brne	.+68     	; 0x5b0 <__stack+0x151>
 56c:	89 81       	ldd	r24, Y+1	; 0x01
 56e:	9a 81       	ldd	r25, Y+2	; 0x02
 570:	84 30       	cpi	r24, 0x04	; 4
 572:	91 05       	cpc	r25, r1
 574:	e9 f4       	brne	.+58     	; 0x5b0 <__stack+0x151>
	     {
		 command(0xc0);
 576:	80 ec       	ldi	r24, 0xC0	; 192
 578:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		 display("no");
 57c:	81 ea       	ldi	r24, 0xA1	; 161
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
	     command(0xc0);
 584:	80 ec       	ldi	r24, 0xC0	; 192
 586:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		 display("           ");
 58a:	83 e2       	ldi	r24, 0x23	; 35
 58c:	91 e0       	ldi	r25, 0x01	; 1
 58e:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		 d=5;
 592:	85 e0       	ldi	r24, 0x05	; 5
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	9a 83       	std	Y+2, r25	; 0x02
 598:	89 83       	std	Y+1, r24	; 0x01
		 n=2;
 59a:	82 e0       	ldi	r24, 0x02	; 2
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	9c 87       	std	Y+12, r25	; 0x0c
 5a0:	8b 87       	std	Y+11, r24	; 0x0b
		 command(0x80);
 5a2:	80 e8       	ldi	r24, 0x80	; 128
 5a4:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		 display("  ");
 5a8:	8f e2       	ldi	r24, 0x2F	; 47
 5aa:	91 e0       	ldi	r25, 0x01	; 1
 5ac:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
	     }
	   }
	   if (d==5)
 5b0:	89 81       	ldd	r24, Y+1	; 0x01
 5b2:	9a 81       	ldd	r25, Y+2	; 0x02
 5b4:	85 30       	cpi	r24, 0x05	; 5
 5b6:	91 05       	cpc	r25, r1
 5b8:	09 f0       	breq	.+2      	; 0x5bc <__stack+0x15d>
 5ba:	d2 c0       	rjmp	.+420    	; 0x760 <__stack+0x301>
	   {
		   command(0x80);
 5bc:	80 e8       	ldi	r24, 0x80	; 128
 5be:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		   delay(2);
 5c2:	82 e0       	ldi	r24, 0x02	; 2
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <delay>
		   display("selected items are");
 5ca:	82 e3       	ldi	r24, 0x32	; 50
 5cc:	91 e0       	ldi	r25, 0x01	; 1
 5ce:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		   if (e==1)
 5d2:	8b 81       	ldd	r24, Y+3	; 0x03
 5d4:	9c 81       	ldd	r25, Y+4	; 0x04
 5d6:	81 30       	cpi	r24, 0x01	; 1
 5d8:	91 05       	cpc	r25, r1
 5da:	01 f5       	brne	.+64     	; 0x61c <__stack+0x1bd>
		   {
			   command(0xc0);
 5dc:	80 ec       	ldi	r24, 0xC0	; 192
 5de:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("pen  ");
 5e2:	85 e4       	ldi	r24, 0x45	; 69
 5e4:	91 e0       	ldi	r25, 0x01	; 1
 5e6:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   command(0xc0);
 5ea:	80 ec       	ldi	r24, 0xC0	; 192
 5ec:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("            ");
 5f0:	84 e9       	ldi	r24, 0x94	; 148
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   price=price+(k1*10);
 5f8:	8d 85       	ldd	r24, Y+13	; 0x0d
 5fa:	88 2f       	mov	r24, r24
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	88 0f       	add	r24, r24
 600:	99 1f       	adc	r25, r25
 602:	9c 01       	movw	r18, r24
 604:	22 0f       	add	r18, r18
 606:	33 1f       	adc	r19, r19
 608:	22 0f       	add	r18, r18
 60a:	33 1f       	adc	r19, r19
 60c:	82 0f       	add	r24, r18
 60e:	93 1f       	adc	r25, r19
 610:	2a 89       	ldd	r18, Y+18	; 0x12
 612:	3b 89       	ldd	r19, Y+19	; 0x13
 614:	82 0f       	add	r24, r18
 616:	93 1f       	adc	r25, r19
 618:	9b 8b       	std	Y+19, r25	; 0x13
 61a:	8a 8b       	std	Y+18, r24	; 0x12
			   
		   }
		   if (f==1)
 61c:	8d 81       	ldd	r24, Y+5	; 0x05
 61e:	9e 81       	ldd	r25, Y+6	; 0x06
 620:	81 30       	cpi	r24, 0x01	; 1
 622:	91 05       	cpc	r25, r1
 624:	11 f5       	brne	.+68     	; 0x66a <__stack+0x20b>
		   {
			   command(0xc0);
 626:	80 ec       	ldi	r24, 0xC0	; 192
 628:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("book ");
 62c:	8b e4       	ldi	r24, 0x4B	; 75
 62e:	91 e0       	ldi	r25, 0x01	; 1
 630:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   command(0xc0);
 634:	80 ec       	ldi	r24, 0xC0	; 192
 636:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("         ");
 63a:	84 ea       	ldi	r24, 0xA4	; 164
 63c:	90 e0       	ldi	r25, 0x00	; 0
 63e:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   price=price+(k2*20);
 642:	8e 85       	ldd	r24, Y+14	; 0x0e
 644:	88 2f       	mov	r24, r24
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	88 0f       	add	r24, r24
 64a:	99 1f       	adc	r25, r25
 64c:	88 0f       	add	r24, r24
 64e:	99 1f       	adc	r25, r25
 650:	9c 01       	movw	r18, r24
 652:	22 0f       	add	r18, r18
 654:	33 1f       	adc	r19, r19
 656:	22 0f       	add	r18, r18
 658:	33 1f       	adc	r19, r19
 65a:	82 0f       	add	r24, r18
 65c:	93 1f       	adc	r25, r19
 65e:	2a 89       	ldd	r18, Y+18	; 0x12
 660:	3b 89       	ldd	r19, Y+19	; 0x13
 662:	82 0f       	add	r24, r18
 664:	93 1f       	adc	r25, r19
 666:	9b 8b       	std	Y+19, r25	; 0x13
 668:	8a 8b       	std	Y+18, r24	; 0x12
			  
			   
		   }
		   if (g==1)
 66a:	8f 81       	ldd	r24, Y+7	; 0x07
 66c:	98 85       	ldd	r25, Y+8	; 0x08
 66e:	81 30       	cpi	r24, 0x01	; 1
 670:	91 05       	cpc	r25, r1
 672:	29 f5       	brne	.+74     	; 0x6be <__stack+0x25f>
		   {
			   command(0xc0);
 674:	80 ec       	ldi	r24, 0xC0	; 192
 676:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("bag    ");
 67a:	81 e5       	ldi	r24, 0x51	; 81
 67c:	91 e0       	ldi	r25, 0x01	; 1
 67e:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			    command(0xc0);
 682:	80 ec       	ldi	r24, 0xC0	; 192
 684:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("        ");
 688:	88 ec       	ldi	r24, 0xC8	; 200
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   price=price+(k3*30);
 690:	8f 85       	ldd	r24, Y+15	; 0x0f
 692:	28 2f       	mov	r18, r24
 694:	30 e0       	ldi	r19, 0x00	; 0
 696:	c9 01       	movw	r24, r18
 698:	88 0f       	add	r24, r24
 69a:	99 1f       	adc	r25, r25
 69c:	82 0f       	add	r24, r18
 69e:	93 1f       	adc	r25, r19
 6a0:	9c 01       	movw	r18, r24
 6a2:	22 0f       	add	r18, r18
 6a4:	33 1f       	adc	r19, r19
 6a6:	22 0f       	add	r18, r18
 6a8:	33 1f       	adc	r19, r19
 6aa:	82 0f       	add	r24, r18
 6ac:	93 1f       	adc	r25, r19
 6ae:	88 0f       	add	r24, r24
 6b0:	99 1f       	adc	r25, r25
 6b2:	2a 89       	ldd	r18, Y+18	; 0x12
 6b4:	3b 89       	ldd	r19, Y+19	; 0x13
 6b6:	82 0f       	add	r24, r18
 6b8:	93 1f       	adc	r25, r19
 6ba:	9b 8b       	std	Y+19, r25	; 0x13
 6bc:	8a 8b       	std	Y+18, r24	; 0x12
			   
		   }
		   if(h==1)
 6be:	89 85       	ldd	r24, Y+9	; 0x09
 6c0:	9a 85       	ldd	r25, Y+10	; 0x0a
 6c2:	81 30       	cpi	r24, 0x01	; 1
 6c4:	91 05       	cpc	r25, r1
 6c6:	01 f5       	brne	.+64     	; 0x708 <__stack+0x2a9>
		   {
			   command(0xc0);
 6c8:	80 ec       	ldi	r24, 0xC0	; 192
 6ca:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("pencil");
 6ce:	89 e5       	ldi	r24, 0x59	; 89
 6d0:	91 e0       	ldi	r25, 0x01	; 1
 6d2:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			    command(0xc0);
 6d6:	80 ec       	ldi	r24, 0xC0	; 192
 6d8:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("          ");
 6dc:	80 e6       	ldi	r24, 0x60	; 96
 6de:	91 e0       	ldi	r25, 0x01	; 1
 6e0:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			   price=price+(k4*10);
 6e4:	88 89       	ldd	r24, Y+16	; 0x10
 6e6:	88 2f       	mov	r24, r24
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	88 0f       	add	r24, r24
 6ec:	99 1f       	adc	r25, r25
 6ee:	9c 01       	movw	r18, r24
 6f0:	22 0f       	add	r18, r18
 6f2:	33 1f       	adc	r19, r19
 6f4:	22 0f       	add	r18, r18
 6f6:	33 1f       	adc	r19, r19
 6f8:	82 0f       	add	r24, r18
 6fa:	93 1f       	adc	r25, r19
 6fc:	2a 89       	ldd	r18, Y+18	; 0x12
 6fe:	3b 89       	ldd	r19, Y+19	; 0x13
 700:	82 0f       	add	r24, r18
 702:	93 1f       	adc	r25, r19
 704:	9b 8b       	std	Y+19, r25	; 0x13
 706:	8a 8b       	std	Y+18, r24	; 0x12
			   
		   }
		   if (n==1)
 708:	8b 85       	ldd	r24, Y+11	; 0x0b
 70a:	9c 85       	ldd	r25, Y+12	; 0x0c
 70c:	81 30       	cpi	r24, 0x01	; 1
 70e:	91 05       	cpc	r25, r1
 710:	19 f5       	brne	.+70     	; 0x758 <__stack+0x2f9>
		   {
			   command(0xc0);
 712:	80 ec       	ldi	r24, 0xC0	; 192
 714:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("scale ");
 718:	8b e6       	ldi	r24, 0x6B	; 107
 71a:	91 e0       	ldi	r25, 0x01	; 1
 71c:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			     command(0xc0);
 720:	80 ec       	ldi	r24, 0xC0	; 192
 722:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
			   display("            ");
 726:	84 e9       	ldi	r24, 0x94	; 148
 728:	90 e0       	ldi	r25, 0x00	; 0
 72a:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
			    price=price+(k5*15);
 72e:	89 89       	ldd	r24, Y+17	; 0x11
 730:	28 2f       	mov	r18, r24
 732:	30 e0       	ldi	r19, 0x00	; 0
 734:	c9 01       	movw	r24, r18
 736:	88 0f       	add	r24, r24
 738:	99 1f       	adc	r25, r25
 73a:	82 0f       	add	r24, r18
 73c:	93 1f       	adc	r25, r19
 73e:	9c 01       	movw	r18, r24
 740:	22 0f       	add	r18, r18
 742:	33 1f       	adc	r19, r19
 744:	22 0f       	add	r18, r18
 746:	33 1f       	adc	r19, r19
 748:	82 0f       	add	r24, r18
 74a:	93 1f       	adc	r25, r19
 74c:	2a 89       	ldd	r18, Y+18	; 0x12
 74e:	3b 89       	ldd	r19, Y+19	; 0x13
 750:	82 0f       	add	r24, r18
 752:	93 1f       	adc	r25, r19
 754:	9b 8b       	std	Y+19, r25	; 0x13
 756:	8a 8b       	std	Y+18, r24	; 0x12
			   			   
		   }
		   d=6;  
 758:	86 e0       	ldi	r24, 0x06	; 6
 75a:	90 e0       	ldi	r25, 0x00	; 0
 75c:	9a 83       	std	Y+2, r25	; 0x02
 75e:	89 83       	std	Y+1, r24	; 0x01
	   }
	   if (d==6)
 760:	89 81       	ldd	r24, Y+1	; 0x01
 762:	9a 81       	ldd	r25, Y+2	; 0x02
 764:	86 30       	cpi	r24, 0x06	; 6
 766:	91 05       	cpc	r25, r1
 768:	09 f0       	breq	.+2      	; 0x76c <__stack+0x30d>
 76a:	cf cc       	rjmp	.-1634   	; 0x10a <main+0x88>
	   {
		   command(0x80);
 76c:	80 e8       	ldi	r24, 0x80	; 128
 76e:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		   display("   ");
 772:	86 e8       	ldi	r24, 0x86	; 134
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		   command(0x80);
 77a:	80 e8       	ldi	r24, 0x80	; 128
 77c:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		   display("total amount         ");
 780:	82 e7       	ldi	r24, 0x72	; 114
 782:	91 e0       	ldi	r25, 0x01	; 1
 784:	0e 94 5f 05 	call	0xabe	; 0xabe <display>
		   command(0xc0);
 788:	80 ec       	ldi	r24, 0xC0	; 192
 78a:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		   char a1=price/100;
 78e:	8a 89       	ldd	r24, Y+18	; 0x12
 790:	9b 89       	ldd	r25, Y+19	; 0x13
 792:	24 e6       	ldi	r18, 0x64	; 100
 794:	30 e0       	ldi	r19, 0x00	; 0
 796:	b9 01       	movw	r22, r18
 798:	0e 94 8e 05 	call	0xb1c	; 0xb1c <__divmodhi4>
 79c:	9b 01       	movw	r18, r22
 79e:	c9 01       	movw	r24, r18
 7a0:	8d 8f       	std	Y+29, r24	; 0x1d
		   char a2=price%100;
 7a2:	8a 89       	ldd	r24, Y+18	; 0x12
 7a4:	9b 89       	ldd	r25, Y+19	; 0x13
 7a6:	24 e6       	ldi	r18, 0x64	; 100
 7a8:	30 e0       	ldi	r19, 0x00	; 0
 7aa:	b9 01       	movw	r22, r18
 7ac:	0e 94 8e 05 	call	0xb1c	; 0xb1c <__divmodhi4>
 7b0:	8e 8f       	std	Y+30, r24	; 0x1e
		   char a3=a2/10;
 7b2:	8e 8d       	ldd	r24, Y+30	; 0x1e
 7b4:	9a e0       	ldi	r25, 0x0A	; 10
 7b6:	69 2f       	mov	r22, r25
 7b8:	0e 94 82 05 	call	0xb04	; 0xb04 <__udivmodqi4>
 7bc:	8f 8f       	std	Y+31, r24	; 0x1f
		   char a4=a2%10;
 7be:	8e 8d       	ldd	r24, Y+30	; 0x1e
 7c0:	9a e0       	ldi	r25, 0x0A	; 10
 7c2:	69 2f       	mov	r22, r25
 7c4:	0e 94 82 05 	call	0xb04	; 0xb04 <__udivmodqi4>
 7c8:	89 2f       	mov	r24, r25
 7ca:	88 a3       	std	Y+32, r24	; 0x20
		   command(0xc0);
 7cc:	80 ec       	ldi	r24, 0xC0	; 192
 7ce:	0e 94 03 05 	call	0xa06	; 0xa06 <command>
		   data(a1+0x30);
 7d2:	8d 8d       	ldd	r24, Y+29	; 0x1d
 7d4:	80 5d       	subi	r24, 0xD0	; 208
 7d6:	0e 94 31 05 	call	0xa62	; 0xa62 <data>
		   data(a3+0x30);
 7da:	8f 8d       	ldd	r24, Y+31	; 0x1f
 7dc:	80 5d       	subi	r24, 0xD0	; 208
 7de:	0e 94 31 05 	call	0xa62	; 0xa62 <data>
		   data(a4+0x30);
 7e2:	88 a1       	ldd	r24, Y+32	; 0x20
 7e4:	80 5d       	subi	r24, 0xD0	; 208
 7e6:	0e 94 31 05 	call	0xa62	; 0xa62 <data>
		   
		   
	
		   d=7;
 7ea:	87 e0       	ldi	r24, 0x07	; 7
 7ec:	90 e0       	ldi	r25, 0x00	; 0
 7ee:	9a 83       	std	Y+2, r25	; 0x02
 7f0:	89 83       	std	Y+1, r24	; 0x01
		   
		  
		   
	   }
		
    }
 7f2:	8c cc       	rjmp	.-1768   	; 0x10c <main+0x8a>

000007f4 <kepad>:
}
char kepad()
{
 7f4:	df 93       	push	r29
 7f6:	cf 93       	push	r28
 7f8:	cd b7       	in	r28, 0x3d	; 61
 7fa:	de b7       	in	r29, 0x3e	; 62
 7fc:	27 97       	sbiw	r28, 0x07	; 7
 7fe:	0f b6       	in	r0, 0x3f	; 63
 800:	f8 94       	cli
 802:	de bf       	out	0x3e, r29	; 62
 804:	0f be       	out	0x3f, r0	; 63
 806:	cd bf       	out	0x3d, r28	; 61
	delay(2);
 808:	82 e0       	ldi	r24, 0x02	; 2
 80a:	90 e0       	ldi	r25, 0x00	; 0
 80c:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <delay>
	int t=0;
 810:	1a 82       	std	Y+2, r1	; 0x02
 812:	19 82       	std	Y+1, r1	; 0x01
 814:	01 c0       	rjmp	.+2      	; 0x818 <kepad+0x24>
		}
		if (t==1)
		{
			return(s);
		}
	}		
 816:	00 00       	nop
	delay(2);
	int t=0;
	char s;
	while (1)
	{
	    PORTA=0x7f;
 818:	8b e3       	ldi	r24, 0x3B	; 59
 81a:	90 e0       	ldi	r25, 0x00	; 0
 81c:	2f e7       	ldi	r18, 0x7F	; 127
 81e:	fc 01       	movw	r30, r24
 820:	20 83       	st	Z, r18
		char i=PINA;
 822:	89 e3       	ldi	r24, 0x39	; 57
 824:	90 e0       	ldi	r25, 0x00	; 0
 826:	fc 01       	movw	r30, r24
 828:	80 81       	ld	r24, Z
 82a:	8c 83       	std	Y+4, r24	; 0x04
		i=i&0xff;
		if(i==0x7e)
 82c:	8c 81       	ldd	r24, Y+4	; 0x04
 82e:	8e 37       	cpi	r24, 0x7E	; 126
 830:	31 f4       	brne	.+12     	; 0x83e <kepad+0x4a>
		{
			s='7';
 832:	87 e3       	ldi	r24, 0x37	; 55
 834:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 836:	81 e0       	ldi	r24, 0x01	; 1
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	9a 83       	std	Y+2, r25	; 0x02
 83c:	89 83       	std	Y+1, r24	; 0x01
		}
			if(i==0x7d)
 83e:	8c 81       	ldd	r24, Y+4	; 0x04
 840:	8d 37       	cpi	r24, 0x7D	; 125
 842:	31 f4       	brne	.+12     	; 0x850 <kepad+0x5c>
		{
			s='4';
 844:	84 e3       	ldi	r24, 0x34	; 52
 846:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 848:	81 e0       	ldi	r24, 0x01	; 1
 84a:	90 e0       	ldi	r25, 0x00	; 0
 84c:	9a 83       	std	Y+2, r25	; 0x02
 84e:	89 83       	std	Y+1, r24	; 0x01
		}
			if(i==0x7b)
 850:	8c 81       	ldd	r24, Y+4	; 0x04
 852:	8b 37       	cpi	r24, 0x7B	; 123
 854:	31 f4       	brne	.+12     	; 0x862 <kepad+0x6e>
		{
			s='1';
 856:	81 e3       	ldi	r24, 0x31	; 49
 858:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 85a:	81 e0       	ldi	r24, 0x01	; 1
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	9a 83       	std	Y+2, r25	; 0x02
 860:	89 83       	std	Y+1, r24	; 0x01
		}
			if(i==0x77)
 862:	8c 81       	ldd	r24, Y+4	; 0x04
 864:	87 37       	cpi	r24, 0x77	; 119
 866:	31 f4       	brne	.+12     	; 0x874 <kepad+0x80>
		{
			s='c';
 868:	83 e6       	ldi	r24, 0x63	; 99
 86a:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 86c:	81 e0       	ldi	r24, 0x01	; 1
 86e:	90 e0       	ldi	r25, 0x00	; 0
 870:	9a 83       	std	Y+2, r25	; 0x02
 872:	89 83       	std	Y+1, r24	; 0x01
		}
			
        PORTA=0xbf;
 874:	8b e3       	ldi	r24, 0x3B	; 59
 876:	90 e0       	ldi	r25, 0x00	; 0
 878:	2f eb       	ldi	r18, 0xBF	; 191
 87a:	fc 01       	movw	r30, r24
 87c:	20 83       	st	Z, r18
		char j=PINA;
 87e:	89 e3       	ldi	r24, 0x39	; 57
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	fc 01       	movw	r30, r24
 884:	80 81       	ld	r24, Z
 886:	8d 83       	std	Y+5, r24	; 0x05
		j=j&0xff;
		if (j==0xbe)
 888:	8d 81       	ldd	r24, Y+5	; 0x05
 88a:	8e 3b       	cpi	r24, 0xBE	; 190
 88c:	31 f4       	brne	.+12     	; 0x89a <kepad+0xa6>
		{
			s='8';
 88e:	88 e3       	ldi	r24, 0x38	; 56
 890:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 892:	81 e0       	ldi	r24, 0x01	; 1
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	9a 83       	std	Y+2, r25	; 0x02
 898:	89 83       	std	Y+1, r24	; 0x01
		}
		if (j==0xbd)
 89a:	8d 81       	ldd	r24, Y+5	; 0x05
 89c:	8d 3b       	cpi	r24, 0xBD	; 189
 89e:	31 f4       	brne	.+12     	; 0x8ac <kepad+0xb8>
		{
			s='5';
 8a0:	85 e3       	ldi	r24, 0x35	; 53
 8a2:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 8a4:	81 e0       	ldi	r24, 0x01	; 1
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	9a 83       	std	Y+2, r25	; 0x02
 8aa:	89 83       	std	Y+1, r24	; 0x01
		}
		if(j==0xbb)
 8ac:	8d 81       	ldd	r24, Y+5	; 0x05
 8ae:	8b 3b       	cpi	r24, 0xBB	; 187
 8b0:	31 f4       	brne	.+12     	; 0x8be <kepad+0xca>
		{
			s='2';
 8b2:	82 e3       	ldi	r24, 0x32	; 50
 8b4:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 8b6:	81 e0       	ldi	r24, 0x01	; 1
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	9a 83       	std	Y+2, r25	; 0x02
 8bc:	89 83       	std	Y+1, r24	; 0x01
		}
		if (j==0xb7)
 8be:	8d 81       	ldd	r24, Y+5	; 0x05
 8c0:	87 3b       	cpi	r24, 0xB7	; 183
 8c2:	31 f4       	brne	.+12     	; 0x8d0 <kepad+0xdc>
		{
			s='0';
 8c4:	80 e3       	ldi	r24, 0x30	; 48
 8c6:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 8c8:	81 e0       	ldi	r24, 0x01	; 1
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	9a 83       	std	Y+2, r25	; 0x02
 8ce:	89 83       	std	Y+1, r24	; 0x01
		}
		
        PORTA=0xef;
 8d0:	8b e3       	ldi	r24, 0x3B	; 59
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	2f ee       	ldi	r18, 0xEF	; 239
 8d6:	fc 01       	movw	r30, r24
 8d8:	20 83       	st	Z, r18
		char k=PINA;
 8da:	89 e3       	ldi	r24, 0x39	; 57
 8dc:	90 e0       	ldi	r25, 0x00	; 0
 8de:	fc 01       	movw	r30, r24
 8e0:	80 81       	ld	r24, Z
 8e2:	8e 83       	std	Y+6, r24	; 0x06
		k=k&0xff;
		if (k==0xee)
 8e4:	8e 81       	ldd	r24, Y+6	; 0x06
 8e6:	8e 3e       	cpi	r24, 0xEE	; 238
 8e8:	31 f4       	brne	.+12     	; 0x8f6 <kepad+0x102>
		{
			s='9';
 8ea:	89 e3       	ldi	r24, 0x39	; 57
 8ec:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 8ee:	81 e0       	ldi	r24, 0x01	; 1
 8f0:	90 e0       	ldi	r25, 0x00	; 0
 8f2:	9a 83       	std	Y+2, r25	; 0x02
 8f4:	89 83       	std	Y+1, r24	; 0x01
		}
		if (k==0xed)
 8f6:	8e 81       	ldd	r24, Y+6	; 0x06
 8f8:	8d 3e       	cpi	r24, 0xED	; 237
 8fa:	31 f4       	brne	.+12     	; 0x908 <kepad+0x114>
		{
			s='6';
 8fc:	86 e3       	ldi	r24, 0x36	; 54
 8fe:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 900:	81 e0       	ldi	r24, 0x01	; 1
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	9a 83       	std	Y+2, r25	; 0x02
 906:	89 83       	std	Y+1, r24	; 0x01
		}
		if (k==0xeb)
 908:	8e 81       	ldd	r24, Y+6	; 0x06
 90a:	8b 3e       	cpi	r24, 0xEB	; 235
 90c:	31 f4       	brne	.+12     	; 0x91a <kepad+0x126>
		{
			s='3';
 90e:	83 e3       	ldi	r24, 0x33	; 51
 910:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 912:	81 e0       	ldi	r24, 0x01	; 1
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	9a 83       	std	Y+2, r25	; 0x02
 918:	89 83       	std	Y+1, r24	; 0x01
		}
		if (k==0xe7)
 91a:	8e 81       	ldd	r24, Y+6	; 0x06
 91c:	87 3e       	cpi	r24, 0xE7	; 231
 91e:	31 f4       	brne	.+12     	; 0x92c <kepad+0x138>
		{
			s='=';
 920:	8d e3       	ldi	r24, 0x3D	; 61
 922:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 924:	81 e0       	ldi	r24, 0x01	; 1
 926:	90 e0       	ldi	r25, 0x00	; 0
 928:	9a 83       	std	Y+2, r25	; 0x02
 92a:	89 83       	std	Y+1, r24	; 0x01
		}

		PORTA=0xdf;
 92c:	8b e3       	ldi	r24, 0x3B	; 59
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	2f ed       	ldi	r18, 0xDF	; 223
 932:	fc 01       	movw	r30, r24
 934:	20 83       	st	Z, r18
		char l=PINA;
 936:	89 e3       	ldi	r24, 0x39	; 57
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	fc 01       	movw	r30, r24
 93c:	80 81       	ld	r24, Z
 93e:	8f 83       	std	Y+7, r24	; 0x07
		l=l&0xff;
		if (l==0xde)
 940:	8f 81       	ldd	r24, Y+7	; 0x07
 942:	8e 3d       	cpi	r24, 0xDE	; 222
 944:	31 f4       	brne	.+12     	; 0x952 <kepad+0x15e>
		{
			s='/';
 946:	8f e2       	ldi	r24, 0x2F	; 47
 948:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 94a:	81 e0       	ldi	r24, 0x01	; 1
 94c:	90 e0       	ldi	r25, 0x00	; 0
 94e:	9a 83       	std	Y+2, r25	; 0x02
 950:	89 83       	std	Y+1, r24	; 0x01
		}
		if (l==0xdd)
 952:	8f 81       	ldd	r24, Y+7	; 0x07
 954:	8d 3d       	cpi	r24, 0xDD	; 221
 956:	31 f4       	brne	.+12     	; 0x964 <kepad+0x170>
		{
			s='*';
 958:	8a e2       	ldi	r24, 0x2A	; 42
 95a:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 95c:	81 e0       	ldi	r24, 0x01	; 1
 95e:	90 e0       	ldi	r25, 0x00	; 0
 960:	9a 83       	std	Y+2, r25	; 0x02
 962:	89 83       	std	Y+1, r24	; 0x01
		}
		if (l==0xdb)
 964:	8f 81       	ldd	r24, Y+7	; 0x07
 966:	8b 3d       	cpi	r24, 0xDB	; 219
 968:	31 f4       	brne	.+12     	; 0x976 <kepad+0x182>
		{
			s='-';
 96a:	8d e2       	ldi	r24, 0x2D	; 45
 96c:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 96e:	81 e0       	ldi	r24, 0x01	; 1
 970:	90 e0       	ldi	r25, 0x00	; 0
 972:	9a 83       	std	Y+2, r25	; 0x02
 974:	89 83       	std	Y+1, r24	; 0x01
		}
		if (l==0xd7)
 976:	8f 81       	ldd	r24, Y+7	; 0x07
 978:	87 3d       	cpi	r24, 0xD7	; 215
 97a:	31 f4       	brne	.+12     	; 0x988 <kepad+0x194>
		{
			s='+';
 97c:	8b e2       	ldi	r24, 0x2B	; 43
 97e:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 980:	81 e0       	ldi	r24, 0x01	; 1
 982:	90 e0       	ldi	r25, 0x00	; 0
 984:	9a 83       	std	Y+2, r25	; 0x02
 986:	89 83       	std	Y+1, r24	; 0x01
		}
		if (t==1)
 988:	89 81       	ldd	r24, Y+1	; 0x01
 98a:	9a 81       	ldd	r25, Y+2	; 0x02
 98c:	81 30       	cpi	r24, 0x01	; 1
 98e:	91 05       	cpc	r25, r1
 990:	09 f0       	breq	.+2      	; 0x994 <kepad+0x1a0>
 992:	41 cf       	rjmp	.-382    	; 0x816 <kepad+0x22>
		{
			return(s);
 994:	8b 81       	ldd	r24, Y+3	; 0x03
		}
	}		
					
	
}
 996:	27 96       	adiw	r28, 0x07	; 7
 998:	0f b6       	in	r0, 0x3f	; 63
 99a:	f8 94       	cli
 99c:	de bf       	out	0x3e, r29	; 62
 99e:	0f be       	out	0x3f, r0	; 63
 9a0:	cd bf       	out	0x3d, r28	; 61
 9a2:	cf 91       	pop	r28
 9a4:	df 91       	pop	r29
 9a6:	08 95       	ret

000009a8 <delay>:
void delay(int x)
{
 9a8:	df 93       	push	r29
 9aa:	cf 93       	push	r28
 9ac:	00 d0       	rcall	.+0      	; 0x9ae <delay+0x6>
 9ae:	00 d0       	rcall	.+0      	; 0x9b0 <delay+0x8>
 9b0:	00 d0       	rcall	.+0      	; 0x9b2 <delay+0xa>
 9b2:	cd b7       	in	r28, 0x3d	; 61
 9b4:	de b7       	in	r29, 0x3e	; 62
 9b6:	9e 83       	std	Y+6, r25	; 0x06
 9b8:	8d 83       	std	Y+5, r24	; 0x05
	int i,j;
	for (i=0;i<=x;i++)
 9ba:	1a 82       	std	Y+2, r1	; 0x02
 9bc:	19 82       	std	Y+1, r1	; 0x01
 9be:	13 c0       	rjmp	.+38     	; 0x9e6 <delay+0x3e>
	for(j=0;j<=1000;j++);
 9c0:	1c 82       	std	Y+4, r1	; 0x04
 9c2:	1b 82       	std	Y+3, r1	; 0x03
 9c4:	05 c0       	rjmp	.+10     	; 0x9d0 <delay+0x28>
 9c6:	8b 81       	ldd	r24, Y+3	; 0x03
 9c8:	9c 81       	ldd	r25, Y+4	; 0x04
 9ca:	01 96       	adiw	r24, 0x01	; 1
 9cc:	9c 83       	std	Y+4, r25	; 0x04
 9ce:	8b 83       	std	Y+3, r24	; 0x03
 9d0:	8b 81       	ldd	r24, Y+3	; 0x03
 9d2:	9c 81       	ldd	r25, Y+4	; 0x04
 9d4:	23 e0       	ldi	r18, 0x03	; 3
 9d6:	89 3e       	cpi	r24, 0xE9	; 233
 9d8:	92 07       	cpc	r25, r18
 9da:	ac f3       	brlt	.-22     	; 0x9c6 <delay+0x1e>
	
}
void delay(int x)
{
	int i,j;
	for (i=0;i<=x;i++)
 9dc:	89 81       	ldd	r24, Y+1	; 0x01
 9de:	9a 81       	ldd	r25, Y+2	; 0x02
 9e0:	01 96       	adiw	r24, 0x01	; 1
 9e2:	9a 83       	std	Y+2, r25	; 0x02
 9e4:	89 83       	std	Y+1, r24	; 0x01
 9e6:	29 81       	ldd	r18, Y+1	; 0x01
 9e8:	3a 81       	ldd	r19, Y+2	; 0x02
 9ea:	8d 81       	ldd	r24, Y+5	; 0x05
 9ec:	9e 81       	ldd	r25, Y+6	; 0x06
 9ee:	82 17       	cp	r24, r18
 9f0:	93 07       	cpc	r25, r19
 9f2:	34 f7       	brge	.-52     	; 0x9c0 <delay+0x18>
	for(j=0;j<=1000;j++);
	
}
 9f4:	26 96       	adiw	r28, 0x06	; 6
 9f6:	0f b6       	in	r0, 0x3f	; 63
 9f8:	f8 94       	cli
 9fa:	de bf       	out	0x3e, r29	; 62
 9fc:	0f be       	out	0x3f, r0	; 63
 9fe:	cd bf       	out	0x3d, r28	; 61
 a00:	cf 91       	pop	r28
 a02:	df 91       	pop	r29
 a04:	08 95       	ret

00000a06 <command>:
void command(char c)
{
 a06:	df 93       	push	r29
 a08:	cf 93       	push	r28
 a0a:	0f 92       	push	r0
 a0c:	cd b7       	in	r28, 0x3d	; 61
 a0e:	de b7       	in	r29, 0x3e	; 62
 a10:	89 83       	std	Y+1, r24	; 0x01
	PORTC=c;
 a12:	85 e3       	ldi	r24, 0x35	; 53
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	29 81       	ldd	r18, Y+1	; 0x01
 a18:	fc 01       	movw	r30, r24
 a1a:	20 83       	st	Z, r18
	PORTD&=~(1<<6);
 a1c:	82 e3       	ldi	r24, 0x32	; 50
 a1e:	90 e0       	ldi	r25, 0x00	; 0
 a20:	22 e3       	ldi	r18, 0x32	; 50
 a22:	30 e0       	ldi	r19, 0x00	; 0
 a24:	f9 01       	movw	r30, r18
 a26:	20 81       	ld	r18, Z
 a28:	2f 7b       	andi	r18, 0xBF	; 191
 a2a:	fc 01       	movw	r30, r24
 a2c:	20 83       	st	Z, r18
	PORTD|=(1<<7);
 a2e:	82 e3       	ldi	r24, 0x32	; 50
 a30:	90 e0       	ldi	r25, 0x00	; 0
 a32:	22 e3       	ldi	r18, 0x32	; 50
 a34:	30 e0       	ldi	r19, 0x00	; 0
 a36:	f9 01       	movw	r30, r18
 a38:	20 81       	ld	r18, Z
 a3a:	20 68       	ori	r18, 0x80	; 128
 a3c:	fc 01       	movw	r30, r24
 a3e:	20 83       	st	Z, r18
	delay(2);
 a40:	82 e0       	ldi	r24, 0x02	; 2
 a42:	90 e0       	ldi	r25, 0x00	; 0
 a44:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <delay>
	PORTD&=~(1<<7);
 a48:	82 e3       	ldi	r24, 0x32	; 50
 a4a:	90 e0       	ldi	r25, 0x00	; 0
 a4c:	22 e3       	ldi	r18, 0x32	; 50
 a4e:	30 e0       	ldi	r19, 0x00	; 0
 a50:	f9 01       	movw	r30, r18
 a52:	20 81       	ld	r18, Z
 a54:	2f 77       	andi	r18, 0x7F	; 127
 a56:	fc 01       	movw	r30, r24
 a58:	20 83       	st	Z, r18
}
 a5a:	0f 90       	pop	r0
 a5c:	cf 91       	pop	r28
 a5e:	df 91       	pop	r29
 a60:	08 95       	ret

00000a62 <data>:
void data(char d)
{
 a62:	df 93       	push	r29
 a64:	cf 93       	push	r28
 a66:	0f 92       	push	r0
 a68:	cd b7       	in	r28, 0x3d	; 61
 a6a:	de b7       	in	r29, 0x3e	; 62
 a6c:	89 83       	std	Y+1, r24	; 0x01
	PORTC=d;
 a6e:	85 e3       	ldi	r24, 0x35	; 53
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	29 81       	ldd	r18, Y+1	; 0x01
 a74:	fc 01       	movw	r30, r24
 a76:	20 83       	st	Z, r18
	PORTD|=(1<<6);
 a78:	82 e3       	ldi	r24, 0x32	; 50
 a7a:	90 e0       	ldi	r25, 0x00	; 0
 a7c:	22 e3       	ldi	r18, 0x32	; 50
 a7e:	30 e0       	ldi	r19, 0x00	; 0
 a80:	f9 01       	movw	r30, r18
 a82:	20 81       	ld	r18, Z
 a84:	20 64       	ori	r18, 0x40	; 64
 a86:	fc 01       	movw	r30, r24
 a88:	20 83       	st	Z, r18
	PORTD|=(1<<7);
 a8a:	82 e3       	ldi	r24, 0x32	; 50
 a8c:	90 e0       	ldi	r25, 0x00	; 0
 a8e:	22 e3       	ldi	r18, 0x32	; 50
 a90:	30 e0       	ldi	r19, 0x00	; 0
 a92:	f9 01       	movw	r30, r18
 a94:	20 81       	ld	r18, Z
 a96:	20 68       	ori	r18, 0x80	; 128
 a98:	fc 01       	movw	r30, r24
 a9a:	20 83       	st	Z, r18
	delay(2);
 a9c:	82 e0       	ldi	r24, 0x02	; 2
 a9e:	90 e0       	ldi	r25, 0x00	; 0
 aa0:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <delay>
	PORTD&=~(1<<7);
 aa4:	82 e3       	ldi	r24, 0x32	; 50
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	22 e3       	ldi	r18, 0x32	; 50
 aaa:	30 e0       	ldi	r19, 0x00	; 0
 aac:	f9 01       	movw	r30, r18
 aae:	20 81       	ld	r18, Z
 ab0:	2f 77       	andi	r18, 0x7F	; 127
 ab2:	fc 01       	movw	r30, r24
 ab4:	20 83       	st	Z, r18
}
 ab6:	0f 90       	pop	r0
 ab8:	cf 91       	pop	r28
 aba:	df 91       	pop	r29
 abc:	08 95       	ret

00000abe <display>:
void display(const char *s)
{
 abe:	df 93       	push	r29
 ac0:	cf 93       	push	r28
 ac2:	00 d0       	rcall	.+0      	; 0xac4 <display+0x6>
 ac4:	cd b7       	in	r28, 0x3d	; 61
 ac6:	de b7       	in	r29, 0x3e	; 62
 ac8:	9a 83       	std	Y+2, r25	; 0x02
 aca:	89 83       	std	Y+1, r24	; 0x01
	while(*s)
 acc:	10 c0       	rjmp	.+32     	; 0xaee <display+0x30>
	{
		data(*s++);
 ace:	89 81       	ldd	r24, Y+1	; 0x01
 ad0:	9a 81       	ldd	r25, Y+2	; 0x02
 ad2:	fc 01       	movw	r30, r24
 ad4:	20 81       	ld	r18, Z
 ad6:	89 81       	ldd	r24, Y+1	; 0x01
 ad8:	9a 81       	ldd	r25, Y+2	; 0x02
 ada:	01 96       	adiw	r24, 0x01	; 1
 adc:	9a 83       	std	Y+2, r25	; 0x02
 ade:	89 83       	std	Y+1, r24	; 0x01
 ae0:	82 2f       	mov	r24, r18
 ae2:	0e 94 31 05 	call	0xa62	; 0xa62 <data>
		delay(2);
 ae6:	82 e0       	ldi	r24, 0x02	; 2
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <delay>
	delay(2);
	PORTD&=~(1<<7);
}
void display(const char *s)
{
	while(*s)
 aee:	89 81       	ldd	r24, Y+1	; 0x01
 af0:	9a 81       	ldd	r25, Y+2	; 0x02
 af2:	fc 01       	movw	r30, r24
 af4:	80 81       	ld	r24, Z
 af6:	88 23       	and	r24, r24
 af8:	51 f7       	brne	.-44     	; 0xace <display+0x10>
	{
		data(*s++);
		delay(2);
	}
 afa:	0f 90       	pop	r0
 afc:	0f 90       	pop	r0
 afe:	cf 91       	pop	r28
 b00:	df 91       	pop	r29
 b02:	08 95       	ret

00000b04 <__udivmodqi4>:
 b04:	99 1b       	sub	r25, r25
 b06:	79 e0       	ldi	r23, 0x09	; 9
 b08:	04 c0       	rjmp	.+8      	; 0xb12 <__udivmodqi4_ep>

00000b0a <__udivmodqi4_loop>:
 b0a:	99 1f       	adc	r25, r25
 b0c:	96 17       	cp	r25, r22
 b0e:	08 f0       	brcs	.+2      	; 0xb12 <__udivmodqi4_ep>
 b10:	96 1b       	sub	r25, r22

00000b12 <__udivmodqi4_ep>:
 b12:	88 1f       	adc	r24, r24
 b14:	7a 95       	dec	r23
 b16:	c9 f7       	brne	.-14     	; 0xb0a <__udivmodqi4_loop>
 b18:	80 95       	com	r24
 b1a:	08 95       	ret

00000b1c <__divmodhi4>:
 b1c:	97 fb       	bst	r25, 7
 b1e:	09 2e       	mov	r0, r25
 b20:	07 26       	eor	r0, r23
 b22:	0a d0       	rcall	.+20     	; 0xb38 <__divmodhi4_neg1>
 b24:	77 fd       	sbrc	r23, 7
 b26:	04 d0       	rcall	.+8      	; 0xb30 <__divmodhi4_neg2>
 b28:	0c d0       	rcall	.+24     	; 0xb42 <__udivmodhi4>
 b2a:	06 d0       	rcall	.+12     	; 0xb38 <__divmodhi4_neg1>
 b2c:	00 20       	and	r0, r0
 b2e:	1a f4       	brpl	.+6      	; 0xb36 <__divmodhi4_exit>

00000b30 <__divmodhi4_neg2>:
 b30:	70 95       	com	r23
 b32:	61 95       	neg	r22
 b34:	7f 4f       	sbci	r23, 0xFF	; 255

00000b36 <__divmodhi4_exit>:
 b36:	08 95       	ret

00000b38 <__divmodhi4_neg1>:
 b38:	f6 f7       	brtc	.-4      	; 0xb36 <__divmodhi4_exit>
 b3a:	90 95       	com	r25
 b3c:	81 95       	neg	r24
 b3e:	9f 4f       	sbci	r25, 0xFF	; 255
 b40:	08 95       	ret

00000b42 <__udivmodhi4>:
 b42:	aa 1b       	sub	r26, r26
 b44:	bb 1b       	sub	r27, r27
 b46:	51 e1       	ldi	r21, 0x11	; 17
 b48:	07 c0       	rjmp	.+14     	; 0xb58 <__udivmodhi4_ep>

00000b4a <__udivmodhi4_loop>:
 b4a:	aa 1f       	adc	r26, r26
 b4c:	bb 1f       	adc	r27, r27
 b4e:	a6 17       	cp	r26, r22
 b50:	b7 07       	cpc	r27, r23
 b52:	10 f0       	brcs	.+4      	; 0xb58 <__udivmodhi4_ep>
 b54:	a6 1b       	sub	r26, r22
 b56:	b7 0b       	sbc	r27, r23

00000b58 <__udivmodhi4_ep>:
 b58:	88 1f       	adc	r24, r24
 b5a:	99 1f       	adc	r25, r25
 b5c:	5a 95       	dec	r21
 b5e:	a9 f7       	brne	.-22     	; 0xb4a <__udivmodhi4_loop>
 b60:	80 95       	com	r24
 b62:	90 95       	com	r25
 b64:	bc 01       	movw	r22, r24
 b66:	cd 01       	movw	r24, r26
 b68:	08 95       	ret

00000b6a <_exit>:
 b6a:	f8 94       	cli

00000b6c <__stop_program>:
 b6c:	ff cf       	rjmp	.-2      	; 0xb6c <__stop_program>
