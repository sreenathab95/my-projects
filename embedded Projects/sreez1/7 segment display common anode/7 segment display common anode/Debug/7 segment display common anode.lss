
7 segment display common anode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000194  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  000001e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000008b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000939  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000025  00000000  00000000  00000959  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000bc  00000000  00000000  0000097e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000081  00000000  00000000  00000a3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001d6  00000000  00000000  00000abb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000030  00000000  00000000  00000c94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000c5  00000000  00000000  00000cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000001e  00000000  00000000  00000d89  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 c8 00 	jmp	0x190	; 0x190 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

#include <avr/io.h>
void delay(int x);

int main(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
    DDRC=0xff;
  74:	84 e3       	ldi	r24, 0x34	; 52
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	2f ef       	ldi	r18, 0xFF	; 255
  7a:	fc 01       	movw	r30, r24
  7c:	20 83       	st	Z, r18
    while(1)
	{
      PORTC=0x40;
  7e:	85 e3       	ldi	r24, 0x35	; 53
  80:	90 e0       	ldi	r25, 0x00	; 0
  82:	20 e4       	ldi	r18, 0x40	; 64
  84:	fc 01       	movw	r30, r24
  86:	20 83       	st	Z, r18
	  delay(20);
  88:	84 e1       	ldi	r24, 0x14	; 20
  8a:	90 e0       	ldi	r25, 0x00	; 0
  8c:	0e 94 99 00 	call	0x132	; 0x132 <delay>
	  
	  PORTC=0xf9;
  90:	85 e3       	ldi	r24, 0x35	; 53
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	29 ef       	ldi	r18, 0xF9	; 249
  96:	fc 01       	movw	r30, r24
  98:	20 83       	st	Z, r18
	  delay(20);
  9a:	84 e1       	ldi	r24, 0x14	; 20
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	0e 94 99 00 	call	0x132	; 0x132 <delay>
	  
	  PORTC=0xa4;
  a2:	85 e3       	ldi	r24, 0x35	; 53
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	24 ea       	ldi	r18, 0xA4	; 164
  a8:	fc 01       	movw	r30, r24
  aa:	20 83       	st	Z, r18
	  delay(20);
  ac:	84 e1       	ldi	r24, 0x14	; 20
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	0e 94 99 00 	call	0x132	; 0x132 <delay>
	
	  PORTC=0xb0;
  b4:	85 e3       	ldi	r24, 0x35	; 53
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	20 eb       	ldi	r18, 0xB0	; 176
  ba:	fc 01       	movw	r30, r24
  bc:	20 83       	st	Z, r18
	  delay(20);
  be:	84 e1       	ldi	r24, 0x14	; 20
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	0e 94 99 00 	call	0x132	; 0x132 <delay>
	 
	  PORTC=0x99;
  c6:	85 e3       	ldi	r24, 0x35	; 53
  c8:	90 e0       	ldi	r25, 0x00	; 0
  ca:	29 e9       	ldi	r18, 0x99	; 153
  cc:	fc 01       	movw	r30, r24
  ce:	20 83       	st	Z, r18
	  delay(20);
  d0:	84 e1       	ldi	r24, 0x14	; 20
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	0e 94 99 00 	call	0x132	; 0x132 <delay>
	
	  PORTC=0x92;
  d8:	85 e3       	ldi	r24, 0x35	; 53
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	22 e9       	ldi	r18, 0x92	; 146
  de:	fc 01       	movw	r30, r24
  e0:	20 83       	st	Z, r18
	  delay(20);
  e2:	84 e1       	ldi	r24, 0x14	; 20
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	0e 94 99 00 	call	0x132	; 0x132 <delay>
	
	  PORTC=0x82;
  ea:	85 e3       	ldi	r24, 0x35	; 53
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	22 e8       	ldi	r18, 0x82	; 130
  f0:	fc 01       	movw	r30, r24
  f2:	20 83       	st	Z, r18
	  delay(20);
  f4:	84 e1       	ldi	r24, 0x14	; 20
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	0e 94 99 00 	call	0x132	; 0x132 <delay>
     
	  PORTC=0xd8;
  fc:	85 e3       	ldi	r24, 0x35	; 53
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	28 ed       	ldi	r18, 0xD8	; 216
 102:	fc 01       	movw	r30, r24
 104:	20 83       	st	Z, r18
	  delay(20);
 106:	84 e1       	ldi	r24, 0x14	; 20
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	0e 94 99 00 	call	0x132	; 0x132 <delay>

	  PORTC=0x00;
 10e:	85 e3       	ldi	r24, 0x35	; 53
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	fc 01       	movw	r30, r24
 114:	10 82       	st	Z, r1
	  delay(20);
 116:	84 e1       	ldi	r24, 0x14	; 20
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	0e 94 99 00 	call	0x132	; 0x132 <delay>
	
	  PORTC=0x90;
 11e:	85 e3       	ldi	r24, 0x35	; 53
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	20 e9       	ldi	r18, 0x90	; 144
 124:	fc 01       	movw	r30, r24
 126:	20 83       	st	Z, r18
	  delay(20);
 128:	84 e1       	ldi	r24, 0x14	; 20
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 99 00 	call	0x132	; 0x132 <delay>
	 
		  
	}	  
 130:	a6 cf       	rjmp	.-180    	; 0x7e <main+0x12>

00000132 <delay>:
	  
    
}
void delay(int x)
{
 132:	df 93       	push	r29
 134:	cf 93       	push	r28
 136:	00 d0       	rcall	.+0      	; 0x138 <delay+0x6>
 138:	00 d0       	rcall	.+0      	; 0x13a <delay+0x8>
 13a:	00 d0       	rcall	.+0      	; 0x13c <delay+0xa>
 13c:	cd b7       	in	r28, 0x3d	; 61
 13e:	de b7       	in	r29, 0x3e	; 62
 140:	9e 83       	std	Y+6, r25	; 0x06
 142:	8d 83       	std	Y+5, r24	; 0x05
	int i,j;
	for(i=0;i<=x;i++)
 144:	1a 82       	std	Y+2, r1	; 0x02
 146:	19 82       	std	Y+1, r1	; 0x01
 148:	13 c0       	rjmp	.+38     	; 0x170 <delay+0x3e>
	for(j=0;j<=1000;j++);
 14a:	1c 82       	std	Y+4, r1	; 0x04
 14c:	1b 82       	std	Y+3, r1	; 0x03
 14e:	05 c0       	rjmp	.+10     	; 0x15a <delay+0x28>
 150:	8b 81       	ldd	r24, Y+3	; 0x03
 152:	9c 81       	ldd	r25, Y+4	; 0x04
 154:	01 96       	adiw	r24, 0x01	; 1
 156:	9c 83       	std	Y+4, r25	; 0x04
 158:	8b 83       	std	Y+3, r24	; 0x03
 15a:	8b 81       	ldd	r24, Y+3	; 0x03
 15c:	9c 81       	ldd	r25, Y+4	; 0x04
 15e:	23 e0       	ldi	r18, 0x03	; 3
 160:	89 3e       	cpi	r24, 0xE9	; 233
 162:	92 07       	cpc	r25, r18
 164:	ac f3       	brlt	.-22     	; 0x150 <delay+0x1e>
    
}
void delay(int x)
{
	int i,j;
	for(i=0;i<=x;i++)
 166:	89 81       	ldd	r24, Y+1	; 0x01
 168:	9a 81       	ldd	r25, Y+2	; 0x02
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	9a 83       	std	Y+2, r25	; 0x02
 16e:	89 83       	std	Y+1, r24	; 0x01
 170:	29 81       	ldd	r18, Y+1	; 0x01
 172:	3a 81       	ldd	r19, Y+2	; 0x02
 174:	8d 81       	ldd	r24, Y+5	; 0x05
 176:	9e 81       	ldd	r25, Y+6	; 0x06
 178:	82 17       	cp	r24, r18
 17a:	93 07       	cpc	r25, r19
 17c:	34 f7       	brge	.-52     	; 0x14a <delay+0x18>
	for(j=0;j<=1000;j++);
	

 17e:	26 96       	adiw	r28, 0x06	; 6
 180:	0f b6       	in	r0, 0x3f	; 63
 182:	f8 94       	cli
 184:	de bf       	out	0x3e, r29	; 62
 186:	0f be       	out	0x3f, r0	; 63
 188:	cd bf       	out	0x3d, r28	; 61
 18a:	cf 91       	pop	r28
 18c:	df 91       	pop	r29
 18e:	08 95       	ret

00000190 <_exit>:
 190:	f8 94       	cli

00000192 <__stop_program>:
 192:	ff cf       	rjmp	.-2      	; 0x192 <__stop_program>
