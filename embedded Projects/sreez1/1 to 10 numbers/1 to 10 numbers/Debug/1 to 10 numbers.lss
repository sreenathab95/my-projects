
1 to 10 numbers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000344  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00000344  000003b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000003c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  00000b11  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000046  00000000  00000000  00000b31  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000183  00000000  00000000  00000b77  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000009e  00000000  00000000  00000cfa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000291  00000000  00000000  00000d98  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000060  00000000  00000000  0000102c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000ad  00000000  00000000  0000108c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 0000001e  00000000  00000000  00001139  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e4       	ldi	r30, 0x44	; 68
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 a0 01 	jmp	0x340	; 0x340 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
void delay(int x);
void command(char c);
void data(char d);
void display(const char *s);
int main(void)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	28 97       	sbiw	r28, 0x08	; 8
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
	DDRC=0xff;
  96:	84 e3       	ldi	r24, 0x34	; 52
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	2f ef       	ldi	r18, 0xFF	; 255
  9c:	fc 01       	movw	r30, r24
  9e:	20 83       	st	Z, r18
	DDRD=0xff;
  a0:	81 e3       	ldi	r24, 0x31	; 49
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	2f ef       	ldi	r18, 0xFF	; 255
  a6:	fc 01       	movw	r30, r24
  a8:	20 83       	st	Z, r18
	command(0x38);
  aa:	88 e3       	ldi	r24, 0x38	; 56
  ac:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <command>
	command(0x80);
  b0:	80 e8       	ldi	r24, 0x80	; 128
  b2:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <command>
	command(0x0c);
  b6:	8c e0       	ldi	r24, 0x0C	; 12
  b8:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <command>
	command(0x06);
  bc:	86 e0       	ldi	r24, 0x06	; 6
  be:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <command>
	command(0x01);
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <command>
    while(1)
    {
       int a=0,i=15,b=0,c=0;
  c8:	1a 82       	std	Y+2, r1	; 0x02
  ca:	19 82       	std	Y+1, r1	; 0x01
  cc:	8f e0       	ldi	r24, 0x0F	; 15
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	9c 83       	std	Y+4, r25	; 0x04
  d2:	8b 83       	std	Y+3, r24	; 0x03
  d4:	1e 82       	std	Y+6, r1	; 0x06
  d6:	1d 82       	std	Y+5, r1	; 0x05
  d8:	18 86       	std	Y+8, r1	; 0x08
  da:	1f 82       	std	Y+7, r1	; 0x07
	   for (a=0;a<=i;a++)
  dc:	1a 82       	std	Y+2, r1	; 0x02
  de:	19 82       	std	Y+1, r1	; 0x01
  e0:	47 c0       	rjmp	.+142    	; 0x170 <main+0xee>
	   {
		 command(0x80);
  e2:	80 e8       	ldi	r24, 0x80	; 128
  e4:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <command>
		 display("    ");
  e8:	80 e6       	ldi	r24, 0x60	; 96
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 56 01 	call	0x2ac	; 0x2ac <display>
		 if (a>=10)
  f0:	89 81       	ldd	r24, Y+1	; 0x01
  f2:	9a 81       	ldd	r25, Y+2	; 0x02
  f4:	8a 30       	cpi	r24, 0x0A	; 10
  f6:	91 05       	cpc	r25, r1
  f8:	54 f1       	brlt	.+84     	; 0x14e <main+0xcc>
		 {
			 b=a/10;
  fa:	89 81       	ldd	r24, Y+1	; 0x01
  fc:	9a 81       	ldd	r25, Y+2	; 0x02
  fe:	2a e0       	ldi	r18, 0x0A	; 10
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	b9 01       	movw	r22, r18
 104:	0e 94 79 01 	call	0x2f2	; 0x2f2 <__divmodhi4>
 108:	9b 01       	movw	r18, r22
 10a:	3e 83       	std	Y+6, r19	; 0x06
 10c:	2d 83       	std	Y+5, r18	; 0x05
			 c=a%10;
 10e:	89 81       	ldd	r24, Y+1	; 0x01
 110:	9a 81       	ldd	r25, Y+2	; 0x02
 112:	2a e0       	ldi	r18, 0x0A	; 10
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	b9 01       	movw	r22, r18
 118:	0e 94 79 01 	call	0x2f2	; 0x2f2 <__divmodhi4>
 11c:	98 87       	std	Y+8, r25	; 0x08
 11e:	8f 83       	std	Y+7, r24	; 0x07
			 command(0x80);
 120:	80 e8       	ldi	r24, 0x80	; 128
 122:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <command>
			 display("    ");
 126:	80 e6       	ldi	r24, 0x60	; 96
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	0e 94 56 01 	call	0x2ac	; 0x2ac <display>
			 data(b+0x30);
 12e:	8d 81       	ldd	r24, Y+5	; 0x05
 130:	80 5d       	subi	r24, 0xD0	; 208
 132:	0e 94 28 01 	call	0x250	; 0x250 <data>
			 data(c+0x30);
 136:	8f 81       	ldd	r24, Y+7	; 0x07
 138:	80 5d       	subi	r24, 0xD0	; 208
 13a:	0e 94 28 01 	call	0x250	; 0x250 <data>
			 command(0x80);
 13e:	80 e8       	ldi	r24, 0x80	; 128
 140:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <command>
			 display("    ");
 144:	80 e6       	ldi	r24, 0x60	; 96
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	0e 94 56 01 	call	0x2ac	; 0x2ac <display>
			 continue;
 14c:	0c c0       	rjmp	.+24     	; 0x166 <main+0xe4>
		 }
		 data(a+0x30);
 14e:	89 81       	ldd	r24, Y+1	; 0x01
 150:	80 5d       	subi	r24, 0xD0	; 208
 152:	0e 94 28 01 	call	0x250	; 0x250 <data>
		 delay(10);		 		 
 156:	8a e0       	ldi	r24, 0x0A	; 10
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	0e 94 cb 00 	call	0x196	; 0x196 <delay>
		 display("  ");	
 15e:	85 e6       	ldi	r24, 0x65	; 101
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 56 01 	call	0x2ac	; 0x2ac <display>
	command(0x06);
	command(0x01);
    while(1)
    {
       int a=0,i=15,b=0,c=0;
	   for (a=0;a<=i;a++)
 166:	89 81       	ldd	r24, Y+1	; 0x01
 168:	9a 81       	ldd	r25, Y+2	; 0x02
 16a:	01 96       	adiw	r24, 0x01	; 1
 16c:	9a 83       	std	Y+2, r25	; 0x02
 16e:	89 83       	std	Y+1, r24	; 0x01
 170:	29 81       	ldd	r18, Y+1	; 0x01
 172:	3a 81       	ldd	r19, Y+2	; 0x02
 174:	8b 81       	ldd	r24, Y+3	; 0x03
 176:	9c 81       	ldd	r25, Y+4	; 0x04
 178:	82 17       	cp	r24, r18
 17a:	93 07       	cpc	r25, r19
 17c:	0c f0       	brlt	.+2      	; 0x180 <main+0xfe>
 17e:	b1 cf       	rjmp	.-158    	; 0xe2 <main+0x60>
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	90 e0       	ldi	r25, 0x00	; 0
		 display("  ");	
	   }
	   break;		
		  
    }
}
 184:	28 96       	adiw	r28, 0x08	; 8
 186:	0f b6       	in	r0, 0x3f	; 63
 188:	f8 94       	cli
 18a:	de bf       	out	0x3e, r29	; 62
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	cd bf       	out	0x3d, r28	; 61
 190:	cf 91       	pop	r28
 192:	df 91       	pop	r29
 194:	08 95       	ret

00000196 <delay>:
void delay(int x)
{
 196:	df 93       	push	r29
 198:	cf 93       	push	r28
 19a:	00 d0       	rcall	.+0      	; 0x19c <delay+0x6>
 19c:	00 d0       	rcall	.+0      	; 0x19e <delay+0x8>
 19e:	00 d0       	rcall	.+0      	; 0x1a0 <delay+0xa>
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
 1a4:	9e 83       	std	Y+6, r25	; 0x06
 1a6:	8d 83       	std	Y+5, r24	; 0x05
	int i,j;
	for (i=0;i<=x;i++)
 1a8:	1a 82       	std	Y+2, r1	; 0x02
 1aa:	19 82       	std	Y+1, r1	; 0x01
 1ac:	13 c0       	rjmp	.+38     	; 0x1d4 <delay+0x3e>
	for(j=0;j<=1000;j++);
 1ae:	1c 82       	std	Y+4, r1	; 0x04
 1b0:	1b 82       	std	Y+3, r1	; 0x03
 1b2:	05 c0       	rjmp	.+10     	; 0x1be <delay+0x28>
 1b4:	8b 81       	ldd	r24, Y+3	; 0x03
 1b6:	9c 81       	ldd	r25, Y+4	; 0x04
 1b8:	01 96       	adiw	r24, 0x01	; 1
 1ba:	9c 83       	std	Y+4, r25	; 0x04
 1bc:	8b 83       	std	Y+3, r24	; 0x03
 1be:	8b 81       	ldd	r24, Y+3	; 0x03
 1c0:	9c 81       	ldd	r25, Y+4	; 0x04
 1c2:	23 e0       	ldi	r18, 0x03	; 3
 1c4:	89 3e       	cpi	r24, 0xE9	; 233
 1c6:	92 07       	cpc	r25, r18
 1c8:	ac f3       	brlt	.-22     	; 0x1b4 <delay+0x1e>
    }
}
void delay(int x)
{
	int i,j;
	for (i=0;i<=x;i++)
 1ca:	89 81       	ldd	r24, Y+1	; 0x01
 1cc:	9a 81       	ldd	r25, Y+2	; 0x02
 1ce:	01 96       	adiw	r24, 0x01	; 1
 1d0:	9a 83       	std	Y+2, r25	; 0x02
 1d2:	89 83       	std	Y+1, r24	; 0x01
 1d4:	29 81       	ldd	r18, Y+1	; 0x01
 1d6:	3a 81       	ldd	r19, Y+2	; 0x02
 1d8:	8d 81       	ldd	r24, Y+5	; 0x05
 1da:	9e 81       	ldd	r25, Y+6	; 0x06
 1dc:	82 17       	cp	r24, r18
 1de:	93 07       	cpc	r25, r19
 1e0:	34 f7       	brge	.-52     	; 0x1ae <delay+0x18>
	for(j=0;j<=1000;j++);
	
}
 1e2:	26 96       	adiw	r28, 0x06	; 6
 1e4:	0f b6       	in	r0, 0x3f	; 63
 1e6:	f8 94       	cli
 1e8:	de bf       	out	0x3e, r29	; 62
 1ea:	0f be       	out	0x3f, r0	; 63
 1ec:	cd bf       	out	0x3d, r28	; 61
 1ee:	cf 91       	pop	r28
 1f0:	df 91       	pop	r29
 1f2:	08 95       	ret

000001f4 <command>:
void command(char c)
{
 1f4:	df 93       	push	r29
 1f6:	cf 93       	push	r28
 1f8:	0f 92       	push	r0
 1fa:	cd b7       	in	r28, 0x3d	; 61
 1fc:	de b7       	in	r29, 0x3e	; 62
 1fe:	89 83       	std	Y+1, r24	; 0x01
	PORTC=c;
 200:	85 e3       	ldi	r24, 0x35	; 53
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	29 81       	ldd	r18, Y+1	; 0x01
 206:	fc 01       	movw	r30, r24
 208:	20 83       	st	Z, r18
	PORTD&=~(1<<6);
 20a:	82 e3       	ldi	r24, 0x32	; 50
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	22 e3       	ldi	r18, 0x32	; 50
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	f9 01       	movw	r30, r18
 214:	20 81       	ld	r18, Z
 216:	2f 7b       	andi	r18, 0xBF	; 191
 218:	fc 01       	movw	r30, r24
 21a:	20 83       	st	Z, r18
	PORTD|=(1<<7);
 21c:	82 e3       	ldi	r24, 0x32	; 50
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	22 e3       	ldi	r18, 0x32	; 50
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	f9 01       	movw	r30, r18
 226:	20 81       	ld	r18, Z
 228:	20 68       	ori	r18, 0x80	; 128
 22a:	fc 01       	movw	r30, r24
 22c:	20 83       	st	Z, r18
	delay(2);
 22e:	82 e0       	ldi	r24, 0x02	; 2
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	0e 94 cb 00 	call	0x196	; 0x196 <delay>
	PORTD&=~(1<<7);
 236:	82 e3       	ldi	r24, 0x32	; 50
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	22 e3       	ldi	r18, 0x32	; 50
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	f9 01       	movw	r30, r18
 240:	20 81       	ld	r18, Z
 242:	2f 77       	andi	r18, 0x7F	; 127
 244:	fc 01       	movw	r30, r24
 246:	20 83       	st	Z, r18
}
 248:	0f 90       	pop	r0
 24a:	cf 91       	pop	r28
 24c:	df 91       	pop	r29
 24e:	08 95       	ret

00000250 <data>:
void data(char d)
{
 250:	df 93       	push	r29
 252:	cf 93       	push	r28
 254:	0f 92       	push	r0
 256:	cd b7       	in	r28, 0x3d	; 61
 258:	de b7       	in	r29, 0x3e	; 62
 25a:	89 83       	std	Y+1, r24	; 0x01
	PORTC=d;
 25c:	85 e3       	ldi	r24, 0x35	; 53
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	29 81       	ldd	r18, Y+1	; 0x01
 262:	fc 01       	movw	r30, r24
 264:	20 83       	st	Z, r18
	PORTD|=(1<<6);
 266:	82 e3       	ldi	r24, 0x32	; 50
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	22 e3       	ldi	r18, 0x32	; 50
 26c:	30 e0       	ldi	r19, 0x00	; 0
 26e:	f9 01       	movw	r30, r18
 270:	20 81       	ld	r18, Z
 272:	20 64       	ori	r18, 0x40	; 64
 274:	fc 01       	movw	r30, r24
 276:	20 83       	st	Z, r18
	PORTD|=(1<<7);
 278:	82 e3       	ldi	r24, 0x32	; 50
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	22 e3       	ldi	r18, 0x32	; 50
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	f9 01       	movw	r30, r18
 282:	20 81       	ld	r18, Z
 284:	20 68       	ori	r18, 0x80	; 128
 286:	fc 01       	movw	r30, r24
 288:	20 83       	st	Z, r18
	delay(2);
 28a:	82 e0       	ldi	r24, 0x02	; 2
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	0e 94 cb 00 	call	0x196	; 0x196 <delay>
	PORTD&=~(1<<7);
 292:	82 e3       	ldi	r24, 0x32	; 50
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	22 e3       	ldi	r18, 0x32	; 50
 298:	30 e0       	ldi	r19, 0x00	; 0
 29a:	f9 01       	movw	r30, r18
 29c:	20 81       	ld	r18, Z
 29e:	2f 77       	andi	r18, 0x7F	; 127
 2a0:	fc 01       	movw	r30, r24
 2a2:	20 83       	st	Z, r18
}
 2a4:	0f 90       	pop	r0
 2a6:	cf 91       	pop	r28
 2a8:	df 91       	pop	r29
 2aa:	08 95       	ret

000002ac <display>:
void display(const char *s)
{
 2ac:	df 93       	push	r29
 2ae:	cf 93       	push	r28
 2b0:	00 d0       	rcall	.+0      	; 0x2b2 <display+0x6>
 2b2:	cd b7       	in	r28, 0x3d	; 61
 2b4:	de b7       	in	r29, 0x3e	; 62
 2b6:	9a 83       	std	Y+2, r25	; 0x02
 2b8:	89 83       	std	Y+1, r24	; 0x01
	while(*s)
 2ba:	10 c0       	rjmp	.+32     	; 0x2dc <display+0x30>
	{
		data(*s++);
 2bc:	89 81       	ldd	r24, Y+1	; 0x01
 2be:	9a 81       	ldd	r25, Y+2	; 0x02
 2c0:	fc 01       	movw	r30, r24
 2c2:	20 81       	ld	r18, Z
 2c4:	89 81       	ldd	r24, Y+1	; 0x01
 2c6:	9a 81       	ldd	r25, Y+2	; 0x02
 2c8:	01 96       	adiw	r24, 0x01	; 1
 2ca:	9a 83       	std	Y+2, r25	; 0x02
 2cc:	89 83       	std	Y+1, r24	; 0x01
 2ce:	82 2f       	mov	r24, r18
 2d0:	0e 94 28 01 	call	0x250	; 0x250 <data>
		delay(2);
 2d4:	82 e0       	ldi	r24, 0x02	; 2
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	0e 94 cb 00 	call	0x196	; 0x196 <delay>
	delay(2);
	PORTD&=~(1<<7);
}
void display(const char *s)
{
	while(*s)
 2dc:	89 81       	ldd	r24, Y+1	; 0x01
 2de:	9a 81       	ldd	r25, Y+2	; 0x02
 2e0:	fc 01       	movw	r30, r24
 2e2:	80 81       	ld	r24, Z
 2e4:	88 23       	and	r24, r24
 2e6:	51 f7       	brne	.-44     	; 0x2bc <display+0x10>
	{
		data(*s++);
		delay(2);
	}
}	
 2e8:	0f 90       	pop	r0
 2ea:	0f 90       	pop	r0
 2ec:	cf 91       	pop	r28
 2ee:	df 91       	pop	r29
 2f0:	08 95       	ret

000002f2 <__divmodhi4>:
 2f2:	97 fb       	bst	r25, 7
 2f4:	09 2e       	mov	r0, r25
 2f6:	07 26       	eor	r0, r23
 2f8:	0a d0       	rcall	.+20     	; 0x30e <__divmodhi4_neg1>
 2fa:	77 fd       	sbrc	r23, 7
 2fc:	04 d0       	rcall	.+8      	; 0x306 <__divmodhi4_neg2>
 2fe:	0c d0       	rcall	.+24     	; 0x318 <__udivmodhi4>
 300:	06 d0       	rcall	.+12     	; 0x30e <__divmodhi4_neg1>
 302:	00 20       	and	r0, r0
 304:	1a f4       	brpl	.+6      	; 0x30c <__divmodhi4_exit>

00000306 <__divmodhi4_neg2>:
 306:	70 95       	com	r23
 308:	61 95       	neg	r22
 30a:	7f 4f       	sbci	r23, 0xFF	; 255

0000030c <__divmodhi4_exit>:
 30c:	08 95       	ret

0000030e <__divmodhi4_neg1>:
 30e:	f6 f7       	brtc	.-4      	; 0x30c <__divmodhi4_exit>
 310:	90 95       	com	r25
 312:	81 95       	neg	r24
 314:	9f 4f       	sbci	r25, 0xFF	; 255
 316:	08 95       	ret

00000318 <__udivmodhi4>:
 318:	aa 1b       	sub	r26, r26
 31a:	bb 1b       	sub	r27, r27
 31c:	51 e1       	ldi	r21, 0x11	; 17
 31e:	07 c0       	rjmp	.+14     	; 0x32e <__udivmodhi4_ep>

00000320 <__udivmodhi4_loop>:
 320:	aa 1f       	adc	r26, r26
 322:	bb 1f       	adc	r27, r27
 324:	a6 17       	cp	r26, r22
 326:	b7 07       	cpc	r27, r23
 328:	10 f0       	brcs	.+4      	; 0x32e <__udivmodhi4_ep>
 32a:	a6 1b       	sub	r26, r22
 32c:	b7 0b       	sbc	r27, r23

0000032e <__udivmodhi4_ep>:
 32e:	88 1f       	adc	r24, r24
 330:	99 1f       	adc	r25, r25
 332:	5a 95       	dec	r21
 334:	a9 f7       	brne	.-22     	; 0x320 <__udivmodhi4_loop>
 336:	80 95       	com	r24
 338:	90 95       	com	r25
 33a:	bc 01       	movw	r22, r24
 33c:	cd 01       	movw	r24, r26
 33e:	08 95       	ret

00000340 <_exit>:
 340:	f8 94       	cli

00000342 <__stop_program>:
 342:	ff cf       	rjmp	.-2      	; 0x342 <__stop_program>
