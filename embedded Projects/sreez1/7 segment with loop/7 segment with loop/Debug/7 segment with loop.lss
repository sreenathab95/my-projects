
7 segment with loop.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000015e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  0000015e  000001d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000001dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  000008a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  0000092d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000025  00000000  00000000  0000094d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000000fa  00000000  00000000  00000972  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000009e  00000000  00000000  00000a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000015b  00000000  00000000  00000b0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000030  00000000  00000000  00000c68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000a4  00000000  00000000  00000c98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 0000001e  00000000  00000000  00000d3c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e5       	ldi	r30, 0x5E	; 94
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 ad 00 	jmp	0x15a	; 0x15a <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:

#include <avr/io.h>
void delay(int x);

int main(void)
{ 
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	2c 97       	sbiw	r28, 0x0c	; 12
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
	DDRC=0xff;
  96:	84 e3       	ldi	r24, 0x34	; 52
  98:	90 e0       	ldi	r25, 0x00	; 0
  9a:	2f ef       	ldi	r18, 0xFF	; 255
  9c:	fc 01       	movw	r30, r24
  9e:	20 83       	st	Z, r18
	char a[10]={0x40,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xd8,0x00,0x90};
  a0:	ce 01       	movw	r24, r28
  a2:	03 96       	adiw	r24, 0x03	; 3
  a4:	20 e6       	ldi	r18, 0x60	; 96
  a6:	30 e0       	ldi	r19, 0x00	; 0
  a8:	4a e0       	ldi	r20, 0x0A	; 10
  aa:	f9 01       	movw	r30, r18
  ac:	00 80       	ld	r0, Z
  ae:	2f 5f       	subi	r18, 0xFF	; 255
  b0:	3f 4f       	sbci	r19, 0xFF	; 255
  b2:	fc 01       	movw	r30, r24
  b4:	00 82       	st	Z, r0
  b6:	01 96       	adiw	r24, 0x01	; 1
  b8:	41 50       	subi	r20, 0x01	; 1
  ba:	44 23       	and	r20, r20
  bc:	b1 f7       	brne	.-20     	; 0xaa <main+0x28>
   while(1)
    {
        int i;
		for(i=0;i<10;i++)
  be:	1a 82       	std	Y+2, r1	; 0x02
  c0:	19 82       	std	Y+1, r1	; 0x01
  c2:	16 c0       	rjmp	.+44     	; 0xf0 <main+0x6e>
		{
			PORTC=a[i];
  c4:	85 e3       	ldi	r24, 0x35	; 53
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	ae 01       	movw	r20, r28
  ca:	4d 5f       	subi	r20, 0xFD	; 253
  cc:	5f 4f       	sbci	r21, 0xFF	; 255
  ce:	29 81       	ldd	r18, Y+1	; 0x01
  d0:	3a 81       	ldd	r19, Y+2	; 0x02
  d2:	24 0f       	add	r18, r20
  d4:	35 1f       	adc	r19, r21
  d6:	f9 01       	movw	r30, r18
  d8:	20 81       	ld	r18, Z
  da:	fc 01       	movw	r30, r24
  dc:	20 83       	st	Z, r18
			delay(20);
  de:	84 e1       	ldi	r24, 0x14	; 20
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	0e 94 7e 00 	call	0xfc	; 0xfc <delay>
	DDRC=0xff;
	char a[10]={0x40,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xd8,0x00,0x90};
   while(1)
    {
        int i;
		for(i=0;i<10;i++)
  e6:	89 81       	ldd	r24, Y+1	; 0x01
  e8:	9a 81       	ldd	r25, Y+2	; 0x02
  ea:	01 96       	adiw	r24, 0x01	; 1
  ec:	9a 83       	std	Y+2, r25	; 0x02
  ee:	89 83       	std	Y+1, r24	; 0x01
  f0:	89 81       	ldd	r24, Y+1	; 0x01
  f2:	9a 81       	ldd	r25, Y+2	; 0x02
  f4:	8a 30       	cpi	r24, 0x0A	; 10
  f6:	91 05       	cpc	r25, r1
  f8:	2c f3       	brlt	.-54     	; 0xc4 <main+0x42>
		{
			PORTC=a[i];
			delay(20);
		}		
    }
  fa:	e1 cf       	rjmp	.-62     	; 0xbe <main+0x3c>

000000fc <delay>:
}
void delay(int x)
{   
  fc:	df 93       	push	r29
  fe:	cf 93       	push	r28
 100:	00 d0       	rcall	.+0      	; 0x102 <delay+0x6>
 102:	00 d0       	rcall	.+0      	; 0x104 <delay+0x8>
 104:	00 d0       	rcall	.+0      	; 0x106 <delay+0xa>
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62
 10a:	9e 83       	std	Y+6, r25	; 0x06
 10c:	8d 83       	std	Y+5, r24	; 0x05
	int i,j;
	for(i=0;i<=x;i++)
 10e:	1a 82       	std	Y+2, r1	; 0x02
 110:	19 82       	std	Y+1, r1	; 0x01
 112:	13 c0       	rjmp	.+38     	; 0x13a <delay+0x3e>
	for(j=0;j<=1000;j++);
 114:	1c 82       	std	Y+4, r1	; 0x04
 116:	1b 82       	std	Y+3, r1	; 0x03
 118:	05 c0       	rjmp	.+10     	; 0x124 <delay+0x28>
 11a:	8b 81       	ldd	r24, Y+3	; 0x03
 11c:	9c 81       	ldd	r25, Y+4	; 0x04
 11e:	01 96       	adiw	r24, 0x01	; 1
 120:	9c 83       	std	Y+4, r25	; 0x04
 122:	8b 83       	std	Y+3, r24	; 0x03
 124:	8b 81       	ldd	r24, Y+3	; 0x03
 126:	9c 81       	ldd	r25, Y+4	; 0x04
 128:	23 e0       	ldi	r18, 0x03	; 3
 12a:	89 3e       	cpi	r24, 0xE9	; 233
 12c:	92 07       	cpc	r25, r18
 12e:	ac f3       	brlt	.-22     	; 0x11a <delay+0x1e>
    }
}
void delay(int x)
{   
	int i,j;
	for(i=0;i<=x;i++)
 130:	89 81       	ldd	r24, Y+1	; 0x01
 132:	9a 81       	ldd	r25, Y+2	; 0x02
 134:	01 96       	adiw	r24, 0x01	; 1
 136:	9a 83       	std	Y+2, r25	; 0x02
 138:	89 83       	std	Y+1, r24	; 0x01
 13a:	29 81       	ldd	r18, Y+1	; 0x01
 13c:	3a 81       	ldd	r19, Y+2	; 0x02
 13e:	8d 81       	ldd	r24, Y+5	; 0x05
 140:	9e 81       	ldd	r25, Y+6	; 0x06
 142:	82 17       	cp	r24, r18
 144:	93 07       	cpc	r25, r19
 146:	34 f7       	brge	.-52     	; 0x114 <delay+0x18>
	for(j=0;j<=1000;j++);
 148:	26 96       	adiw	r28, 0x06	; 6
 14a:	0f b6       	in	r0, 0x3f	; 63
 14c:	f8 94       	cli
 14e:	de bf       	out	0x3e, r29	; 62
 150:	0f be       	out	0x3f, r0	; 63
 152:	cd bf       	out	0x3d, r28	; 61
 154:	cf 91       	pop	r28
 156:	df 91       	pop	r29
 158:	08 95       	ret

0000015a <_exit>:
 15a:	f8 94       	cli

0000015c <__stop_program>:
 15c:	ff cf       	rjmp	.-2      	; 0x15c <__stop_program>
