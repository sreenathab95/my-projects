
coin box.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000060a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00800060  0000060a  0000067e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000006b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  00000e01  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000050  00000000  00000000  00000e21  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000271  00000000  00000000  00000e71  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000d4  00000000  00000000  000010e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000053f  00000000  00000000  000011b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000070  00000000  00000000  000016f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000009e  00000000  00000000  00001768  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_pubtypes 0000001e  00000000  00000000  00001806  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e0       	ldi	r30, 0x0A	; 10
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 39       	cpi	r26, 0x90	; 144
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 03 03 	jmp	0x606	; 0x606 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
void data(char d);
void display(const char *s);
char kepad();

int main(void)
{
  82:	0f 93       	push	r16
  84:	1f 93       	push	r17
  86:	df 93       	push	r29
  88:	cf 93       	push	r28
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62
  8e:	ad 97       	sbiw	r28, 0x2d	; 45
  90:	0f b6       	in	r0, 0x3f	; 63
  92:	f8 94       	cli
  94:	de bf       	out	0x3e, r29	; 62
  96:	0f be       	out	0x3f, r0	; 63
  98:	cd bf       	out	0x3d, r28	; 61
	DDRA=0xf0;
  9a:	8a e3       	ldi	r24, 0x3A	; 58
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	20 ef       	ldi	r18, 0xF0	; 240
  a0:	fc 01       	movw	r30, r24
  a2:	20 83       	st	Z, r18
	DDRB=0x00;
  a4:	87 e3       	ldi	r24, 0x37	; 55
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	fc 01       	movw	r30, r24
  aa:	10 82       	st	Z, r1
	DDRC=0xff;
  ac:	84 e3       	ldi	r24, 0x34	; 52
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	2f ef       	ldi	r18, 0xFF	; 255
  b2:	fc 01       	movw	r30, r24
  b4:	20 83       	st	Z, r18
	DDRD=0xff;
  b6:	81 e3       	ldi	r24, 0x31	; 49
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	2f ef       	ldi	r18, 0xFF	; 255
  bc:	fc 01       	movw	r30, r24
  be:	20 83       	st	Z, r18
	PORTB=0xff;
  c0:	88 e3       	ldi	r24, 0x38	; 56
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	2f ef       	ldi	r18, 0xFF	; 255
  c6:	fc 01       	movw	r30, r24
  c8:	20 83       	st	Z, r18
	command(0x38);
  ca:	88 e3       	ldi	r24, 0x38	; 56
  cc:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
	command(0x80);
  d0:	80 e8       	ldi	r24, 0x80	; 128
  d2:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
	command(0x0c);
  d6:	8c e0       	ldi	r24, 0x0C	; 12
  d8:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
	command(0x06);
  dc:	86 e0       	ldi	r24, 0x06	; 6
  de:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
	command(0x01);
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
  e8:	03 c0       	rjmp	.+6      	; 0xf0 <main+0x6e>
			  {
				a=60+a;
		      }
		  }		  
	  }	  
    }
  ea:	00 00       	nop
  ec:	01 c0       	rjmp	.+2      	; 0xf0 <main+0x6e>
  ee:	00 00       	nop
	command(0x0c);
	command(0x06);
	command(0x01);
    while(1)
    {
		int d=0,t,a;
  f0:	1d 82       	std	Y+5, r1	; 0x05
  f2:	1c 82       	std	Y+4, r1	; 0x04
		char k[20];
		char c[15]={0xc0,0xc1,0xc2,0xc3,0xc4,0xc5,0xc6,0xc7,0xc8,0xc9};
  f4:	2f e0       	ldi	r18, 0x0F	; 15
  f6:	ce 01       	movw	r24, r28
  f8:	4f 96       	adiw	r24, 0x1f	; 31
  fa:	fc 01       	movw	r30, r24
  fc:	32 2f       	mov	r19, r18
  fe:	11 92       	st	Z+, r1
 100:	3a 95       	dec	r19
 102:	e9 f7       	brne	.-6      	; 0xfe <main+0x7c>
 104:	80 ec       	ldi	r24, 0xC0	; 192
 106:	8f 8f       	std	Y+31, r24	; 0x1f
 108:	81 ec       	ldi	r24, 0xC1	; 193
 10a:	88 a3       	std	Y+32, r24	; 0x20
 10c:	82 ec       	ldi	r24, 0xC2	; 194
 10e:	89 a3       	std	Y+33, r24	; 0x21
 110:	83 ec       	ldi	r24, 0xC3	; 195
 112:	8a a3       	std	Y+34, r24	; 0x22
 114:	84 ec       	ldi	r24, 0xC4	; 196
 116:	8b a3       	std	Y+35, r24	; 0x23
 118:	85 ec       	ldi	r24, 0xC5	; 197
 11a:	8c a3       	std	Y+36, r24	; 0x24
 11c:	86 ec       	ldi	r24, 0xC6	; 198
 11e:	8d a3       	std	Y+37, r24	; 0x25
 120:	87 ec       	ldi	r24, 0xC7	; 199
 122:	8e a3       	std	Y+38, r24	; 0x26
 124:	88 ec       	ldi	r24, 0xC8	; 200
 126:	8f a3       	std	Y+39, r24	; 0x27
 128:	89 ec       	ldi	r24, 0xC9	; 201
 12a:	88 a7       	std	Y+40, r24	; 0x28
	  command(0x80);
 12c:	80 e8       	ldi	r24, 0x80	; 128
 12e:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
	  display("insert the coin");
 132:	80 e6       	ldi	r24, 0x60	; 96
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	0e 94 ad 02 	call	0x55a	; 0x55a <display>
	  char i=PINB;
 13a:	86 e3       	ldi	r24, 0x36	; 54
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	fc 01       	movw	r30, r24
 140:	80 81       	ld	r24, Z
 142:	8b 83       	std	Y+3, r24	; 0x03
	  i=i&0xff;
	  if(i==0xfe&&d==0)
 144:	8b 81       	ldd	r24, Y+3	; 0x03
 146:	8e 3f       	cpi	r24, 0xFE	; 254
 148:	81 f6       	brne	.-96     	; 0xea <main+0x68>
 14a:	8c 81       	ldd	r24, Y+4	; 0x04
 14c:	9d 81       	ldd	r25, Y+5	; 0x05
 14e:	00 97       	sbiw	r24, 0x00	; 0
 150:	71 f6       	brne	.-100    	; 0xee <main+0x6c>
	  {
		 command(0x01);
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
		 command(0x80);
 158:	80 e8       	ldi	r24, 0x80	; 128
 15a:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
		  display("enter the number");  
 15e:	80 e7       	ldi	r24, 0x70	; 112
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 ad 02 	call	0x55a	; 0x55a <display>
		  d=1;
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	9d 83       	std	Y+5, r25	; 0x05
 16c:	8c 83       	std	Y+4, r24	; 0x04
		  for (i=0;i<10;i++)
 16e:	1b 82       	std	Y+3, r1	; 0x03
 170:	2b c0       	rjmp	.+86     	; 0x1c8 <main+0x146>
		  {
			  command(c[i]);
 172:	8b 81       	ldd	r24, Y+3	; 0x03
 174:	88 2f       	mov	r24, r24
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	9e 01       	movw	r18, r28
 17a:	21 5e       	subi	r18, 0xE1	; 225
 17c:	3f 4f       	sbci	r19, 0xFF	; 255
 17e:	82 0f       	add	r24, r18
 180:	93 1f       	adc	r25, r19
 182:	fc 01       	movw	r30, r24
 184:	80 81       	ld	r24, Z
 186:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
			  k[i]=kepad();
 18a:	8b 81       	ldd	r24, Y+3	; 0x03
 18c:	08 2f       	mov	r16, r24
 18e:	10 e0       	ldi	r17, 0x00	; 0
 190:	0e 94 48 01 	call	0x290	; 0x290 <kepad>
 194:	28 2f       	mov	r18, r24
 196:	ce 01       	movw	r24, r28
 198:	0b 96       	adiw	r24, 0x0b	; 11
 19a:	80 0f       	add	r24, r16
 19c:	91 1f       	adc	r25, r17
 19e:	fc 01       	movw	r30, r24
 1a0:	20 83       	st	Z, r18
			  data(k[i]);
 1a2:	8b 81       	ldd	r24, Y+3	; 0x03
 1a4:	88 2f       	mov	r24, r24
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	9e 01       	movw	r18, r28
 1aa:	25 5f       	subi	r18, 0xF5	; 245
 1ac:	3f 4f       	sbci	r19, 0xFF	; 255
 1ae:	82 0f       	add	r24, r18
 1b0:	93 1f       	adc	r25, r19
 1b2:	fc 01       	movw	r30, r24
 1b4:	80 81       	ld	r24, Z
 1b6:	0e 94 7f 02 	call	0x4fe	; 0x4fe <data>
			  delay(10);
 1ba:	8a e0       	ldi	r24, 0x0A	; 10
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	0e 94 22 02 	call	0x444	; 0x444 <delay>
	  {
		 command(0x01);
		 command(0x80);
		  display("enter the number");  
		  d=1;
		  for (i=0;i<10;i++)
 1c2:	8b 81       	ldd	r24, Y+3	; 0x03
 1c4:	8f 5f       	subi	r24, 0xFF	; 255
 1c6:	8b 83       	std	Y+3, r24	; 0x03
 1c8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ca:	8a 30       	cpi	r24, 0x0A	; 10
 1cc:	90 f2       	brcs	.-92     	; 0x172 <main+0xf0>
			  command(c[i]);
			  k[i]=kepad();
			  data(k[i]);
			  delay(10);
		  }
		  command(0x01);
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
		  command(0x80);
 1d4:	80 e8       	ldi	r24, 0x80	; 128
 1d6:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
		  display("remaining time");
 1da:	81 e8       	ldi	r24, 0x81	; 129
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	0e 94 ad 02 	call	0x55a	; 0x55a <display>
		  command(0xc0);
 1e2:	80 ec       	ldi	r24, 0xC0	; 192
 1e4:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
		  for (a=60;0<=a;a--)
 1e8:	8c e3       	ldi	r24, 0x3C	; 60
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	9a 83       	std	Y+2, r25	; 0x02
 1ee:	89 83       	std	Y+1, r24	; 0x01
 1f0:	49 c0       	rjmp	.+146    	; 0x284 <main+0x202>
		  {
			char a1=a/100;
 1f2:	89 81       	ldd	r24, Y+1	; 0x01
 1f4:	9a 81       	ldd	r25, Y+2	; 0x02
 1f6:	24 e6       	ldi	r18, 0x64	; 100
 1f8:	30 e0       	ldi	r19, 0x00	; 0
 1fa:	b9 01       	movw	r22, r18
 1fc:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__divmodhi4>
 200:	9b 01       	movw	r18, r22
 202:	c9 01       	movw	r24, r18
 204:	8e 83       	std	Y+6, r24	; 0x06
			char a2=a%100;
 206:	89 81       	ldd	r24, Y+1	; 0x01
 208:	9a 81       	ldd	r25, Y+2	; 0x02
 20a:	24 e6       	ldi	r18, 0x64	; 100
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	b9 01       	movw	r22, r18
 210:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <__divmodhi4>
 214:	8f 83       	std	Y+7, r24	; 0x07
			char a3=a2/10;
 216:	8f 81       	ldd	r24, Y+7	; 0x07
 218:	9a e0       	ldi	r25, 0x0A	; 10
 21a:	69 2f       	mov	r22, r25
 21c:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__udivmodqi4>
 220:	88 87       	std	Y+8, r24	; 0x08
			char a4=a2%10;
 222:	8f 81       	ldd	r24, Y+7	; 0x07
 224:	9a e0       	ldi	r25, 0x0A	; 10
 226:	69 2f       	mov	r22, r25
 228:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__udivmodqi4>
 22c:	89 2f       	mov	r24, r25
 22e:	89 87       	std	Y+9, r24	; 0x09
			  command(0xc0);
 230:	80 ec       	ldi	r24, 0xC0	; 192
 232:	0e 94 51 02 	call	0x4a2	; 0x4a2 <command>
			  data(a1+0x30);
 236:	8e 81       	ldd	r24, Y+6	; 0x06
 238:	80 5d       	subi	r24, 0xD0	; 208
 23a:	0e 94 7f 02 	call	0x4fe	; 0x4fe <data>
			  data(a3+0x30);
 23e:	88 85       	ldd	r24, Y+8	; 0x08
 240:	80 5d       	subi	r24, 0xD0	; 208
 242:	0e 94 7f 02 	call	0x4fe	; 0x4fe <data>
			  data(a4+0x30);
 246:	89 85       	ldd	r24, Y+9	; 0x09
 248:	80 5d       	subi	r24, 0xD0	; 208
 24a:	0e 94 7f 02 	call	0x4fe	; 0x4fe <data>
			  delay(10);
 24e:	8a e0       	ldi	r24, 0x0A	; 10
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	0e 94 22 02 	call	0x444	; 0x444 <delay>
			  char i=PINB;
 256:	86 e3       	ldi	r24, 0x36	; 54
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	fc 01       	movw	r30, r24
 25c:	80 81       	ld	r24, Z
 25e:	8a 87       	std	Y+10, r24	; 0x0a
			  i=i&0xff;	  
			  if (i==0xfe&&d==1)
 260:	8a 85       	ldd	r24, Y+10	; 0x0a
 262:	8e 3f       	cpi	r24, 0xFE	; 254
 264:	51 f4       	brne	.+20     	; 0x27a <main+0x1f8>
 266:	8c 81       	ldd	r24, Y+4	; 0x04
 268:	9d 81       	ldd	r25, Y+5	; 0x05
 26a:	81 30       	cpi	r24, 0x01	; 1
 26c:	91 05       	cpc	r25, r1
 26e:	29 f4       	brne	.+10     	; 0x27a <main+0x1f8>
			  {
				a=60+a;
 270:	89 81       	ldd	r24, Y+1	; 0x01
 272:	9a 81       	ldd	r25, Y+2	; 0x02
 274:	cc 96       	adiw	r24, 0x3c	; 60
 276:	9a 83       	std	Y+2, r25	; 0x02
 278:	89 83       	std	Y+1, r24	; 0x01
		  }
		  command(0x01);
		  command(0x80);
		  display("remaining time");
		  command(0xc0);
		  for (a=60;0<=a;a--)
 27a:	89 81       	ldd	r24, Y+1	; 0x01
 27c:	9a 81       	ldd	r25, Y+2	; 0x02
 27e:	01 97       	sbiw	r24, 0x01	; 1
 280:	9a 83       	std	Y+2, r25	; 0x02
 282:	89 83       	std	Y+1, r24	; 0x01
 284:	89 81       	ldd	r24, Y+1	; 0x01
 286:	9a 81       	ldd	r25, Y+2	; 0x02
 288:	99 23       	and	r25, r25
 28a:	0c f0       	brlt	.+2      	; 0x28e <main+0x20c>
 28c:	b2 cf       	rjmp	.-156    	; 0x1f2 <main+0x170>
			  {
				a=60+a;
		      }
		  }		  
	  }	  
    }
 28e:	30 cf       	rjmp	.-416    	; 0xf0 <main+0x6e>

00000290 <kepad>:
}
char kepad()
{
 290:	df 93       	push	r29
 292:	cf 93       	push	r28
 294:	cd b7       	in	r28, 0x3d	; 61
 296:	de b7       	in	r29, 0x3e	; 62
 298:	27 97       	sbiw	r28, 0x07	; 7
 29a:	0f b6       	in	r0, 0x3f	; 63
 29c:	f8 94       	cli
 29e:	de bf       	out	0x3e, r29	; 62
 2a0:	0f be       	out	0x3f, r0	; 63
 2a2:	cd bf       	out	0x3d, r28	; 61
	delay(2);
 2a4:	82 e0       	ldi	r24, 0x02	; 2
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	0e 94 22 02 	call	0x444	; 0x444 <delay>
	int t=0;
 2ac:	1a 82       	std	Y+2, r1	; 0x02
 2ae:	19 82       	std	Y+1, r1	; 0x01
 2b0:	01 c0       	rjmp	.+2      	; 0x2b4 <kepad+0x24>
		}
		if (t==1)
		{
			return(s);
		}
	}		
 2b2:	00 00       	nop
	delay(2);
	int t=0;
	char s;
	while (1)
	{
	    PORTA=0x7f;
 2b4:	8b e3       	ldi	r24, 0x3B	; 59
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	2f e7       	ldi	r18, 0x7F	; 127
 2ba:	fc 01       	movw	r30, r24
 2bc:	20 83       	st	Z, r18
		char i=PINA;
 2be:	89 e3       	ldi	r24, 0x39	; 57
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	fc 01       	movw	r30, r24
 2c4:	80 81       	ld	r24, Z
 2c6:	8c 83       	std	Y+4, r24	; 0x04
		i=i&0xff;
		if(i==0x7e)
 2c8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ca:	8e 37       	cpi	r24, 0x7E	; 126
 2cc:	31 f4       	brne	.+12     	; 0x2da <kepad+0x4a>
		{
			s='7';
 2ce:	87 e3       	ldi	r24, 0x37	; 55
 2d0:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	9a 83       	std	Y+2, r25	; 0x02
 2d8:	89 83       	std	Y+1, r24	; 0x01
		}
			if(i==0x7d)
 2da:	8c 81       	ldd	r24, Y+4	; 0x04
 2dc:	8d 37       	cpi	r24, 0x7D	; 125
 2de:	31 f4       	brne	.+12     	; 0x2ec <kepad+0x5c>
		{
			s='4';
 2e0:	84 e3       	ldi	r24, 0x34	; 52
 2e2:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	9a 83       	std	Y+2, r25	; 0x02
 2ea:	89 83       	std	Y+1, r24	; 0x01
		}
			if(i==0x7b)
 2ec:	8c 81       	ldd	r24, Y+4	; 0x04
 2ee:	8b 37       	cpi	r24, 0x7B	; 123
 2f0:	31 f4       	brne	.+12     	; 0x2fe <kepad+0x6e>
		{
			s='1';
 2f2:	81 e3       	ldi	r24, 0x31	; 49
 2f4:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	9a 83       	std	Y+2, r25	; 0x02
 2fc:	89 83       	std	Y+1, r24	; 0x01
		}
			if(i==0x77)
 2fe:	8c 81       	ldd	r24, Y+4	; 0x04
 300:	87 37       	cpi	r24, 0x77	; 119
 302:	31 f4       	brne	.+12     	; 0x310 <kepad+0x80>
		{
			s='c';
 304:	83 e6       	ldi	r24, 0x63	; 99
 306:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	9a 83       	std	Y+2, r25	; 0x02
 30e:	89 83       	std	Y+1, r24	; 0x01
		}
			
        PORTA=0xbf;
 310:	8b e3       	ldi	r24, 0x3B	; 59
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	2f eb       	ldi	r18, 0xBF	; 191
 316:	fc 01       	movw	r30, r24
 318:	20 83       	st	Z, r18
		char j=PINA;
 31a:	89 e3       	ldi	r24, 0x39	; 57
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	fc 01       	movw	r30, r24
 320:	80 81       	ld	r24, Z
 322:	8d 83       	std	Y+5, r24	; 0x05
		j=j&0xff;
		if (j==0xbe)
 324:	8d 81       	ldd	r24, Y+5	; 0x05
 326:	8e 3b       	cpi	r24, 0xBE	; 190
 328:	31 f4       	brne	.+12     	; 0x336 <kepad+0xa6>
		{
			s='8';
 32a:	88 e3       	ldi	r24, 0x38	; 56
 32c:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	9a 83       	std	Y+2, r25	; 0x02
 334:	89 83       	std	Y+1, r24	; 0x01
		}
		if (j==0xbd)
 336:	8d 81       	ldd	r24, Y+5	; 0x05
 338:	8d 3b       	cpi	r24, 0xBD	; 189
 33a:	31 f4       	brne	.+12     	; 0x348 <kepad+0xb8>
		{
			s='5';
 33c:	85 e3       	ldi	r24, 0x35	; 53
 33e:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 340:	81 e0       	ldi	r24, 0x01	; 1
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	9a 83       	std	Y+2, r25	; 0x02
 346:	89 83       	std	Y+1, r24	; 0x01
		}
		if(j==0xbb)
 348:	8d 81       	ldd	r24, Y+5	; 0x05
 34a:	8b 3b       	cpi	r24, 0xBB	; 187
 34c:	31 f4       	brne	.+12     	; 0x35a <kepad+0xca>
		{
			s='2';
 34e:	82 e3       	ldi	r24, 0x32	; 50
 350:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	9a 83       	std	Y+2, r25	; 0x02
 358:	89 83       	std	Y+1, r24	; 0x01
		}
		if (j==0xb7)
 35a:	8d 81       	ldd	r24, Y+5	; 0x05
 35c:	87 3b       	cpi	r24, 0xB7	; 183
 35e:	31 f4       	brne	.+12     	; 0x36c <kepad+0xdc>
		{
			s='0';
 360:	80 e3       	ldi	r24, 0x30	; 48
 362:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	9a 83       	std	Y+2, r25	; 0x02
 36a:	89 83       	std	Y+1, r24	; 0x01
		}
		
        PORTA=0xef;
 36c:	8b e3       	ldi	r24, 0x3B	; 59
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	2f ee       	ldi	r18, 0xEF	; 239
 372:	fc 01       	movw	r30, r24
 374:	20 83       	st	Z, r18
		char k=PINA;
 376:	89 e3       	ldi	r24, 0x39	; 57
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	fc 01       	movw	r30, r24
 37c:	80 81       	ld	r24, Z
 37e:	8e 83       	std	Y+6, r24	; 0x06
		k=k&0xff;
		if (k==0xee)
 380:	8e 81       	ldd	r24, Y+6	; 0x06
 382:	8e 3e       	cpi	r24, 0xEE	; 238
 384:	31 f4       	brne	.+12     	; 0x392 <kepad+0x102>
		{
			s='9';
 386:	89 e3       	ldi	r24, 0x39	; 57
 388:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 38a:	81 e0       	ldi	r24, 0x01	; 1
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	9a 83       	std	Y+2, r25	; 0x02
 390:	89 83       	std	Y+1, r24	; 0x01
		}
		if (k==0xed)
 392:	8e 81       	ldd	r24, Y+6	; 0x06
 394:	8d 3e       	cpi	r24, 0xED	; 237
 396:	31 f4       	brne	.+12     	; 0x3a4 <kepad+0x114>
		{
			s='6';
 398:	86 e3       	ldi	r24, 0x36	; 54
 39a:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	9a 83       	std	Y+2, r25	; 0x02
 3a2:	89 83       	std	Y+1, r24	; 0x01
		}
		if (k==0xeb)
 3a4:	8e 81       	ldd	r24, Y+6	; 0x06
 3a6:	8b 3e       	cpi	r24, 0xEB	; 235
 3a8:	31 f4       	brne	.+12     	; 0x3b6 <kepad+0x126>
		{
			s='3';
 3aa:	83 e3       	ldi	r24, 0x33	; 51
 3ac:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 3ae:	81 e0       	ldi	r24, 0x01	; 1
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	9a 83       	std	Y+2, r25	; 0x02
 3b4:	89 83       	std	Y+1, r24	; 0x01
		}
		if (k==0xe7)
 3b6:	8e 81       	ldd	r24, Y+6	; 0x06
 3b8:	87 3e       	cpi	r24, 0xE7	; 231
 3ba:	31 f4       	brne	.+12     	; 0x3c8 <kepad+0x138>
		{
			s='=';
 3bc:	8d e3       	ldi	r24, 0x3D	; 61
 3be:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	9a 83       	std	Y+2, r25	; 0x02
 3c6:	89 83       	std	Y+1, r24	; 0x01
		}

		PORTA=0xdf;
 3c8:	8b e3       	ldi	r24, 0x3B	; 59
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	2f ed       	ldi	r18, 0xDF	; 223
 3ce:	fc 01       	movw	r30, r24
 3d0:	20 83       	st	Z, r18
		char l=PINA;
 3d2:	89 e3       	ldi	r24, 0x39	; 57
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	fc 01       	movw	r30, r24
 3d8:	80 81       	ld	r24, Z
 3da:	8f 83       	std	Y+7, r24	; 0x07
		l=l&0xff;
		if (l==0xde)
 3dc:	8f 81       	ldd	r24, Y+7	; 0x07
 3de:	8e 3d       	cpi	r24, 0xDE	; 222
 3e0:	31 f4       	brne	.+12     	; 0x3ee <kepad+0x15e>
		{
			s='/';
 3e2:	8f e2       	ldi	r24, 0x2F	; 47
 3e4:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	9a 83       	std	Y+2, r25	; 0x02
 3ec:	89 83       	std	Y+1, r24	; 0x01
		}
		if (l==0xdd)
 3ee:	8f 81       	ldd	r24, Y+7	; 0x07
 3f0:	8d 3d       	cpi	r24, 0xDD	; 221
 3f2:	31 f4       	brne	.+12     	; 0x400 <kepad+0x170>
		{
			s='*';
 3f4:	8a e2       	ldi	r24, 0x2A	; 42
 3f6:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 3f8:	81 e0       	ldi	r24, 0x01	; 1
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	9a 83       	std	Y+2, r25	; 0x02
 3fe:	89 83       	std	Y+1, r24	; 0x01
		}
		if (l==0xdb)
 400:	8f 81       	ldd	r24, Y+7	; 0x07
 402:	8b 3d       	cpi	r24, 0xDB	; 219
 404:	31 f4       	brne	.+12     	; 0x412 <kepad+0x182>
		{
			s='-';
 406:	8d e2       	ldi	r24, 0x2D	; 45
 408:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	9a 83       	std	Y+2, r25	; 0x02
 410:	89 83       	std	Y+1, r24	; 0x01
		}
		if (l==0xd7)
 412:	8f 81       	ldd	r24, Y+7	; 0x07
 414:	87 3d       	cpi	r24, 0xD7	; 215
 416:	31 f4       	brne	.+12     	; 0x424 <kepad+0x194>
		{
			s='+';
 418:	8b e2       	ldi	r24, 0x2B	; 43
 41a:	8b 83       	std	Y+3, r24	; 0x03
			t=1;
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	9a 83       	std	Y+2, r25	; 0x02
 422:	89 83       	std	Y+1, r24	; 0x01
		}
		if (t==1)
 424:	89 81       	ldd	r24, Y+1	; 0x01
 426:	9a 81       	ldd	r25, Y+2	; 0x02
 428:	81 30       	cpi	r24, 0x01	; 1
 42a:	91 05       	cpc	r25, r1
 42c:	09 f0       	breq	.+2      	; 0x430 <kepad+0x1a0>
 42e:	41 cf       	rjmp	.-382    	; 0x2b2 <kepad+0x22>
		{
			return(s);
 430:	8b 81       	ldd	r24, Y+3	; 0x03
		}
	}		
					
	
}
 432:	27 96       	adiw	r28, 0x07	; 7
 434:	0f b6       	in	r0, 0x3f	; 63
 436:	f8 94       	cli
 438:	de bf       	out	0x3e, r29	; 62
 43a:	0f be       	out	0x3f, r0	; 63
 43c:	cd bf       	out	0x3d, r28	; 61
 43e:	cf 91       	pop	r28
 440:	df 91       	pop	r29
 442:	08 95       	ret

00000444 <delay>:
void delay(int x)
{
 444:	df 93       	push	r29
 446:	cf 93       	push	r28
 448:	00 d0       	rcall	.+0      	; 0x44a <delay+0x6>
 44a:	00 d0       	rcall	.+0      	; 0x44c <delay+0x8>
 44c:	00 d0       	rcall	.+0      	; 0x44e <delay+0xa>
 44e:	cd b7       	in	r28, 0x3d	; 61
 450:	de b7       	in	r29, 0x3e	; 62
 452:	9e 83       	std	Y+6, r25	; 0x06
 454:	8d 83       	std	Y+5, r24	; 0x05
	int i,j;
	for (i=0;i<=x;i++)
 456:	1a 82       	std	Y+2, r1	; 0x02
 458:	19 82       	std	Y+1, r1	; 0x01
 45a:	13 c0       	rjmp	.+38     	; 0x482 <__stack+0x23>
	for(j=0;j<=1000;j++);
 45c:	1c 82       	std	Y+4, r1	; 0x04
 45e:	1b 82       	std	Y+3, r1	; 0x03
 460:	05 c0       	rjmp	.+10     	; 0x46c <__stack+0xd>
 462:	8b 81       	ldd	r24, Y+3	; 0x03
 464:	9c 81       	ldd	r25, Y+4	; 0x04
 466:	01 96       	adiw	r24, 0x01	; 1
 468:	9c 83       	std	Y+4, r25	; 0x04
 46a:	8b 83       	std	Y+3, r24	; 0x03
 46c:	8b 81       	ldd	r24, Y+3	; 0x03
 46e:	9c 81       	ldd	r25, Y+4	; 0x04
 470:	23 e0       	ldi	r18, 0x03	; 3
 472:	89 3e       	cpi	r24, 0xE9	; 233
 474:	92 07       	cpc	r25, r18
 476:	ac f3       	brlt	.-22     	; 0x462 <__stack+0x3>
	
}
void delay(int x)
{
	int i,j;
	for (i=0;i<=x;i++)
 478:	89 81       	ldd	r24, Y+1	; 0x01
 47a:	9a 81       	ldd	r25, Y+2	; 0x02
 47c:	01 96       	adiw	r24, 0x01	; 1
 47e:	9a 83       	std	Y+2, r25	; 0x02
 480:	89 83       	std	Y+1, r24	; 0x01
 482:	29 81       	ldd	r18, Y+1	; 0x01
 484:	3a 81       	ldd	r19, Y+2	; 0x02
 486:	8d 81       	ldd	r24, Y+5	; 0x05
 488:	9e 81       	ldd	r25, Y+6	; 0x06
 48a:	82 17       	cp	r24, r18
 48c:	93 07       	cpc	r25, r19
 48e:	34 f7       	brge	.-52     	; 0x45c <delay+0x18>
	for(j=0;j<=1000;j++);
	
}
 490:	26 96       	adiw	r28, 0x06	; 6
 492:	0f b6       	in	r0, 0x3f	; 63
 494:	f8 94       	cli
 496:	de bf       	out	0x3e, r29	; 62
 498:	0f be       	out	0x3f, r0	; 63
 49a:	cd bf       	out	0x3d, r28	; 61
 49c:	cf 91       	pop	r28
 49e:	df 91       	pop	r29
 4a0:	08 95       	ret

000004a2 <command>:
void command(char c)
{
 4a2:	df 93       	push	r29
 4a4:	cf 93       	push	r28
 4a6:	0f 92       	push	r0
 4a8:	cd b7       	in	r28, 0x3d	; 61
 4aa:	de b7       	in	r29, 0x3e	; 62
 4ac:	89 83       	std	Y+1, r24	; 0x01
	PORTC=c;
 4ae:	85 e3       	ldi	r24, 0x35	; 53
 4b0:	90 e0       	ldi	r25, 0x00	; 0
 4b2:	29 81       	ldd	r18, Y+1	; 0x01
 4b4:	fc 01       	movw	r30, r24
 4b6:	20 83       	st	Z, r18
	PORTD&=~(1<<6);
 4b8:	82 e3       	ldi	r24, 0x32	; 50
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	22 e3       	ldi	r18, 0x32	; 50
 4be:	30 e0       	ldi	r19, 0x00	; 0
 4c0:	f9 01       	movw	r30, r18
 4c2:	20 81       	ld	r18, Z
 4c4:	2f 7b       	andi	r18, 0xBF	; 191
 4c6:	fc 01       	movw	r30, r24
 4c8:	20 83       	st	Z, r18
	PORTD|=(1<<7);
 4ca:	82 e3       	ldi	r24, 0x32	; 50
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	22 e3       	ldi	r18, 0x32	; 50
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	f9 01       	movw	r30, r18
 4d4:	20 81       	ld	r18, Z
 4d6:	20 68       	ori	r18, 0x80	; 128
 4d8:	fc 01       	movw	r30, r24
 4da:	20 83       	st	Z, r18
	delay(2);
 4dc:	82 e0       	ldi	r24, 0x02	; 2
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	0e 94 22 02 	call	0x444	; 0x444 <delay>
	PORTD&=~(1<<7);
 4e4:	82 e3       	ldi	r24, 0x32	; 50
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	22 e3       	ldi	r18, 0x32	; 50
 4ea:	30 e0       	ldi	r19, 0x00	; 0
 4ec:	f9 01       	movw	r30, r18
 4ee:	20 81       	ld	r18, Z
 4f0:	2f 77       	andi	r18, 0x7F	; 127
 4f2:	fc 01       	movw	r30, r24
 4f4:	20 83       	st	Z, r18
}
 4f6:	0f 90       	pop	r0
 4f8:	cf 91       	pop	r28
 4fa:	df 91       	pop	r29
 4fc:	08 95       	ret

000004fe <data>:
void data(char d)
{
 4fe:	df 93       	push	r29
 500:	cf 93       	push	r28
 502:	0f 92       	push	r0
 504:	cd b7       	in	r28, 0x3d	; 61
 506:	de b7       	in	r29, 0x3e	; 62
 508:	89 83       	std	Y+1, r24	; 0x01
	PORTC=d;
 50a:	85 e3       	ldi	r24, 0x35	; 53
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	29 81       	ldd	r18, Y+1	; 0x01
 510:	fc 01       	movw	r30, r24
 512:	20 83       	st	Z, r18
	PORTD|=(1<<6);
 514:	82 e3       	ldi	r24, 0x32	; 50
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	22 e3       	ldi	r18, 0x32	; 50
 51a:	30 e0       	ldi	r19, 0x00	; 0
 51c:	f9 01       	movw	r30, r18
 51e:	20 81       	ld	r18, Z
 520:	20 64       	ori	r18, 0x40	; 64
 522:	fc 01       	movw	r30, r24
 524:	20 83       	st	Z, r18
	PORTD|=(1<<7);
 526:	82 e3       	ldi	r24, 0x32	; 50
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	22 e3       	ldi	r18, 0x32	; 50
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	f9 01       	movw	r30, r18
 530:	20 81       	ld	r18, Z
 532:	20 68       	ori	r18, 0x80	; 128
 534:	fc 01       	movw	r30, r24
 536:	20 83       	st	Z, r18
	delay(2);
 538:	82 e0       	ldi	r24, 0x02	; 2
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	0e 94 22 02 	call	0x444	; 0x444 <delay>
	PORTD&=~(1<<7);
 540:	82 e3       	ldi	r24, 0x32	; 50
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	22 e3       	ldi	r18, 0x32	; 50
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	f9 01       	movw	r30, r18
 54a:	20 81       	ld	r18, Z
 54c:	2f 77       	andi	r18, 0x7F	; 127
 54e:	fc 01       	movw	r30, r24
 550:	20 83       	st	Z, r18
}
 552:	0f 90       	pop	r0
 554:	cf 91       	pop	r28
 556:	df 91       	pop	r29
 558:	08 95       	ret

0000055a <display>:
void display(const char *s)
{
 55a:	df 93       	push	r29
 55c:	cf 93       	push	r28
 55e:	00 d0       	rcall	.+0      	; 0x560 <display+0x6>
 560:	cd b7       	in	r28, 0x3d	; 61
 562:	de b7       	in	r29, 0x3e	; 62
 564:	9a 83       	std	Y+2, r25	; 0x02
 566:	89 83       	std	Y+1, r24	; 0x01
	while(*s)
 568:	10 c0       	rjmp	.+32     	; 0x58a <display+0x30>
	{
		data(*s++);
 56a:	89 81       	ldd	r24, Y+1	; 0x01
 56c:	9a 81       	ldd	r25, Y+2	; 0x02
 56e:	fc 01       	movw	r30, r24
 570:	20 81       	ld	r18, Z
 572:	89 81       	ldd	r24, Y+1	; 0x01
 574:	9a 81       	ldd	r25, Y+2	; 0x02
 576:	01 96       	adiw	r24, 0x01	; 1
 578:	9a 83       	std	Y+2, r25	; 0x02
 57a:	89 83       	std	Y+1, r24	; 0x01
 57c:	82 2f       	mov	r24, r18
 57e:	0e 94 7f 02 	call	0x4fe	; 0x4fe <data>
		delay(2);
 582:	82 e0       	ldi	r24, 0x02	; 2
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	0e 94 22 02 	call	0x444	; 0x444 <delay>
	delay(2);
	PORTD&=~(1<<7);
}
void display(const char *s)
{
	while(*s)
 58a:	89 81       	ldd	r24, Y+1	; 0x01
 58c:	9a 81       	ldd	r25, Y+2	; 0x02
 58e:	fc 01       	movw	r30, r24
 590:	80 81       	ld	r24, Z
 592:	88 23       	and	r24, r24
 594:	51 f7       	brne	.-44     	; 0x56a <display+0x10>
	{
		data(*s++);
		delay(2);
	}
 596:	0f 90       	pop	r0
 598:	0f 90       	pop	r0
 59a:	cf 91       	pop	r28
 59c:	df 91       	pop	r29
 59e:	08 95       	ret

000005a0 <__udivmodqi4>:
 5a0:	99 1b       	sub	r25, r25
 5a2:	79 e0       	ldi	r23, 0x09	; 9
 5a4:	04 c0       	rjmp	.+8      	; 0x5ae <__udivmodqi4_ep>

000005a6 <__udivmodqi4_loop>:
 5a6:	99 1f       	adc	r25, r25
 5a8:	96 17       	cp	r25, r22
 5aa:	08 f0       	brcs	.+2      	; 0x5ae <__udivmodqi4_ep>
 5ac:	96 1b       	sub	r25, r22

000005ae <__udivmodqi4_ep>:
 5ae:	88 1f       	adc	r24, r24
 5b0:	7a 95       	dec	r23
 5b2:	c9 f7       	brne	.-14     	; 0x5a6 <__udivmodqi4_loop>
 5b4:	80 95       	com	r24
 5b6:	08 95       	ret

000005b8 <__divmodhi4>:
 5b8:	97 fb       	bst	r25, 7
 5ba:	09 2e       	mov	r0, r25
 5bc:	07 26       	eor	r0, r23
 5be:	0a d0       	rcall	.+20     	; 0x5d4 <__divmodhi4_neg1>
 5c0:	77 fd       	sbrc	r23, 7
 5c2:	04 d0       	rcall	.+8      	; 0x5cc <__divmodhi4_neg2>
 5c4:	0c d0       	rcall	.+24     	; 0x5de <__udivmodhi4>
 5c6:	06 d0       	rcall	.+12     	; 0x5d4 <__divmodhi4_neg1>
 5c8:	00 20       	and	r0, r0
 5ca:	1a f4       	brpl	.+6      	; 0x5d2 <__divmodhi4_exit>

000005cc <__divmodhi4_neg2>:
 5cc:	70 95       	com	r23
 5ce:	61 95       	neg	r22
 5d0:	7f 4f       	sbci	r23, 0xFF	; 255

000005d2 <__divmodhi4_exit>:
 5d2:	08 95       	ret

000005d4 <__divmodhi4_neg1>:
 5d4:	f6 f7       	brtc	.-4      	; 0x5d2 <__divmodhi4_exit>
 5d6:	90 95       	com	r25
 5d8:	81 95       	neg	r24
 5da:	9f 4f       	sbci	r25, 0xFF	; 255
 5dc:	08 95       	ret

000005de <__udivmodhi4>:
 5de:	aa 1b       	sub	r26, r26
 5e0:	bb 1b       	sub	r27, r27
 5e2:	51 e1       	ldi	r21, 0x11	; 17
 5e4:	07 c0       	rjmp	.+14     	; 0x5f4 <__udivmodhi4_ep>

000005e6 <__udivmodhi4_loop>:
 5e6:	aa 1f       	adc	r26, r26
 5e8:	bb 1f       	adc	r27, r27
 5ea:	a6 17       	cp	r26, r22
 5ec:	b7 07       	cpc	r27, r23
 5ee:	10 f0       	brcs	.+4      	; 0x5f4 <__udivmodhi4_ep>
 5f0:	a6 1b       	sub	r26, r22
 5f2:	b7 0b       	sbc	r27, r23

000005f4 <__udivmodhi4_ep>:
 5f4:	88 1f       	adc	r24, r24
 5f6:	99 1f       	adc	r25, r25
 5f8:	5a 95       	dec	r21
 5fa:	a9 f7       	brne	.-22     	; 0x5e6 <__udivmodhi4_loop>
 5fc:	80 95       	com	r24
 5fe:	90 95       	com	r25
 600:	bc 01       	movw	r22, r24
 602:	cd 01       	movw	r24, r26
 604:	08 95       	ret

00000606 <_exit>:
 606:	f8 94       	cli

00000608 <__stop_program>:
 608:	ff cf       	rjmp	.-2      	; 0x608 <__stop_program>
